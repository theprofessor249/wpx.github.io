{
    "version": "https://jsonfeed.org/version/1",
    "title": "培新 • All posts by \"笔记类\" category",
    "description": "",
    "home_page_url": "https://theprofessor249.github.io",
    "items": [
        {
            "id": "https://theprofessor249.github.io/2021/07/13/%E7%AC%94%E8%AE%B0%E7%B1%BB/linux%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/",
            "url": "https://theprofessor249.github.io/2021/07/13/%E7%AC%94%E8%AE%B0%E7%B1%BB/linux%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/",
            "title": "Linux 共享文件夹",
            "date_published": "2021-07-13T06:15:12.274Z",
            "content_html": "<p><strong>Linux 共享文件夹</strong></p>\n<p>1.打开虚拟机，编辑虚拟机设置，选择选项中的共享文件夹；在右侧点击始终启用，选择好后点击添加按钮<br>，在弹口中，点击浏览，并在主机磁盘中建立一个文件夹，做为共享文件夹，选择启用该共享，点击完成。</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gse60gkm6vj318g0p0k6f.jpg\"></p>\n<p>2.进入ubuntu，安装VMwave  Tool<br><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gse60nlk3ej30gr0b5td6.jpg\"></p>\n<p>3.通过下列命令解压、执行，分别是下面的tar和sudo的两行</p>\n<p><strong>复制、压缩命令：</strong></p>\n<blockquote>\n<p>tar -czvf dir.tar.gz dir/          将dir目录打包成dir.tar.gz</p>\n</blockquote>\n<blockquote>\n<p>tar -cjvf dir.tar.bz2 dir/         将dir目录打包成dir.tar.bz2</p>\n</blockquote>\n<blockquote>\n<p>tar -zxvf dir.tar.gz                解压缩dir.tar.gz</p>\n</blockquote>\n<blockquote>\n<p>tar -jxvf dir.tar.bz2               解压缩dir.tar.bz2</p>\n</blockquote>\n<blockquote>\n<p>注意“-”前面有空格</p>\n</blockquote>\n<blockquote>\n<p>cp命令</p>\n</blockquote>\n<blockquote>\n<p>语法： cp [选项] 源文件或目录 目标文件或目录</p>\n</blockquote>\n<ul>\n<li>a 该选项通常在拷贝目录时使用。它保留链接、文件属性，并递归地拷贝目录，其作用等于dpR选项的组合。</li>\n</ul>\n<blockquote>\n<ul>\n<li>d 拷贝时保留链接。</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>f 删除已经存在的目标文件而不提示。</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>i 和f选项相反，在覆盖目标文件之前将给出提示要求用户确认。回答y时目标文件将被覆盖，是交互式拷贝。</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>p 此时cp除复制源文件的内容外，还将把其修改时间和访问权限也复制到新文件中。</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>r 若给出的源文件是一目录文件，此时cp将递归复制该目录下所有的子目录和文件。此时目标文件必须为一个目录名。</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>l 不作拷贝，只是链接文件。</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>例如：将/home/wally/test中 test.c 的文件复制到/local/arm 中，命令为：</p>\n</blockquote>\n<blockquote>\n<p>cd /wally/test</p>\n</blockquote>\n<blockquote>\n<p>ls</p>\n<p>sudo cp -i test.c  /local/arm</p>\n</blockquote>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gse60qpm84j30gp0b4qaw.jpg\"></p>\n<p>4.一路按Enter，最后得到</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gse60tkml1j30go0b5455.jpg\"></p>\n<p>5.执行mount命令，之后mnt/hgfs里就可以看到前面设置的共享目录</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gse60whifpj30gq0b4qbl.jpg\"></p>\n",
            "tags": []
        },
        {
            "id": "https://theprofessor249.github.io/2021/07/13/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%BA%94%E9%83%A8%E5%88%86%20%20%20%20%20Linux%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%91%98/",
            "url": "https://theprofessor249.github.io/2021/07/13/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%BA%94%E9%83%A8%E5%88%86%20%20%20%20%20Linux%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%91%98/",
            "title": "第五部分   Linux系统管理员",
            "date_published": "2021-07-13T06:15:12.270Z",
            "content_html": "<h1 id=\"启动关机的流程与加载程序\"><a href=\"#启动关机的流程与加载程序\" class=\"headerlink\" title=\"启动关机的流程与加载程序\"></a>启动关机的流程与加载程序</h1><h2 id=\"启动流程\"><a href=\"#启动流程\" class=\"headerlink\" title=\"启动流程\"></a>启动流程</h2><p><strong>启动过程需要加载核心，让核心来驱动整个硬件，启动过程如下：</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/9c0d8c3d51f6a189978aade18172391c\"></p>\n<h3 id=\"引导加载程序与核心载入\"><a href=\"#引导加载程序与核心载入\" class=\"headerlink\" title=\"引导加载程序与核心载入\"></a>引导加载程序与核心载入</h3><p><strong>整个主机启动后，第一个读取的地方是BIOS，BIOS里记录了主机板的芯片集与相关的设置，如CPU与接口设备的通信频率、启动设备的搜索顺序、硬盘的大小与类型、系统时间、外部总线是否启动即插即用、各接口设备的I/O地址，以及与CPU通信的IRQ中断等信息；获取BIOS设置值后，系统会根据BIOS的数据，进行加电自检，然后初始化硬件检测，并设置PnP设备，确定可启动的设备后，开始读取启动设备的数据；启动流程读到硬盘的过程中，第一个要读取的就是该硬盘的主引导记录，系统可以由主要启动区安装的引导加载程序开始执行核心识别的工作。</strong></p>\n<p><strong>选择以grub程序启动，系统就会到该记录区去读取该操作系统的核心。良好的引导加载程序会具有如下两项功能：</strong></p>\n<ul>\n<li><p>菜单功能</p>\n</li>\n<li><p>指向功能</p>\n</li>\n</ul>\n<p><strong>通过引导加载程序的管理而开始读取核心文件后，Linux就会将核心解压缩到主存储器中，并且利用核心的功能，开始测试与驱动各台外部设备，包括存储设备、CPU、网卡、声卡等。一般核心文件会放置/boot里，并且取名为/boot/vmlinux</strong></p>\n<p><strong>在加载核心的过程中，系统只会载入根目录，而且是以只读方式载入；有时为了某些功能可以用文件方式来读取；有时系统启动时，会建立虚拟盘，这就需要使用initrd以及linuxrc，利用引导加载程序的功能，可以在加载核心的时候，一起加载initrd的映像文件，系统会主动以initrd来建立虚拟盘，并且利用linuxrc程序来加载模块，linuxrc主要特点：</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/8828554dba19d37c988b6450f5c03fc6\"></p>\n<h3 id=\"第一个程序init及设置文件-etc-inittab与runlevel\"><a href=\"#第一个程序init及设置文件-etc-inittab与runlevel\" class=\"headerlink\" title=\"第一个程序init及设置文件/etc/inittab与runlevel\"></a>第一个程序init及设置文件/etc/inittab与runlevel</h3><p><strong>第一个执行的程序就是/sbin/init，它除了利用设置文件/etc/inittab来获取运行等级之外，还会通过运行等级的设置值启动不同的服务项目</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/744e67e69b45925055d78718e451ceec\"></p>\n<p><strong>运算等级：就是通过设置运行等级，来规定系统用不同的服务来启动；根据有无网络与有无XWindow，分为6个运行等级</strong></p>\n<ul>\n<li>/etc/inittab的信息</li>\n</ul>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/8052a22e1a3fb3b9b08e29b010f7166b\"></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/c23b8a52a02e2c2086412253591040d5\"></p>\n<p><strong>结论</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/1eb89494bb05f7e9346b87bc479265cf\"></p>\n<h3 id=\"init处理系统初始化流程（-etc-rc-d-rc-sysinit）\"><a href=\"#init处理系统初始化流程（-etc-rc-d-rc-sysinit）\" class=\"headerlink\" title=\"init处理系统初始化流程（/etc/rc.d/rc.sysinit）\"></a>init处理系统初始化流程（/etc/rc.d/rc.sysinit）</h3><p><strong>主要用于设置系统环境</strong></p>\n<p><strong>/etc/rc.d/rc.sysinit的主要工作：</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/05b15ca9f58e2ebaa1e9ef5eae47cc95\"><br><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/cd85aa507effc2879697835c97c3f96f\"></p>\n<h3 id=\"启动系统服务与相关启动设置文件\"><a href=\"#启动系统服务与相关启动设置文件\" class=\"headerlink\" title=\"启动系统服务与相关启动设置文件\"></a>启动系统服务与相关启动设置文件</h3><p><strong>加载核心让整个系统准备接受命令，然后再经过/etc/rc.d/rc.sysinit的系统模块与相关硬件信息的初始化。还需我们启动系统所需要的各项服务，主机才能提供相关的网络或主机功能。根据再/etc/inittab里提到的运行等级设置值，就可以决定启动的服务项目。</strong></p>\n<p><strong>各种不同的服务其实还是相互关联的</strong></p>\n<p><strong>S或K后面接的数字就是执行的顺序：</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/be2d2d160b60a5e26239faeb0d3b9bf1\"></p>\n<h3 id=\"用户自定义引导启动程序\"><a href=\"#用户自定义引导启动程序\" class=\"headerlink\" title=\"用户自定义引导启动程序\"></a>用户自定义引导启动程序</h3><p><strong>任何想要再启动时就执行的工作，直接写入/etc/rc.d/rc.local，那么该工作就会再启动的时候自动加载，而不等我们登录系统去启动；把自己制作的shell脚本的完整文件名写入/etc/rc.d/rc.local，启动时就睡执行我的shell脚本</strong></p>\n<h3 id=\"根据-etc-inittab设置加载终端或X-Window界面\"><a href=\"#根据-etc-inittab设置加载终端或X-Window界面\" class=\"headerlink\" title=\"根据/etc/inittab设置加载终端或X-Window界面\"></a>根据/etc/inittab设置加载终端或X-Window界面</h3><p><strong>在完成了系统所有服务的启动后，接下来Linux就会启动终端或X Window来等待用户登录，实际参考内容是/etc/inittab内的</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/ecc28e9606cb4da74596689a9a09d84e\"></p>\n<h3 id=\"其他启动相关事项\"><a href=\"#其他启动相关事项\" class=\"headerlink\" title=\"其他启动相关事项\"></a>其他启动相关事项</h3><p>1.关于模块：/etc/modprobe.conf</p>\n<p><strong>对核心提供的默认模块进行一些参数的设计</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/23e745b012127a32e82304b17587fdef\"></p>\n<p>2./etc/sysconfig/*</p>\n<p><strong>整个启动过程中，读取的服务相关设置文件都记录在/etc/sysconfig目录下</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/9588b4872993b0925e3af95f85892981\"></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/18635106d182a9e035cceb85ced7e11b\"></p>\n<h3 id=\"变换运行等级\"><a href=\"#变换运行等级\" class=\"headerlink\" title=\"变换运行等级\"></a>变换运行等级</h3><p><strong>运行等级的不同仅是/etc/rc.d/rc[0-6].d里启动的服务不同而已；根据启动是否自动进入不同运行等级的设置：</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/4e4c05bdf37c415695622638485f3d02\"></p>\n<p>如何将运行等级5切换至等级3</p>\n<p><strong>当执行init3时，系统会：</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/6be449d26e6b626f12c5d0acf5c31092\"></p>\n<p><strong>之后直接在bash中输入runlevel即可</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/cb849ae011ed659a42b646e0ecf96fe2\"></p>\n<h2 id=\"核心与核心模块\"><a href=\"#核心与核心模块\" class=\"headerlink\" title=\"核心与核心模块\"></a>核心与核心模块</h2><p><strong>在整个启动过程中，能否成功地驱动主机的硬件设备，是核心的工作，而核心一般都是压缩文件，因此在使用核心之前，就要将它解压缩后，才加载到主存储器中</strong></p>\n<p><strong>由于硬件的不断更新，当前核心都具有可读取模块化驱动程序的功能，可以将模块化想成是一个外挂程序，该外挂程序可能由硬件开发厂商提供</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/ec7aefe8722f26ac4bb593fb0169f078\"><br><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/671e9824296085539083ccd7a5be187c\"></p>\n<h3 id=\"核心模块与依赖性\"><a href=\"#核心模块与依赖性\" class=\"headerlink\" title=\"核心模块与依赖性\"></a>核心模块与依赖性</h3><p><strong>核心房子啊/lib/modules/‘uname -r’/kernel中</strong></p>\n<p>1<strong>Linux提供一些模块依赖性的解决方案，就是检查/lib/moduless/‘uname-r’/modules.dep文件，它记录了在核心支持的模块的各项依赖性</strong></p>\n<ul>\n<li>使用depmod命令建立该文件</li>\n</ul>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/2beb12b271b31268b8b07e0a56561d8f\"></p>\n<h3 id=\"核心模块的观察：lsmod、modinfo\"><a href=\"#核心模块的观察：lsmod、modinfo\" class=\"headerlink\" title=\"核心模块的观察：lsmod、modinfo\"></a>核心模块的观察：lsmod、modinfo</h3><p><strong>查看核心内的模块：</strong></p>\n<p><strong>即可查看核心模块，亦可检查模块文件</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/6c2cdfd5686441ae774f6081ed5f5fed\"></p>\n<h3 id=\"核心模块的加载与删除：insmod、modprobe、rmmod\"><a href=\"#核心模块的加载与删除：insmod、modprobe、rmmod\" class=\"headerlink\" title=\"核心模块的加载与删除：insmod、modprobe、rmmod\"></a>核心模块的加载与删除：insmod、modprobe、rmmod</h3><p>1.insmod</p>\n<p><strong>手动加载模块；insmod完全由用户自行加载一个完整文件名的模块，并不会主动地分析模块的依赖性</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/efff98efab91bedbe73e9c57b730eb68\"></p>\n<p>2.rmmod</p>\n<p><strong>删除模块</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/44de937618b8ed2d572db3228c59c159\"></p>\n<p>3.modprobe</p>\n<p><strong>modprobe会主动搜索modules.dep的内容，先解决了模块的依赖性后，才决定需要加载的模块</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/75f83239722c9e4d77183173b36204d0\"></p>\n<h3 id=\"核心模块的额外参数设置：-etc-modprobe-conf\"><a href=\"#核心模块的额外参数设置：-etc-modprobe-conf\" class=\"headerlink\" title=\"核心模块的额外参数设置：/etc/modprobe.conf\"></a>核心模块的额外参数设置：/etc/modprobe.conf</h3><p><strong>若想修改某些模块的额外参数设置，就在这个文件内设置，对于I/O与IRQ的设置</strong></p>\n<h2 id=\"引导加载程序：Grub\"><a href=\"#引导加载程序：Grub\" class=\"headerlink\" title=\"引导加载程序：Grub\"></a>引导加载程序：Grub</h2><h3 id=\"引导加载程序的功能与意义\"><a href=\"#引导加载程序的功能与意义\" class=\"headerlink\" title=\"引导加载程序的功能与意义\"></a>引导加载程序的功能与意义</h3><p><strong>在BIOS读完信息后，接下来到第一个启动设备的MBR去读取引导加载程序，这个引导加载程序可以具有菜单功能，而且还能辨识硬盘的文件系统，并且指向核心文件，以将它读入主存储器中</strong></p>\n<p><strong>MBR是整个硬盘的第一个扇区，整个大小不可能超过512KB，加载程序功能这么强，不仅仅占用少量的容量；是因为我们将引导加载程序分成两个阶段来执行：</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/8712a299d6a236b8fefcec9f41d7c9e2\"></p>\n<p><strong>我们可以将引导加载程序安装在超级块</strong></p>\n<p><strong>引导加载程序可以做到：</strong></p>\n<ul>\n<li><p>引导加载程序可以直接指定并取用核心文件，加载到主存储器中</p>\n</li>\n<li><p>也可以将加载程序的控制权移交给下一个加载程序</p>\n</li>\n</ul>\n<p><strong>引导加载程序除了可以直接指定核心文件来启动之外，也可以指定某个超级快中的引导加载程序</strong></p>\n<p><strong>Linxu可以选择将引导加载程序安装在MBR或超级快中，但是，Windows系统则几乎默认强制会同时安装在MBR与超级块中，所以，我们说要安装多重操作系统时，最好先安装Windows再安装Linux，因为若先安装Linux，则后安装Windows时，会强制将MBR的引导加载程序覆盖掉，这样将无法以Windows的引导加载程序进入Linux</strong></p>\n<h3 id=\"grub的设置文件-boot-grub-menu-lst与安装类型\"><a href=\"#grub的设置文件-boot-grub-menu-lst与安装类型\" class=\"headerlink\" title=\"grub的设置文件/boot/grub/menu.lst与安装类型\"></a>grub的设置文件/boot/grub/menu.lst与安装类型</h3><p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/9c8fa3b22f4981a4cc040783e0fd79dc\"></p>\n<p>1.与硬盘的关系</p>\n<p><strong>grub主程序是安装在MBR中，并且动态地搜索设置文件的信息，它必须认识硬盘</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/1208e0d1f42758d3f986494369e228f4\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/e8321b599b2b0ae080363cb189f861b4\"></p>\n<p>2./boot/grup/menu.lst设置文件</p>\n<p><strong>grub的设置文件内容/boot/grub/menu.lst</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/1f0e71d5810dd419e3b66d880ce6f438\"></p>\n<p>(1)直接指定核心启动</p>\n<p><strong>指定核心启动，就需要用到initrd的RAM  Disk设置文件（通常放在/boot下面）；以grub的硬盘识别方式，找出完整的kernel与initrd文件名</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/ed6ee205b0765123b141eb7509ce5c27\"></p>\n<p>（2）利用链式加载程序（chain loader）的方式</p>\n<p><strong>所谓链式加载程序，仅是将控制权交给下一个引导加载程序而已，所以grub并不需要认识与找出核心文件，它只是将boot的控制权交给下一个超级快或者是MBR内的引导加载程序</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/9241b8f5d29db4dfef02935611d48569\"></p>\n<h3 id=\"测试与安装grub\"><a href=\"#测试与安装grub\" class=\"headerlink\" title=\"测试与安装grub\"></a>测试与安装grub</h3><p><strong>必须使用grub-install将一些必要的文件复制到/boot/grub</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/d5e10dd26c2026ae78cf28307680a155\"></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/309d74ae44a1bceaca4bc57940d987c2\"></p>\n<p><strong>介绍几个有用的命令及安装步骤</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/2e681844b5db9d4edc9138013da01c05\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/fdc960dcffb0b6dfcd42e0bd4d6db478\"></p>\n<h3 id=\"启动前的额外功能修改\"><a href=\"#启动前的额外功能修改\" class=\"headerlink\" title=\"启动前的额外功能修改\"></a>启动前的额外功能修改</h3><p><strong>当Linux正在进行启动，我们按下任意键，就可以进行grub的在线编辑功能</strong></p>\n<ul>\n<li>若按如下按键</li>\n</ul>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/b1fd375c629eb395de3ac4e040214cfc\"></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/28589a73b503411f8ae881f4f8606ad1\"></p>\n<h3 id=\"核心功能的vga设置\"><a href=\"#核心功能的vga设置\" class=\"headerlink\" title=\"核心功能的vga设置\"></a>核心功能的vga设置</h3><p><strong>vga：主要设置终端tty1-tty6的分辨率与颜色质量；   对应表如下：</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/869b479671a2024112feb2a895714adc\"></p>\n<h2 id=\"引导加载程序：LILO\"><a href=\"#引导加载程序：LILO\" class=\"headerlink\" title=\"引导加载程序：LILO\"></a>引导加载程序：LILO</h2><p><strong>LILO是Linux最早的引导加载程序。主要使用/etc/lilo.conf设置文件，然后再以lilo主程序将该设置内容写入启动区中</strong></p>\n<h3 id=\"LILO的设置文件-etc-lilo-conf\"><a href=\"#LILO的设置文件-etc-lilo-conf\" class=\"headerlink\" title=\"LILO的设置文件/etc/lilo.conf\"></a>LILO的设置文件/etc/lilo.conf</h3><p>设置文件/etc/lilo.conf同样分为两部分，分别是LILO整体环境设置部分，与每个启动项目核心文件名称规范部分</p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/37cf9a1bc57352e5108596eb4b3a4a65\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/bed7372f7f21a8f8b2867d5b7e358f57\"></p>\n<h3 id=\"测试与安装LILO引导加载程序\"><a href=\"#测试与安装LILO引导加载程序\" class=\"headerlink\" title=\"测试与安装LILO引导加载程序\"></a>测试与安装LILO引导加载程序</h3><p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/130c874283068f74126564c8559d7ee8\"></p>\n<p><strong>lilo的安装</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/c6aad9967b68c53da98c537d5f40d8f8\"></p>\n<h2 id=\"解决启动过程的问题\"><a href=\"#解决启动过程的问题\" class=\"headerlink\" title=\"解决启动过程的问题\"></a>解决启动过程的问题</h2><h3 id=\"忘记root密码的解决方案\"><a href=\"#忘记root密码的解决方案\" class=\"headerlink\" title=\"忘记root密码的解决方案\"></a>忘记root密码的解决方案</h3><p><strong>忘记root密码：只要能够进入并且载入（/），然后修改/etc/shadow内的root密码栏重新启动后，root就不需要密码即可登录。过程如下：</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/08225195c011dac805ab3e63912e99e8\"></p>\n<h3 id=\"利用chroot切换到另一个硬盘\"><a href=\"#利用chroot切换到另一个硬盘\" class=\"headerlink\" title=\"利用chroot切换到另一个硬盘\"></a>利用chroot切换到另一个硬盘</h3><p><strong>chroot：可以暂时将根目录移到某个目录中，然后区处理某个问题，最后再离开该根目录而回到原来的系统中</strong></p>\n<p><strong>同样可以将Linux硬盘拔到另一台Linux主机上，然后用这个chroot来切换，以处理硬盘问题，做法如下：</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/2dee28ac8f890d2f6d4a93748993afa1\"></p>\n<h1 id=\"源码与Tarball套件管理程序\"><a href=\"#源码与Tarball套件管理程序\" class=\"headerlink\" title=\"源码与Tarball套件管理程序\"></a>源码与Tarball套件管理程序</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p><strong>如果想在Linux服务器上运行网页服务器，一定要安装网页服务器的套件；Linux上的套件几乎都是经过GPL的授权，所以每个套件均提供源码，可以自行修改该程序代码</strong></p>\n<h3 id=\"什么是开放源码、编译器与可执行文件\"><a href=\"#什么是开放源码、编译器与可执行文件\" class=\"headerlink\" title=\"什么是开放源码、编译器与可执行文件\"></a>什么是开放源码、编译器与可执行文件</h3><p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/24a7f7578809c50bf625fdd6863dee64\"></p>\n<h3 id=\"什么是函数库\"><a href=\"#什么是函数库\" class=\"headerlink\" title=\"什么是函数库\"></a>什么是函数库</h3><p><strong>Linux系统通常已提供一个可以进行身份验证的模块，称为PAM，这个PAM提供的功能可以让很多程序在执行的时候，除了可以验证用户登录的信息外，还可以将身份确定的数据记录在登陆文件；函数库分为动态函数库与静态函数库</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/0c8baf2319fab57e47537bd8d977a428\"></p>\n<p><strong>Linux的核心提供很多的核心相关函数库与外部参数，这些核心相关信息大多数放在/usr/include、/lib、/usr/lib中</strong></p>\n<h3 id=\"什么是make与configure\"><a href=\"#什么是make与configure\" class=\"headerlink\" title=\"什么是make与configure\"></a>什么是make与configure</h3><p><strong>使用类似gcc的编译器进行编译的过程中，除了每个主程序与子程序需要写上编译过程的命令外，还需要写上最终的连接程序。当代码比较复杂时，可以使用make命令的相关功能来简化编译过程的命令</strong></p>\n<h3 id=\"什么是Tarball的套件\"><a href=\"#什么是Tarball的套件\" class=\"headerlink\" title=\"什么是Tarball的套件\"></a>什么是Tarball的套件</h3><p>** 由于纯文本文件是很浪费硬盘空间的一种文件格式，如果想去下载一个核心文件，应该将这些源码通过文件的打包与压缩，将文件的数量与容量减小，而Tarball就是将套件的所有源码文件先以tar打包，然后再压缩，最常见的就是gzip来压缩。因为使用了tar与gzip的功能，tarball文件一般的扩展名就会写成*.tar.gz或简单写为*.tgz,Tarball套件解压缩后，里面的文件通常会有: **</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/5f6bf24ee2f22e7623e3f2039c1f58da\"></p>\n<h3 id=\"安装与升级套件\"><a href=\"#安装与升级套件\" class=\"headerlink\" title=\"安装与升级套件\"></a>安装与升级套件</h3><p><strong>为什么升级Tarball的套件</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/631f861b701351e5d1b7499656257625\"></p>\n<p><strong>Tarball的基本安装流程</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/484eff772d2793001edbf769862a0f86\"></p>\n<h2 id=\"一个简单的范例\"><a href=\"#一个简单的范例\" class=\"headerlink\" title=\"一个简单的范例\"></a>一个简单的范例</h2><p><strong>生成动态库</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/5ad5d00416c34f36cac4e1855a17ec93\"></p>\n<p><strong>生成静态库</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/ce764c52fe9415effdce33f1588a0240\"></p>\n<p><strong>完整调试</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/d7036f36abb406f3389c6a3151ea4621\"></p>\n<h3 id=\"显示Hello-World\"><a href=\"#显示Hello-World\" class=\"headerlink\" title=\"显示Hello  World\"></a>显示Hello  World</h3><p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/cff71a3d8f955f431d57fe91565b66a6\"></p>\n<p><strong>hello.c就是源码，gcc就是编译器，a.out就是编译成功的可执行二进制文件</strong></p>\n<h3 id=\"编译子程序\"><a href=\"#编译子程序\" class=\"headerlink\" title=\"编译子程序\"></a>编译子程序</h3><p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/108ff62589cb16cc8022fcf26578f6c6\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/fa8559dc949fe8523c975193f12a0324\"></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/8a334354ab6aaf8bbb7ccc1bbbbbd64c\"></p>\n<h3 id=\"加入函数库\"><a href=\"#加入函数库\" class=\"headerlink\" title=\"加入函数库\"></a>加入函数库</h3><p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/a73137d77f326a2a2b1517a74069095c\"></p>\n<p><strong>直接编译，会显示错误消息，表示没有sin的相关定义参考值，这是因为再C语言里的sin函数是写在libm.so函数库中，而我们并没有源码里加入相关的说明，所以需要在编译与连接的时候，将这个函数库连接进执行文件</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/4894f5a06f2534e9c7e48b5346ee877c\"></p>\n<p><strong>由于Linux默认是将函数库放在/lib与/usr/lib中，所以不写-L/lib和-L/usr/lib也没有关系。不过，如果使用的函数库并非放在这两个目录下，那么-L/path就很重要，否则找不到函数库</strong></p>\n<h3 id=\"使用gcc\"><a href=\"#使用gcc\" class=\"headerlink\" title=\"使用gcc\"></a>使用gcc</h3><p><strong>gcc为Linux最标准的编译器，gcc是由GNU维护；下面为比较常见的参数：</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/67c4660bafcf81c9791e2a53844cf017\"></p>\n<h2 id=\"make的简单用法\"><a href=\"#make的简单用法\" class=\"headerlink\" title=\"make的简单用法\"></a>make的简单用法</h2><p><strong>make可以简化编译过程执行的命令</strong></p>\n<h3 id=\"为社么要用make\"><a href=\"#为社么要用make\" class=\"headerlink\" title=\"为社么要用make\"></a>为社么要用make</h3><p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/a6b8a1162bd17f19d26bbed4366362b3\"></p>\n<p><strong>仅写出main需要的目标文件，结果make会主动去判断每个目标文件相关的源码文件，并直接编译，最后再直接进行连接</strong></p>\n<p><strong>make的好处：</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/b1f15eb05d0a4a10ed02e4321baf2fee\"></p>\n<h3 id=\"make的基本语法与变量\"><a href=\"#make的基本语法与变量\" class=\"headerlink\" title=\"make的基本语法与变量\"></a>make的基本语法与变量</h3><p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/dbc38ca29dbb311c9423e61a336b73c6\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/7caddb4442ee504ae582aaa990b15c43\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/d27906e2d66ca47b77d98a1edb2e6be1\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/5b2f56123c9bdacae7764512dbcd5472\"></p>\n<h2 id=\"Tarball的管理与建议\"><a href=\"#Tarball的管理与建议\" class=\"headerlink\" title=\"Tarball的管理与建议\"></a>Tarball的管理与建议</h2><p><strong>知道了源码的相关信息之后，还需要了解如何使用具有源码的Tarball来建立属于自己的套件；Tarball源码程序应该可以再大部分环境安装成功</strong></p>\n<h3 id=\"使用源码管理套件所需要的基础套件\"><a href=\"#使用源码管理套件所需要的基础套件\" class=\"headerlink\" title=\"使用源码管理套件所需要的基础套件\"></a>使用源码管理套件所需要的基础套件</h3><p><strong>创建一个二进制执行文件需要很多的文件，包括下面的基础套件：</strong></p>\n<ul>\n<li><p>gcc或cc等C语言编译器</p>\n</li>\n<li><p>make及autoconfig等套件</p>\n</li>\n<li><p>需要核心提供的函数库文件以及相关的包含文件</p>\n</li>\n</ul>\n<p><strong>很多套件再开发时都直接取用系统核心提供的函数库与包含文件，这样才可以与操作系统兼容，尤其是驱动程序方面的套件，常常需要核心提供的相关信息</strong></p>\n<h3 id=\"Tarball安装的基本步骤\"><a href=\"#Tarball安装的基本步骤\" class=\"headerlink\" title=\"Tarball安装的基本步骤\"></a>Tarball安装的基本步骤</h3><p><strong>安装的基本操作步骤如下：</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/37bbd6a848f1f5cc07bc5164ab1143a8\"><br><img data-src=\"!%5B%5D(https://img04.sogoucdn.com/app/a/100520146/ccdb14a2538f6d3eb687ae1dd8a0c7f0)\"></p>\n<p><strong>上面只要有一个步骤无法成功，那么后续的步骤就完全没有办法进行</strong></p>\n<h3 id=\"Tarball套件安装的注意事项（如何删除、升级）\"><a href=\"#Tarball套件安装的注意事项（如何删除、升级）\" class=\"headerlink\" title=\"Tarball套件安装的注意事项（如何删除、升级）\"></a>Tarball套件安装的注意事项（如何删除、升级）</h3><p><strong>etc、lib、man、bin等目录中，分别表示“设置文件、函数库、执行文件、在线帮助文件”</strong></p>\n<p><img data-src=\"!%5B%5D(https://img02.sogoucdn.com/app/a/100520146/d52d04278b35893a9cee0c96a97910da)\"></p>\n<p><strong>单一套件的文件都在同一个目录之下，要删除该套件就简单多了。只要将该目录删除，即可视为该套件已被删除。</strong></p>\n<h3 id=\"简单的范例：使用ntp\"><a href=\"#简单的范例：使用ntp\" class=\"headerlink\" title=\"简单的范例：使用ntp\"></a>简单的范例：使用ntp</h3><p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/ecfe44c20135788e89aaef11ed7c69dc\"><br><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/e2f5c8fbbc40df511f6e1f4beeffacc9\"></p>\n<h3 id=\"使用patch更新源码\"><a href=\"#使用patch更新源码\" class=\"headerlink\" title=\"使用patch更新源码\"></a>使用patch更新源码</h3><p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/69a578ff16cd88f411128b70692c9fbd\"></p>\n<h2 id=\"函数库管理\"><a href=\"#函数库管理\" class=\"headerlink\" title=\"函数库管理\"></a>函数库管理</h2><p><strong>很多套件之间都会互相采用彼此提供的函数库来运行特殊功能，函数库根据是否被编译到程序内部而分为动态与静态函数库</strong></p>\n<h3 id=\"动态与静态函数库\"><a href=\"#动态与静态函数库\" class=\"headerlink\" title=\"动态与静态函数库\"></a>动态与静态函数库</h3><p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/878480086d788786346d7b89cd2a2060\"></p>\n<p><strong>在linux版本中，比较倾向于使用动态函数库；如果使用太多的静态函数库，那么升级一个函数库时，都会对整个系统造成很大的冲击。如果其他相关的执行文件也要同时重新编译，动态函数库就有用得多，只要升级动态函数库，其他套件根本无须变动</strong></p>\n<p><strong>绝大多数的函数库都放在：</strong></p>\n<ul>\n<li><p>/usr/lib</p>\n</li>\n<li><p>/lib</p>\n</li>\n</ul>\n<h3 id=\"ldconfig与-etc-ld-so-conf\"><a href=\"#ldconfig与-etc-ld-so-conf\" class=\"headerlink\" title=\"ldconfig与/etc/ld.so.conf\"></a>ldconfig与/etc/ld.so.conf</h3><p><strong>将常用的动态函数库加载到内存中（高速缓存，cache），当软件套件要采用动态函数库时，就不需要重新从硬盘里读出，这样可以提高动态函数库的读取速度。这时候需要idconfig与/etc/ld.so.conf的帮助</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/5330f235be104a2d92053c1336144ee7\"></p>\n<h3 id=\"ldd\"><a href=\"#ldd\" class=\"headerlink\" title=\"ldd\"></a>ldd</h3><p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/9453bd441350f6ebf474af7875227b99\"></p>\n<h2 id=\"检测软件正确性：md5sum\"><a href=\"#检测软件正确性：md5sum\" class=\"headerlink\" title=\"检测软件正确性：md5sum\"></a>检测软件正确性：md5sum</h2><p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/1ee537fec32c9337453f328c7d468bc9\"><br><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/46f1ddb5e0e37f64d3c735a3d6a34be9\"></p>\n<p><strong>这几个文件容易被修改，因外很多木马程序在执行的时候，还是会执行PID，为了不被root追查出来，所以会修改这些价差任务分配的文件。如果可以替这些文件建立指纹数据库（就是使用md5sum检查一次，将该文件指纹记录下来，然后以shell脚本的方式由程序自行来检查指纹表是否不同），那么文件系统就会比较安全</strong></p>\n<h2 id=\"重点回顾\"><a href=\"#重点回顾\" class=\"headerlink\" title=\"重点回顾\"></a>重点回顾</h2><p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/93719747a52ced4bee42cff62103fd70\"></p>\n<h1 id=\"RPM与SRPM套件管理程序\"><a href=\"#RPM与SRPM套件管理程序\" class=\"headerlink\" title=\"RPM与SRPM套件管理程序\"></a>RPM与SRPM套件管理程序</h1><h2 id=\"简介-1\"><a href=\"#简介-1\" class=\"headerlink\" title=\"简介\"></a>简介</h2><h3 id=\"什么是RPM与SRPM\"><a href=\"#什么是RPM与SRPM\" class=\"headerlink\" title=\"什么是RPM与SRPM\"></a>什么是RPM与SRPM</h3><p><strong>RPM是以一种数据库记录的方式将所需的套件安装到Linux主机的一套管理程序。它最大的特点就是将要安装的套件先编译并打包，通过包装好的套件中默认的数据库记录，记录这个套件在安装的时候需要的依赖属性模块</strong></p>\n<h3 id=\"什么是i386、i586、i686、noarch\"><a href=\"#什么是i386、i586、i686、noarch\" class=\"headerlink\" title=\"什么是i386、i586、i686、noarch\"></a>什么是i386、i586、i686、noarch</h3><p><strong>RPM与SRPM的格式分别为：</strong></p>\n<p><strong>**</strong>.rpm     &lt;==RPM的格式，已经经过编译包装完成的rpm文件</p>\n<p><strong>**</strong>.src.rpm  &lt;==SRPM的格式、包含未编译的源码信息</p>\n<p><strong>套件版本信息：</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsfcmqwexzj30m70ksq9m.jpg\"></p>\n<h3 id=\"RPM的优点\"><a href=\"#RPM的优点\" class=\"headerlink\" title=\"RPM的优点\"></a>RPM的优点</h3><p>RPM的优点：</p>\n<ul>\n<li><p>RPM文件本身为已经编译过的二进制文件，可以让客户端的用户免除重新编译的麻烦</p>\n</li>\n<li><p>RPM文件在安装之前，RPM会先检查系统的硬盘容量、操作系统版本等，避免文件安装错误</p>\n</li>\n<li><p>RPM文件本身提供套件版本信息、相关套件名称、套件用途说明、套件所含文件等信息，便于了解套件</p>\n</li>\n<li><p>RPM使用数据库记录RPM文件的相关参数，便于升级、删除、查询与验证</p>\n</li>\n</ul>\n<h3 id=\"解决RPM属性依赖问题\"><a href=\"#解决RPM属性依赖问题\" class=\"headerlink\" title=\"解决RPM属性依赖问题\"></a>解决RPM属性依赖问题</h3><p><strong>由于RPM类型的文件里含有属性相关的消息，如果我们通过分析这些消息，再让程序自行去寻找未安装的前驱套件，并事先安装，这样就解决了属性相关的问题。这就是当前urpmi/apt/yum等服务的由来。这些服务都是通过分析RPM文件的依赖信息，然后自行取得相关的套件并完成安装</strong></p>\n<h2 id=\"RPM套件管理程序\"><a href=\"#RPM套件管理程序\" class=\"headerlink\" title=\"RPM套件管理程序\"></a>RPM套件管理程序</h2><h3 id=\"RPM的默认安装路径\"><a href=\"#RPM的默认安装路径\" class=\"headerlink\" title=\"RPM的默认安装路径\"></a>RPM的默认安装路径</h3><p><strong>RPM类型的文件在安装的时候，会先去读取文件中记载的配置参数内容，然后将该数据用来比较Linux系统的环境。例如要安装SSH，需先安装OpenSSL，如果没有安装OpenSSl的话，SSH就不能安装。这些都是RPM环境的要求，如果环境相符就给予安装，如果不符会显示出不符合的内容。等到安装完毕之后，rpm就会将套件的信息写入/var/lib/rpm目录，以后在进行查询或预计要升级的时候，相关信息就会由/var/lib/rpm目录的内容数据来提供</strong></p>\n<p><strong>由于RPM有数据库来记录套件相关的信息，所以RPM类型的套件所拥有的文件都放在系统默认放置的目录下，如下：</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsfcn0qv3oj30l106i752.jpg\"></p>\n<h3 id=\"RPM安装\"><a href=\"#RPM安装\" class=\"headerlink\" title=\"RPM安装\"></a>RPM安装</h3><p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsfcng57yrj30ls0dlwh5.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsfcnp3ot7j30km0j5q8g.jpg\"></p>\n<h3 id=\"RPM升级与更新\"><a href=\"#RPM升级与更新\" class=\"headerlink\" title=\"RPM升级与更新\"></a>RPM升级与更新</h3><p><strong>两种升级方式：</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsfcnp3ot7j30km0j5q8g.jpg\"></p>\n<h3 id=\"RPM查询\"><a href=\"#RPM查询\" class=\"headerlink\" title=\"RPM查询\"></a>RPM查询</h3><p><strong>RPM查询的地方是在/var/lib/rpm目录下的数据库文件，另外RPM也可以查询文件内的信息</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsfcoefb83j30jp0jwaf5.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsfcohg28hj30k4051q3v.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsfconz4sqj30ka0jwn25.jpg\"></p>\n<h3 id=\"RPM验证与数字签名\"><a href=\"#RPM验证与数字签名\" class=\"headerlink\" title=\"RPM验证与数字签名\"></a>RPM验证与数字签名</h3><p><strong>验证功能主要是向系统管理员提供一种有用的管理机制。其方式是使用/var/lib/rpm下面的数据库内容，来比较当前Linux系统环境的所有套件文件。当有数据丢失，或因为误删了某个套件的文件，或不小心修改了某个套件的文件内容，就用这种简单方法来验证原来的文件系统，以了解这到底是修改了那些文件数据</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsfcp1vlorj30l00bpgo2.jpg\"></p>\n<h3 id=\"RPM卸载与重建数据库\"><a href=\"#RPM卸载与重建数据库\" class=\"headerlink\" title=\"RPM卸载与重建数据库\"></a>RPM卸载与重建数据库</h3><p><strong>卸载就是将套件解除安装，卸载过程一定要自上而下。以rp-pppoe为例，这个套件主要根据ppp套件来安装，要卸载ppp的时候，就必须要先卸载rp-pppoe，否则就会发生结构问题</strong></p>\n<p><strong>由于我们一直修改一些文件内容，导致系统数据库有点乱，这时候可以使用-rebuilddb来重建rpm的数据库</strong></p>\n<p><strong>两种方法如下：</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsfcpaouisj30kb01yt8t.jpg\"></p>\n<h1 id=\"认识与分析登录文件\"><a href=\"#认识与分析登录文件\" class=\"headerlink\" title=\"认识与分析登录文件\"></a>认识与分析登录文件</h1><h2 id=\"什么是登录文件\"><a href=\"#什么是登录文件\" class=\"headerlink\" title=\"什么是登录文件\"></a>什么是登录文件</h2><p><strong>详细而准确地记录或备份系统的登录文件，就是记录系统活动记录的文件。Linux主机在后台有相当多的守护程序在进行，这些程序总会有一些显示信息，这些信息就记录在登录文件中</strong></p>\n<p><strong>登录文件的重要功能：</strong></p>\n<ul>\n<li><p>解决系统故障</p>\n</li>\n<li><p>解决网络服务问题</p>\n</li>\n<li><p>记录登录信息</p>\n</li>\n</ul>\n<p><strong>常见的登录文件：</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsfg2g9agxj30ka06s40w.jpg\"></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsfg2nvrfzj30ko02fgmb.jpg\"></p>\n<h2 id=\"登录文件的记录：syslogd\"><a href=\"#登录文件的记录：syslogd\" class=\"headerlink\" title=\"登录文件的记录：syslogd\"></a>登录文件的记录：syslogd</h2><p><strong>Linux开机启动，检查syslogd是否启动命令：</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsfg2uecjaj30kk04xdgr.jpg\"></p>\n<h3 id=\"登录文件内容的一般格式\"><a href=\"#登录文件内容的一般格式\" class=\"headerlink\" title=\"登录文件内容的一般格式\"></a>登录文件内容的一般格式</h3><p><strong>sysylog记录下来的数据主要有：</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsfg31pzf7j30k102fdg8.jpg\"></p>\n<p><strong>查看/var/log/secure内容</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsfg3ammonj30lw0d00vr.jpg\"></p>\n<h3 id=\"登录文件的配置文件：-etc-syslog-conf\"><a href=\"#登录文件的配置文件：-etc-syslog-conf\" class=\"headerlink\" title=\"登录文件的配置文件：/etc/syslog.conf\"></a>登录文件的配置文件：/etc/syslog.conf</h3><p><strong>syslogd可以负责记录主机产生的所有信息，而这些信息本身是有严重等级之分的</strong></p>\n<p>/etc/syslog.conf的语法如下：</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsfg3konp8j30kb0bowgy.jpg\"></p>\n<p><strong>为了让不同的信息放到不同文件中，以便分门别类地进行登录文件的管理，将各种类别的服务登录文件记录在不同的文件里，就是/etc/syslog.conf所要做的工作</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsfg44y8rvj30ma0ewdmb.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsfg4kzx9ej30lw06idhi.jpg\"></p>\n<p><strong>设置syslogd的案例：</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsfg4rrpjmj30im07djtd.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsfg52iycij30il0b8wha.jpg\"></p>\n<p><strong>/etc/syslog.conf文件的默认内容</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsfg5e281rj30k70imjvp.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsfg5k0edbj30k701w74a.jpg\"></p>\n<p><strong>将所有信息都额外写入到/var/log/admin.log</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsfg5u1a46j30ku0ccjsm.jpg\"></p>\n<h3 id=\"登录文件的安全性设置\"><a href=\"#登录文件的安全性设置\" class=\"headerlink\" title=\"登录文件的安全性设置\"></a>登录文件的安全性设置</h3><p><strong>1.我们通过隐藏的属性来设置登录文件，使之只可以增加数据，但不能被删除，或许可以达到保护的作用；2.设置基本的隐藏属性，就是在Linux文件属性提过的lsattr与chattr。如果将一个文件以chattr设置i属性，那么，该文件连root都不能删掉，而且也不能新增数据，真安全，但是，如此一来登陆文件的功能也就消失了，因为没有办法写入；如果我们使用a属性，登录文件如果设置了这个属性，那么它将只能增加，而不能删除，这项非常符合登录文件的需求。</strong></p>\n<p><strong>设置与删除—文件从此就只能增加，而不能删除，只有root能执行删除-a命令</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsfg61yueij30ki02c74e.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsfg7aqtiyj30km01cdfp.jpg\"></p>\n<h3 id=\"登录文件主机的简单设置\"><a href=\"#登录文件主机的简单设置\" class=\"headerlink\" title=\"登录文件主机的简单设置\"></a>登录文件主机的简单设置</h3><p><strong>如何实现让一台主机成为登录文件主机，用它记录所有10台Linux主机的信息</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsfg7nzducj30lg0c80vf.jpg\"></p>\n<p><strong>通过这个操作，Linux主机可以接受来自其他主机的登录信息</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsfg7i4q09j30ld04r0u0.jpg\"></p>\n<h1 id=\"Linux备份策略\"><a href=\"#Linux备份策略\" class=\"headerlink\" title=\"Linux备份策略\"></a>Linux备份策略</h1><h2 id=\"谁需要备份数据\"><a href=\"#谁需要备份数据\" class=\"headerlink\" title=\"谁需要备份数据\"></a>谁需要备份数据</h2><p><strong>备份时应考虑的因素有：</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsgguuztrnj30kj04kdhb.jpg\"></p>\n<h2 id=\"备份哪些Linux数据\"><a href=\"#备份哪些Linux数据\" class=\"headerlink\" title=\"备份哪些Linux数据\"></a>备份哪些Linux数据</h2><ul>\n<li>主机系统需要备份的文件</li>\n</ul>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsggvephg6j30j1042q38.jpg\"></p>\n<ul>\n<li>网络服务的数据库方面</li>\n</ul>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsggvn8ei7j30j303s74z.jpg\"></p>\n<ul>\n<li>推荐备份的目录</li>\n</ul>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsggvuu71dj30j403q3yp.jpg\"></p>\n<ul>\n<li>不需要备份的目录</li>\n</ul>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsggw38w76j30j203lmxo.jpg\"></p>\n<h2 id=\"选择备份设备\"><a href=\"#选择备份设备\" class=\"headerlink\" title=\"选择备份设备\"></a>选择备份设备</h2><p><strong>由于主机被盗，所有的数据将会丢失，会造成严重的后果，远程备份系统就显得尤为重要，远程备份，就是将系统数据备份到其他地方，通常使用Tap、Zip、CD-RW、CD-RW以及备份用抽取式硬盘与携带式硬盘等。注意事项如下：</strong></p>\n<ul>\n<li><p>速度要求：在Linux主机上备份也很消耗系统资源，需要将系统数据复制到其他设备</p>\n</li>\n<li><p>存储容量：抽取式硬盘需要将系统冷启动，而系统内的硬盘不安全，携带式硬盘不容易保存，所以大容量的Tape颇具优势，携带方便，存放容易</p>\n</li>\n<li><p>经费与数据可靠性</p>\n</li>\n</ul>\n<p><strong>常见的设备号：</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsggwdcnzsj30jx03r0tg.jpg\"></p>\n<h2 id=\"备份的种类\"><a href=\"#备份的种类\" class=\"headerlink\" title=\"备份的种类\"></a>备份的种类</h2><ul>\n<li><p>完全备份：就是将根目录/里的所有数据都备份下来；刚刚完成的系统应当先做备份。可以对系统进行最干净的还原。有时候系统被入侵，但root并不知道，这时候拿最近的备份数据来还原是没用的，因为连同被怪客修改过的文件也被我们备份下来了。所以，将最原始系统的数据备份下来很重要</p>\n</li>\n<li><p>部分备份：部分备份只备份最重要的数据。系统出问题时，只要重新安装即可，只要妥善备份中重点数据，还原系统就可以很快。只需备份账号、服务设置、原来系统的数据库等就可以</p>\n</li>\n</ul>\n<h2 id=\"选择备份工具\"><a href=\"#选择备份工具\" class=\"headerlink\" title=\"选择备份工具\"></a>选择备份工具</h2><p>1.完整备份的工具 </p>\n<p><strong>一般用cpio进行完整备份是很好的选择，注意的是配合find才可以正常操作。另外，使用cpio时需要配合另一个完全用来备份的硬盘或磁带机</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsgh1ihh7sj30k4071ab8.jpg\"></p>\n<p>2.部分备份的基础工具</p>\n<p><strong>想将每天的数据都保存为不同的文件，通过日期分辨文件的新旧，可以这样做：</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsggwqbsekj30jj035mxq.jpg\"></p>\n<p><strong>这样就能将mysql的数据库压缩备份至mysql.2005-10-25.tgz文件中，并且日期会每天都不一样</strong></p>\n<h2 id=\"备份策略实例\"><a href=\"#备份策略实例\" class=\"headerlink\" title=\"备份策略实例\"></a>备份策略实例</h2><p><strong>编写两个简单的脚本，分别存储自己的数据，其备份策略是：</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsgh2rhml2j30jf040gmp.jpg\"></p>\n<h3 id=\"日常备份行为\"><a href=\"#日常备份行为\" class=\"headerlink\" title=\"日常备份行为\"></a>日常备份行为</h3><p><strong>（1）先将所有数据都放到/disk2/backup中；（2）进行压缩打包，并且传送到内部的192.168.1.199主机上</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsggx2rzmyj30ju0gpado.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsggxiviidj30k60i2tbq.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsgh3zp1kqj30l70czjtj.jpg\"></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsgh4hrpisj30kd0gxdij.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsgh6cfx1qj30l10dbq54.jpg\"></p>\n<h3 id=\"每日备份数据脚本\"><a href=\"#每日备份数据脚本\" class=\"headerlink\" title=\"每日备份数据脚本\"></a>每日备份数据脚本</h3><p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsgjhl7snfj30k40jc0wb.jpg\"></p>\n<p><strong>每天MYSQL数据库就可以自动记录在/disk2/backup/daily中，而且文件名会自动改变。随后就是使用/etc/crontab开始让系统自己运行。相关设置如下：</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsgjhnzqi4j30kd03bjrt.jpg\"></p>\n<p><strong>系统会自动在每天的2：30进行MySQL备份，而在每个星期日的3：30进行重要文件的备份，还要将/disk2中的数据复制出来</strong></p>\n<h3 id=\"远程备份系统\"><a href=\"#远程备份系统\" class=\"headerlink\" title=\"远程备份系统\"></a>远程备份系统</h3><p><strong>远程备份最简单的FTP就可以远程备份</strong></p>\n<p><strong>下面为简单的FTP脚本可以实现自动文件上传：</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsgjhs7qdxj30jm0l2wi7.jpg\"></p>\n<p><strong>不想用FTP而想使用其他方式的话，或许可以用man    rsync命令来实现</strong></p>\n<h2 id=\"还原系统的考虑因素\"><a href=\"#还原系统的考虑因素\" class=\"headerlink\" title=\"还原系统的考虑因素\"></a>还原系统的考虑因素</h2><h3 id=\"还原系统的考虑因素-1\"><a href=\"#还原系统的考虑因素-1\" class=\"headerlink\" title=\"还原系统的考虑因素\"></a>还原系统的考虑因素</h3><p>备份与还原的考虑因素：</p>\n<ul>\n<li><p>主机需要在很短的时间内立刻还原上线</p>\n</li>\n<li><p>主机希望能够在查询到问题的原因后才正式上线</p>\n</li>\n<li><p>关于存储架构的考虑</p>\n</li>\n</ul>\n<h2 id=\"更新显卡驱动程序的范例：NVidia驱动程序\"><a href=\"#更新显卡驱动程序的范例：NVidia驱动程序\" class=\"headerlink\" title=\"更新显卡驱动程序的范例：NVidia驱动程序\"></a>更新显卡驱动程序的范例：NVidia驱动程序</h2><p>1.下载驱动程序</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsgk60u87ej30ka00ya9x.jpg\"></p>\n<p><strong>在该网站中，还会有很多信息，里面会介绍如何正确地安装软件，并提供了排错解决方案</strong></p>\n<p>2.安装模块</p>\n<p>安装过程直接执行该下载文件即可。下载的文件名称应该是：NVIDIA-Linux-x86-pkgl.run。这是一个含有源码的shell脚本，既然是shell脚本，直接安装即可。</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsgk62yuamj30k802waaq.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsgk64rm26j30la074dhp.jpg\"></p>\n<p>3.修改主要设置文件内容</p>\n<p>接下来就是让X服务器去直接读取刚才安装的模块，所以，修改一下xorg.conf</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsgk66pc0ej30l30cygmx.jpg\"></p>\n<h1 id=\"Linux硬件检测与维护\"><a href=\"#Linux硬件检测与维护\" class=\"headerlink\" title=\"Linux硬件检测与维护\"></a>Linux硬件检测与维护</h1><h2 id=\"准备硬件\"><a href=\"#准备硬件\" class=\"headerlink\" title=\"准备硬件\"></a>准备硬件</h2><p><strong>目的在于更深入了解Linux主机的硬件，汇总硬件信息，并进行一些检测与控制，所以我们要先准备号Linux主机的硬件，了解其硬件配置</strong></p>\n<h3 id=\"硬件信息的收集：lspci、iostat…\"><a href=\"#硬件信息的收集：lspci、iostat…\" class=\"headerlink\" title=\"硬件信息的收集：lspci、iostat…\"></a>硬件信息的收集：lspci、iostat…</h3><p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsglsxyj97j30k803agmg.jpg\"></p>\n<p>1.lspci</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsglt0zxqej30lv0g6ju6.jpg\"></p>\n<p>2.iostat</p>\n<p><strong>检测硬盘从启动到现在已经存取了多少数据</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsglt3d0vnj30jn0k9n1k.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsglt54ew4j30jj01yaaj.jpg\"></p>\n<p><strong>通过lspci与iostat，可以简单了解当前系统的状态，以及当前的主机硬件数据</strong></p>\n<h3 id=\"驱动USB设备\"><a href=\"#驱动USB设备\" class=\"headerlink\" title=\"驱动USB设备\"></a>驱动USB设备</h3><p>1.USB的芯片版本</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsglt700upj30kp035wfj.jpg\"></p>\n<p><strong>如果使用lsmod时发现HCI之类的模块，就表示Linux主机已经加载USB的驱动程序。如果USB设备比较多，那么可能还需要加载USB HID模块才行</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsglt97irtj30l70bpabt.jpg\"></p>\n<p>2.启动USB打印机</p>\n<p><strong>先加载USB模块，建立USB打印机的设备代号，需要使用mkmod命令，以及USB打印机设备的主次，建立方法为：</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsgltbnh7rj30kd04kdgk.jpg\"></p>\n<p><strong>其实除了早期的版本，较新版本已经帮我们建立好/dev/usb/lp0等文件设备</strong></p>\n<h3 id=\"使用lm-sensors取得温度、电压等信息\"><a href=\"#使用lm-sensors取得温度、电压等信息\" class=\"headerlink\" title=\"使用lm_sensors取得温度、电压等信息\"></a>使用lm_sensors取得温度、电压等信息</h3><p><strong>超频就是增加系统原有的运算频率，让CPU、PCI、AGI前端总线速度提升到非正规的频率，已取得较高的计算机性能；个大主要的主机板与芯片集，主机内都会有温度、压力的检测器，我们可以在主机板操作手册或在BIOS内的Monitor项中找到相关的温度、压力数据。在Windows系统中，广商推出相关的软件来检测，在Linux中是lm_sensors套件。</strong></p>\n<p><strong>lm_sensors提供不错的主机板芯片集检测程序，就是sensors-detect命令。检测到主机板芯片集后，将该信息写入设置文件中，就可以使用sensors命令直接读取但其那CPU、机壳、电源、风扇等信息</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gshet9tcw3j30l10n3q7q.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gshetiwkiej30lt0b8wfx.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshettvedcj30jh0mk43y.jpg\"></p>\n<p><strong>VIA694D是适合双CPU的主机板，但lm_sensors假定仅有单CPU的显示状况，所以，显示的结果与实际数据有差异。此时或许就需要进行调整，调整步骤如下：</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gshextdfrhj30ke0nlq7h.jpg\"></p>\n<h2 id=\"PC4的系统操作：setup功能\"><a href=\"#PC4的系统操作：setup功能\" class=\"headerlink\" title=\"PC4的系统操作：setup功能\"></a>PC4的系统操作：setup功能</h2><p><strong>整个启动流程看/etc/inittab的规定项目，每个服务启动的脚本放在/etc/init.d/scriptname里，但启动设置文件则可能会包含在/etc/sysconfig内。lm_sensors模块就放在/etc/sysconfig/lm_sensors中</strong></p>\n<p><strong>Red Hat系统提供了工具，套件名称为setuptool，直接执行setup就能处理整个执行过程。直接使用命令或vi可以实现setup所提供的功能。以root身份执行setup后，会出现如下所示界面</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshez5lz8yj30kd0ip48a.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gshezk19fgj30kf0ggdmn.jpg\"></p>\n<h2 id=\"特殊文件系统：LVM\"><a href=\"#特殊文件系统：LVM\" class=\"headerlink\" title=\"特殊文件系统：LVM\"></a>特殊文件系统：LVM</h2><p><strong>LVM可以将多个物理分区整合在一起，让这些分区看起来就像是一个磁盘一样，还可以新增其他物理分区到LVM管理的磁盘中</strong></p>\n<h3 id=\"什么是LVM：PV、PE、VG、、LV\"><a href=\"#什么是LVM：PV、PE、VG、、LV\" class=\"headerlink\" title=\"什么是LVM：PV、PE、VG、、LV\"></a>什么是LVM：PV、PE、VG、、LV</h3><p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshezxfyqyj30li0ipadd.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gshf05gq50j30l105idj3.jpg\"></p>\n<h3 id=\"制作LVM磁盘的流程\"><a href=\"#制作LVM磁盘的流程\" class=\"headerlink\" title=\"制作LVM磁盘的流程\"></a>制作LVM磁盘的流程</h3><p><strong>环境是PC4，有一个30G的硬盘放在/etc/hdb中，这个硬盘已经分割成为三个分区。分别为/dev/hdb1、/dev/hdb2、/dev/hdb3,大约各有10G左右</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gshf0um51mj30m00egk0b.jpg\"></p>\n<p>1.建立PV与PV的查询</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gshf1fado6j30k30kpdsd.jpg\"></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gshf1rzdlaj30k60agq8j.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gshf2648haj30ku04ogo5.jpg\"></p>\n<p>2.开始建立VG</p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/31bfd0897fe34b7d01e5b3c71824cd1a\">)</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/af6f53074f4b6dd33f393b02e86626d8\"></p>\n<p>3、建立LV</p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/0ab8fd6c6a0d5722b2751092f4efa741\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/ba0d980bc70d6358a61758779ccea074\"></p>\n<p>4.分区的格式化与载入</p>\n<p><img data-src=\"!%5B%5D(https://img03.sogoucdn.com/app/a/100520146/08ba11808865530de1162e0e6578b684)\"></p>\n<h3 id=\"加大原有的LVM磁盘：resize2fs\"><a href=\"#加大原有的LVM磁盘：resize2fs\" class=\"headerlink\" title=\"加大原有的LVM磁盘：resize2fs\"></a>加大原有的LVM磁盘：resize2fs</h3><p><strong>将一个崭新的/dev/hdb3的物理分区加入到vbirdvg中，步骤如下：</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/2df33936988a54882e74cd14c26eb129\"><br><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/3c61fe1f0ae43ed46a1e686e6d4fef77\"></p>\n<p><strong>LV增加，但/dev/vbirdvg/vbirdlv却没有加大；这是因为最初规划时ext3主要信息已经写入超级快，同时inode与块数量又是固定的，所以这个容量大小当然不会有变化。我们可以使用ext2、ext3的工具程序来处理。</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/d32664952a68d0e9b7395f53b284d7ca\"></p>\n<h3 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h3><p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/779fd7ce1bac9103e11a053a8cf18700\">1</p>\n<p><strong>删除LVM</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/ea8d1dfad91b357384a041b79ab8663b\"></p>\n<h2 id=\"额外的存储设备iSCSI协议的磁盘阵列\"><a href=\"#额外的存储设备iSCSI协议的磁盘阵列\" class=\"headerlink\" title=\"额外的存储设备iSCSI协议的磁盘阵列\"></a>额外的存储设备iSCSI协议的磁盘阵列</h2><p><strong>SAN（Storage Area Networks，存储区网络）与NAS（Network Attached Storage，网络连接存储），NAS主要使用一台主机专门存储数据，以现有的TCP/IP协议来提供类似文件服务器的用途，可以直接放在网络上，供用户访问数据。SAN则类似一台存储设备，通过光纤信道供某几台主机进行数据访问。它们的储存硬盘通常是以磁盘阵列RAID作为基础</strong></p>\n<h3 id=\"什么是磁盘阵列\"><a href=\"#什么是磁盘阵列\" class=\"headerlink\" title=\"什么是磁盘阵列\"></a>什么是磁盘阵列</h3><p><strong>磁盘阵列全名是Redundant Arrays of Inexpensive Disks,简写为RAID，是通过软件或硬件技术，将多个较小的磁盘整合成为较大的磁盘设备，而这个磁盘功能不止存储，还有数据保护的功能</strong></p>\n<p><strong>RAID常见的等级如下：</strong></p>\n<ul>\n<li><p>Linear Mode（线性模式）：两个以上的磁盘整合成一个物理存储设备；将一个一个填满后，才将数据继续写到写一个磁盘上；由于数据是一个一个写入到不同的硬盘中没并不会增加整个擦皮纳的读取性能；由于数据具有连续新，因此，若不小心有任何一个磁盘损坏时，您的数据就无可免回了；</p>\n</li>\n<li><p>RAID-0（交错模式）：主要时利用容量相同的磁盘来实现，性能会比较好；交错表示文件数据时同步放到不同的磁盘上；</p>\n</li>\n<li><p>RAID-1（镜像模式）：这也是相同磁盘容量；这种模式这要是让同一份数据，完整地保存在两个磁盘上；这种模式最大的优点就是能进行备份，任何一个磁盘损坏，所有数据还都保存完好</p>\n</li>\n<li><p>RAID-5：整合多个磁盘（通常需要3个以上），然后每个磁盘驱动器上都会记录少许其他磁盘驱动器的信息</p>\n</li>\n</ul>\n<h1 id=\"Linux核心编译与管理\"><a href=\"#Linux核心编译与管理\" class=\"headerlink\" title=\"Linux核心编译与管理\"></a>Linux核心编译与管理</h1><p>1.核心</p>\n<p><strong>核心是整个操作系统的最底层，负责全部硬件的驱动，并提供各种核心工具及，包括防火墙机制、是否支持LVM或Quota等文件系统。因此，在启动过程中，除了MBR之外，第一个读取系统内存中的就是核心文件。</strong></p>\n<p><strong>不论您如何卖力地设置该网络套件，核心不支持，也是没法工作的</strong></p>\n<p><strong>核心读入主存储器的时机：</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gshr1sk49hj30kq04cdgl.jpg\"></p>\n<p>2.核心模块</p>\n<p><strong>核心模块包含了硬件检测与驱动模块；Linux将一些不常用的类似驱动程序的东西独立出核心，编译成模块，然后，核心可以在运行过程中加载这个模块，让核心支持它，这样可在不需更改核心的前提之下，只要编译出适当的驱动模块，并加载它，Linux就可以使用这个硬件。</strong><br>模块放在/lib/modules/‘uname  -r’/</p>\n<p>3.核心编译</p>\n<p><strong>核心其实是一个文件，文件是通过源码编译而成的。因为核心是直接读入到主存储器中，所以要将它编译成系统可识别的数据；所以我们必须取得核心的源码，然后利用源码与编译方式来编译核心</strong></p>\n<p>4.驱动程序与核心的问题</p>\n<p><strong>Linux的核心相当灵活，它支持模块化的，只要新硬件推出搭配核心的驱动模块（驱动程序），我们就可将该模块挂载到核心上，核心就可以支持该硬件</strong></p>\n<h3 id=\"更新核心的原因\"><a href=\"#更新核心的原因\" class=\"headerlink\" title=\"更新核心的原因\"></a>更新核心的原因</h3><ul>\n<li><p>新功能的需求</p>\n</li>\n<li><p>原核心太过庞大</p>\n</li>\n<li><p>与硬件搭配的稳定性</p>\n</li>\n<li><p>由于特殊的环境需求，就需要自行设计核心</p>\n</li>\n</ul>\n<h3 id=\"核心的版本与下载最新核心的位置\"><a href=\"#核心的版本与下载最新核心的位置\" class=\"headerlink\" title=\"核心的版本与下载最新核心的位置\"></a>核心的版本与下载最新核心的位置</h3><p>1.核心的版本</p>\n<p><strong>由于不同的核心版本之间使用的函数库并不相同，所以必须知道自己的Linxu核心版本之后，才能采用最新支持的核心版本来编译新的核心</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshr2g2764j30kg025wei.jpg\"></p>\n<p>核心版本分为：</p>\n<p>【主版本】.【次版本】.【发布版本（release）】-【修改版本】</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gshr2t0srlj30kc032q3o.jpg\"></p>\n<p>核心下载地址：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5rZXJuZWwub3JnLw==\">http://www.kernel.org</span></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gshr394t4hj30iq06ogmp.jpg\"></p>\n<p>2.核心的下载地点</p>\n<p><strong>Linux的核心当前是由其发明者Linus Torvalds所属团队负责维护的，其网站在下面的网址上，在该网站可以找到最新的核心信息。</strong></p>\n<h2 id=\"核心源码的获取与升级\"><a href=\"#核心源码的获取与升级\" class=\"headerlink\" title=\"核心源码的获取与升级\"></a>核心源码的获取与升级</h2><h3 id=\"获取原版本提供的核心源码\"><a href=\"#获取原版本提供的核心源码\" class=\"headerlink\" title=\"获取原版本提供的核心源码\"></a>获取原版本提供的核心源码</h3><p><strong>如果已安装工具程序的话，那么就可以利用rpm找到名为kernel-devel的套件，那就是核心源码</strong></p>\n<h3 id=\"获取最新的核心\"><a href=\"#获取最新的核心\" class=\"headerlink\" title=\"获取最新的核心\"></a>获取最新的核心</h3><p><strong>使用源码来重新编译核心比较方便，但使得硬件所需要的新驱动程序无法通过原来的核心源码编译，所以如果要更新驱动程序，就是用最新的核心</strong></p>\n<h3 id=\"保留原设置：利用补丁升级核心源码\"><a href=\"#保留原设置：利用补丁升级核心源码\" class=\"headerlink\" title=\"保留原设置：利用补丁升级核心源码\"></a>保留原设置：利用补丁升级核心源码</h3><p><strong>如果自行以最新的核心版本来编译过核心，那么系统就应该存在几个版本的核心源码，以及上次自行编译的参数设置值；核心发布，除了发布完整的核心压缩文件之外，也会发布该版本与前一版本的差异性补丁文件，每个核心的补丁仅针对前一版的核心，想要由2.6.10升级到2.6.14，就要下载2.6.11、2.6.12、2.6.13及2.6.14的补丁文件，然后依次进行打补丁，才能升级到2.6.14；打完补丁之后，可以直接检查原设置值，如果没有问题，就可以直接编译，而不需要重新选择核心的参数值</strong></p>\n<h3 id=\"核心目录下的子目录信息\"><a href=\"#核心目录下的子目录信息\" class=\"headerlink\" title=\"核心目录下的子目录信息\"></a>核心目录下的子目录信息</h3><p>核心的源码默认放在/usr/src/kernels/2.6.11-1.1269_FC4-i686目录下：有几个目录</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gshr3hshavj30kh04e74s.jpg\"></p>\n<p><strong>可以解压缩最新的核心文件之后，会有个Documentation目录，可以进去查看各个相关的说明</strong></p>\n<h2 id=\"设置核心的编译设置（Makefile）\"><a href=\"#设置核心的编译设置（Makefile）\" class=\"headerlink\" title=\"设置核心的编译设置（Makefile）\"></a>设置核心的编译设置（Makefile）</h2><p><strong>核心提供很多工具来让我们简单地设置参数</strong></p>\n<h3 id=\"编辑核心的生成文件\"><a href=\"#编辑核心的生成文件\" class=\"headerlink\" title=\"编辑核心的生成文件\"></a>编辑核心的生成文件</h3><p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gshr3wdx1ej30jd06d3z8.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshr4d8cd6j30l303tjsh.jpg\"></p>\n<p><strong>如何去建立生成文件，我们可以通过核心提供的功能，即用make menuconfig来实现</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gshr4q0xrmj30kh035gm9.jpg\"></p>\n<p><strong>利用make  menuconfig来做类似图形界面的菜单模式，可以随时进行参数的选择，方便又好用。只要在/usr/src/linux-2.6.14.2目录下，输入make  menuconfig就可以出现图形菜单模式</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gshr53qre7j30ml0lh0vd.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshr5dum74j30la054js5.jpg\"></p>\n<h3 id=\"设置核心内容与模式\"><a href=\"#设置核心内容与模式\" class=\"headerlink\" title=\"设置核心内容与模式\"></a>设置核心内容与模式</h3><p>1.Code Maturity Level Options（核心的代码开发维护）</p>\n<p><strong>用于确定核心是否要支持一些尚未测试的完整功能</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshr5q0eftj30jz01sglm.jpg\"></p>\n<p>2.General Setup （常规设置）</p>\n<p><strong>这个项目是关于核心的一般设置，包括核心的附加版本信息</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gshr6bj96lj30ku0j0zm9.jpg\"></p>\n<p><strong>这个主要针对核心与程序之间的相关性，基本上保留默认值即可</strong></p>\n<p>3.Loadable Module Support（可加载模块支持）</p>\n<p><strong>它涉及是否支持模块加载</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gshr916u6yj30kw02caa5.jpg\"></p>\n<p>4.Processor Type and Features（处理器类型和特征）</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gshr9qvn7kj30l5092my3.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gshraaofh4j30kr0f8q4n.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gshratl504j30kr0fwgns.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshrbf98hlj30kz0a7wfz.jpg\"></p>\n<p>5.Power Management Options（ACPI、APM）（电源管理选项）</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshrbukw31j30l20oddjf.jpg\"></p>\n<p>6.Bus Options(PCI、PCMCIA、EISA、MCA、ISA)</p>\n<p><strong>这个项目与总线有关。分为最常见的PCI以及笔记本电脑常见的PCMCIA插卡</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gshrk3xarfj30ks0irjtu.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gshrc72monj30kh0i476g.jpg\"></p>\n<p><strong>PCI插槽是最重要的，因为所有的适配卡都是插在PCI插槽上</strong></p>\n<p>7.Executable File Formats（可执行文件格式）</p>\n<p><strong>是给Linux核心运行执行文件使用的数据，除了第一项必须要编译成核心功能之外，其他两项可以编译成模块</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshrcow9a4j30kd022gln.jpg\"></p>\n<p>8.Networking</p>\n<p><strong>包含了与防火墙相关的项目，即防火墙iptables</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshrdhsdv7j30jv043mxf.jpg\"></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gshrdrmz2zj30iv0msq5n.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshre0jie5j30j709eab0.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gshrebp7bzj30jh0lntb1.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshreof68lj30m40ajt9n.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gshrezkgbij30lt0kb40u.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gshrfbmqvjj30kl067mxt.jpg\"></p>\n<p>9.Device Drivers（设备驱动程序）</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gshrfmkan0j30lc0l1act.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gshrghgkccj30lf09hq3x.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gshrms9eu7j30ms0iddic.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gshrn5f1n2j30lw0dugnb.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsimxw71ooj30m20fgtag.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsimy8l0m6j30lz0h0wgk.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsimyi5zivj30m60jujti.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsimypfg3vj30lh0cmmyn.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsimyyw9idj30lo0e10u7.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsimzbpo1fj30ko0hhwgn.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsimzosqi8j30km0jydi4.jpg\"></p>\n<p>10.File  Systems（文件系统）</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsir8i3n7ij30kb05fgm1.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsir8t20fvj30jy0bf3zo.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsir910iupj30k60jpgo3.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsir9882y9j30m10h6go0.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsir9e4veaj30jt05bjrp.jpg\"></p>\n<p><strong>因为涉及核心是否能支持某些文件系统，以及某些操作系统支持的分区表项目</strong></p>\n<p>11.Security Options（安全选项）</p>\n<p><strong>这是一部与安全性有关，保留默认值即可</strong></p>\n<p>12.Cryptographic Options（加密选项）</p>\n<p><strong>这一部分是加密参数的设置。通过我们采用的账号密码登录，使用的就是MD5加密机制，要让核心支持，将所有项目都做成模块即可。不过MD5与SHA1必须要直接由核心支持</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsir9t250mj30mn0eb75t.jpg\"></p>\n<p>13.采用旧数据与存储设置</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsirbbaqipj30kl01ut8o.jpg\"></p>\n<p><strong>这两项分别存储刚才做好的所有项目的设置数据</strong></p>\n<h2 id=\"核心的编译与安装\"><a href=\"#核心的编译与安装\" class=\"headerlink\" title=\"核心的编译与安装\"></a>核心的编译与安装</h2><h3 id=\"编译的流程\"><a href=\"#编译的流程\" class=\"headerlink\" title=\"编译的流程\"></a>编译的流程</h3><p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsivkt1snmj30ki05ygm4.jpg\"></p>\n<p><strong>只需要3个操作，核心与模块就都创建出来了。数据放在/usr/src/linux-2.6.14.2目录下。并没有放在系统的相关路径中；注意执行了make bzlmage后，最后结果如下：</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsivl8hun5j30k904aq39.jpg\"></p>\n<h3 id=\"模块安装注意事项\"><a href=\"#模块安装注意事项\" class=\"headerlink\" title=\"模块安装注意事项\"></a>模块安装注意事项</h3><p><strong>如果同一个版本的核心被编译两次以上的话，那么请将/lib/modules里面的该版核心先移开</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsivm4cjafj30lx06fwfd.jpg\"></p>\n<h3 id=\"安装旧版与新版的核心成多重启动系统\"><a href=\"#安装旧版与新版的核心成多重启动系统\" class=\"headerlink\" title=\"安装旧版与新版的核心成多重启动系统\"></a>安装旧版与新版的核心成多重启动系统</h3><p><strong>我们知道核心文件放在/usr/src/linux-2.6.14.2/arch/i3486/boot/bzlmage中，也知道一台主机是可以做成多重启动系统的。在编译好核心之后，将同时保留旧版的核心，并且在主机上新增新版的核心</strong></p>\n<p><strong>核心编译成功后，并不保证我们刚刚选择的核心项目完全适于当前这台主机系统，可能有某些地方我们忘记选择，将会导致新核心无法顺利驱动整个主机系统，此时，如果保留旧的核心，若新核心测试不通过，用旧核心来启动即可</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsivmvbl0gj30lx0dujt7.jpg\"></p>\n<h2 id=\"额外（单一）模块编译\"><a href=\"#额外（单一）模块编译\" class=\"headerlink\" title=\"额外（单一）模块编译\"></a>额外（单一）模块编译</h2><p><strong>核心所支持的功能中，有直接编译到核心内部的，也有使用外挂模式的，外挂模块可以简单地想成是驱动程序。这些核心模块根据不同的版本，分别放到/lib/modules/‘uname -r’/目录中，各硬件的驱动程序则放到/lib/modules/‘uname -r’/kernel/drivers/中，这些模块与设备代号的对应，就必须写入/etc/modprobe.conf文件中。</strong></p>\n<p><strong>由于核心原来就提供了很多核心工具给硬件开发商使用，而硬件开发商也需要针对核心所提供的功能来设计驱动程序模块，因此如果要自行使用硬件开发商所提供的模块进行编译，就需要使用核心所提供的原始文件中的头文件，来获取驱动模块所需要的一些函数库或文件头的定义</strong></p>\n<p><strong>早期的核心源码要求要放到/usr/src/linux、目录下，由于如果Linux系统中有多个核心，而且使用的源码并不相同，问题就大了。所以，就以/lib/modules/‘uname -r’/build和/lib/modules/‘uname -r’/source这两个连接文件来指向正确的核心源码放置目录，核心模块目录如下：</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gsivnl9v9cj30ke07kabd.jpg\"></p>\n<h3 id=\"单一模块编译\"><a href=\"#单一模块编译\" class=\"headerlink\" title=\"单一模块编译\"></a>单一模块编译</h3><p>两种情况：</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gsivocyfiwj30kn02j3yz.jpg\"></p>\n<p><strong>去获取源码，重新编译成为系统可以加载的模块，都需要make、gcc以及核心所提供的include头文件与函数库</strong></p>\n<p>1.硬件开发商提供的额外模块</p>\n<p><strong>可以使用各种方法下载文件，假设把它放到/root，直接解压缩。读一读INSTALL/README，然后查找生成文件，就能编译了，整体流程如下：</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gsivon9e5zj30kz0fumzj.jpg\"></p>\n<p><strong>这样就可以轻松编译模块，并且将它直接放到核心模块目录中，同时通过depmod对模块建立关联，就能利用modprobe来直接采用了。若自行编译模块时，若核心有更新，则必须要重新编译该模块一次，重复上面的步骤</strong></p>\n<p>2.利用旧有的核心源码进行编译</p>\n<p>在当前的核心源码所在目录执行make menuconfig，然后将NTFS的选项这支撑模块，之后执行：</p>\n<p>make fs /ntfs/</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gsivouyajjj30lm02wgmb.jpg\"></p>\n<h3 id=\"核心模块管理：lsmod、modinfo、modprobe、insmod、rmmod…\"><a href=\"#核心模块管理：lsmod、modinfo、modprobe、insmod、rmmod…\" class=\"headerlink\" title=\"核心模块管理：lsmod、modinfo、modprobe、insmod、rmmod…\"></a>核心模块管理：lsmod、modinfo、modprobe、insmod、rmmod…</h3>",
            "tags": []
        },
        {
            "id": "https://theprofessor249.github.io/2021/07/07/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E5%9B%9B%E9%83%A8%E5%88%86%20%20%20%20%20Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/",
            "url": "https://theprofessor249.github.io/2021/07/07/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E5%9B%9B%E9%83%A8%E5%88%86%20%20%20%20%20Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/",
            "title": "第四部分   Linux用户管理",
            "date_published": "2021-07-07T01:11:40.679Z",
            "content_html": "<h1 id=\"Linux账户与身份管理\"><a href=\"#Linux账户与身份管理\" class=\"headerlink\" title=\"Linux账户与身份管理\"></a>Linux账户与身份管理</h1><h2 id=\"Linux的账号与用户组\"><a href=\"#Linux的账号与用户组\" class=\"headerlink\" title=\"Linux的账号与用户组\"></a>Linux的账号与用户组</h2><h3 id=\"用户识别：UID与GID\"><a href=\"#用户识别：UID与GID\" class=\"headerlink\" title=\"用户识别：UID与GID\"></a>用户识别：UID与GID</h3><p><strong>每个文件都具有拥有者与拥有用户组的属性。每个登录的用户至少会取得两个ID，一个是用户（User ID，简称UID），一个是用户组ID（Group ID，简称GID）</strong></p>\n<ul>\n<li>如何登录Linux取得UID/GID</li>\n</ul>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs87aqxap0j30ko031myd.jpg\"></p>\n<h3 id=\"用户账号：-etc-passwd、-etc-shadow\"><a href=\"#用户账号：-etc-passwd、-etc-shadow\" class=\"headerlink\" title=\"用户账号：/etc/passwd、/etc/shadow\"></a>用户账号：/etc/passwd、/etc/shadow</h3><p>1./etc/passwd</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs87b3eoq7j30kw0i1q90.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs87bdbyr7j30kk0d9tci.jpg\"></p>\n<p>2./etc/shadow</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs87bsygsyj30l60ld7f6.jpg\"></p>\n<h3 id=\"关于用户组：有效与初始用户组、groups-newgrp\"><a href=\"#关于用户组：有效与初始用户组、groups-newgrp\" class=\"headerlink\" title=\"关于用户组：有效与初始用户组、groups/newgrp\"></a>关于用户组：有效与初始用户组、groups/newgrp</h3><p>1./etc/group:用于记录GID与用户组名称的</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs87c38oclj30l20c7dhk.jpg\"></p>\n<p>2.有效用户组与初始用户组</p>\n<p><strong>GID就是初始用户组；当用户登录系统，立刻就拥有这个用户组的相关权限</strong><br><strong>在/etc/passwd中，GID就是初始用户组</strong><br><strong>直接输入groups就可以，在输出消息中，可以知道我同时属于dmtsai及users两个用户组，而第一个输出的用户组为有效用户组，可通过newgrp改变有效用户组</strong></p>\n<p>先查看一下 /etc/group 文件：</p>\n<p>[root@localhost /]# cat /etc/group<br>root:x:0:root<br>bin:x:1:root,bin,daemon</p>\n<p>这个文件的每一行代表一个用户组，以冒号分隔各个字段。共有4个字段，分别是：</p>\n<p><strong>用户组名称</strong><br><strong>用户组密码：</strong>通常不需要设置，这个设置通常是给“用户组管理员”是用的。<br><strong>GID：用户组 ID</strong><br>此用户组支持的账号名称：一个账号可以加入多个用户组，如果某个用户想要加入某个用户组，只需将该用户的用户名添加进这个字段中。<br><strong>初始用户组</strong><br>在 /etc/passwd 中用户对应的那一行的第4个字段（GID），就是初始用户组。当用户登录系统，立刻就拥有这个初始用户组的相关权限。</p>\n<p>[root@localhost /]# cat /etc/passwd<br>root:x:0:0:root:/root:/bin/bash<br>bin:x:1:1:bin:/bin:/sbin/nologin</p>\n<hr>\n<p>有效用户组<br>有效用户组表示用户此时此刻所在的用户组是什么。在切换有效用户组之前，有效用户组就是初始用户组。</p>\n<p>想要知道用户自己当前的有效用户组和支持的用户组(在 /etc/group 文件中第四字段包含此用户的用户组)，使用 groups 即可。</p>\n<p>[root@localhost /]# groups<br>root bin daemon sys adm disk wheel</p>\n<p><strong>在这个输出的信息中，第一个输出的用户组就是当前的有效用户组了</strong></p>\n<p>如果我以 touch 去创建一个新文件，那么这个文件的所有者为 root,而且用户组是 root（有效用户组）。</p>\n<p><strong>切换有效用户组：newgrp</strong></p>\n<p>使用 newgrp 命令可以切换有效用户组，注意只能切换当前账号支持的用户组。</p>\n<p>假设当前用户支持 “test” 和 “foo” 这两个用户组。那么 newgrp test 和 newgrp foo 是有效的。其他的都是无效的。</p>\n<p>这个转换的背后原理是创建一个新的 shell，如果要恢复到前一个用户组需要用 exit 或 Ctrl+D 来注销当前的 shell 。</p>\n<p>3./etc/gshadow</p>\n<p><strong>如果没有明白/etc/gshadow的设置，newgrp是无法操作的</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs87d5u0k1j30lm05cjsw.jpg\"></p>\n<h2 id=\"账户管理\"><a href=\"#账户管理\" class=\"headerlink\" title=\"账户管理\"></a>账户管理</h2><h3 id=\"新增与删除用户：useradd、相关设置文件、passwd、usermod、userdel\"><a href=\"#新增与删除用户：useradd、相关设置文件、passwd、usermod、userdel\" class=\"headerlink\" title=\"新增与删除用户：useradd、相关设置文件、passwd、usermod、userdel\"></a>新增与删除用户：useradd、相关设置文件、passwd、usermod、userdel</h3><p>1.useradd(-u、-r)</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs88n3fy98j30k304wwfo.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs88nis4lzj30km0lvteu.jpg\"></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs88nomiqoj30ka02r0sr.jpg\"></p>\n<p>2.相关设置文件</p>\n<p><strong>使用useradd去新增用户时，一些在/etc/passwd中的值会去参考/etc/default/useradd</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs88nw81a5j30jh03ydgh.jpg\"></p>\n<p>3.关于用户组的建立机制</p>\n<p>用户组有两种建立机制：</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs88ppt2tej30kf02njsa.jpg\"></p>\n<p>4.关于用户家目录的参考：/etc/skel/*</p>\n<p><strong>利用useradd  vbird1时，它在/home/vbird这个用户家目录内的各项数据，都是由/etc/skel所复制过去的。所以，将来如果想要新增用户，该用户大的环境变量~/.bashrc设置好的话，可以到/etc/skel/.bashrc去编辑，也可以建立/etc/skel/public_html目录，新增用户后，在它的家目录下就会有pubilc_html目录了</strong></p>\n<p>5.关于用户UID/GID的设置</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs88shiv37j30k807p76l.jpg\"></p>\n<p>6.关于家目录默认是否建立</p>\n<p><strong>注意CREATE_HOME的设置值也很重要。在FC4的环境下，使用useradd   useraccount时，默认会主动建立家目录，除非使用-M参数。不论哪个版本，最好还是加上-m参数来强制建立家目录</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs88tm87pyj30ld03k755.jpg\"></p>\n<p>7.passwd</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs88tvrsopj30jx0cc41e.jpg\"></p>\n<p>8.usermod</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs88u9ov1bj30kl0knwks.jpg\"></p>\n<p><strong>usermod是系统管理员root用来管理账号身份的相关数据的，不过这个usermod程序的功能其实也被很多其他命令所取代，如chfn与chsh等</strong></p>\n<p>9.userdel</p>\n<p><strong>作用是删除用户</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs88uk7m3pj30k50cmgmg.jpg\"></p>\n<h3 id=\"用户功能：chfn、chsh\"><a href=\"#用户功能：chfn、chsh\" class=\"headerlink\" title=\"用户功能：chfn、chsh\"></a>用户功能：chfn、chsh</h3><p>1.chsh</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs8ggwi3ezj30k50bxmzq.jpg\"></p>\n<p>2.chfn</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs8gh8yy0oj30l20hvadk.jpg\"></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs8ghiceozj30ky04ujs9.jpg\"></p>\n<p>3.finger</p>\n<p><strong>用chfn修改用户的相关信息，这些信息就可以利用finger来查看</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs8ghr4gmxj30k207s0u3.jpg\"></p>\n<p><strong>finger可以用来查询其他主机的账号</strong></p>\n<p>4.id</p>\n<p><strong>id命令可以查询某人或自己的相关UID/GID信息</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs8gi7180nj30k5058dgk.jpg\"></p>\n<h3 id=\"新增与删除用户组\"><a href=\"#新增与删除用户组\" class=\"headerlink\" title=\"新增与删除用户组\"></a>新增与删除用户组</h3><p><strong>用户组内容与下面两个文件有关</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gif3mbkj30k1017dfo.jpg\"></p>\n<p><strong>用户组的内容其实很简单，只是对上面两个文件进行新增，修改与删除而已，如果再加上有效用户组的概念，那么对newgrp与gpasswd则不可不知</strong></p>\n<p>1.groupadd</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs8gio267wj30jv0aa0um.jpg\"></p>\n<p>2.groupmod</p>\n<p><strong>只是在进行group相关参数的修改</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs8gixzli5j30kh06qwfh.jpg\"></p>\n<p>3.groupdel</p>\n<p><strong>删除用户组</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gj6e5qdj30k704zaal.jpg\"></p>\n<p>4.gpasswd</p>\n<p><strong>除了设置用户组之外，还可以针对系统上有的用户组设置密码，该用户组就能让某些人登录成为有效用户组</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gjnxf4mj30k007ujtu.jpg\"><br><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gk2k27rj30k20btact.jpg\"></p>\n<p>5.newgrp</p>\n<p><strong>newgrp会额外以另一个login来让用户登录到另一个shell中，并且将有效用户组改为newgrp后面接的那个用户组，若没有接用户组，则默认用户组为初始用户组</strong></p>\n<h3 id=\"密码管理：passwd\"><a href=\"#密码管理：passwd\" class=\"headerlink\" title=\"密码管理：passwd\"></a>密码管理：passwd</h3><p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs8gkau0kyj30ks0d0q5k.jpg\"></p>\n<h2 id=\"切换用户身份\"><a href=\"#切换用户身份\" class=\"headerlink\" title=\"切换用户身份\"></a>切换用户身份</h2><ul>\n<li><p>操作的习惯：为了安全，建议操作Linux时，尽量以一般身份用户来操作，等到需要设置系统环境时，才变换身份成为root来进行系统管理，相对比较安全</p>\n</li>\n<li><p>用较低权限启动系统服务：烤炉到系统的安全性，必须要以某些系统账号来执行程序</p>\n</li>\n<li><p>软件本身的限制：以前没有ssh的时候，我们都是使用telnet登录系统的，偏偏系统默认是不打开root以telnet登录；系统最特殊的账号就是UID为0的用户，它具有至高无上的权力，而且时系统管理员必须要具备的身份</p>\n</li>\n<li><p>用su直接将身份变成root，但这个命令需要面膜</p>\n</li>\n<li><p>如果不想将root的密码外传，可以使用sudo</p>\n</li>\n</ul>\n<p>1.su</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gknxm6pj30k10j6gpy.jpg\"><br><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gm3qbqcj30jz035dg5.jpg\"></p>\n<p><strong>su的特别使用方式</strong></p>\n<blockquote>\n<p>如果只是想要使用root身份操作系统，并不想要改变原来的环境参数，可以使用su直接切换的身份成为root</p>\n</blockquote>\n<blockquote>\n<p>建议如果要切换成某个身份，使用su或者是su - l  username，否则容易造成环境变量的差异</p>\n</blockquote>\n<blockquote>\n<p>如果仅想执行一次root的命令，可以参考-c这种su的使用方式</p>\n</blockquote>\n<blockquote>\n<p>当root使用su切换身份时，并不需要输入密码</p>\n</blockquote>\n<h3 id=\"sudo\"><a href=\"#sudo\" class=\"headerlink\" title=\"sudo\"></a>sudo</h3><p><strong>sudo是如何工作的</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gmw63flj30k303r0tw.jpg\"></p>\n<p><strong>sudo的执行权限与/etc/sudoers文件有关。在默认的情况下，只有root才能使用sudo，编辑/etc/sudoers时则需要visudo命令</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs8gng79cpj30jx05aq3q.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gs65yz4j30k40blgnz.jpg\"></p>\n<p><strong>一定要使用visudo去编辑/etc/sudoers(visudo必须使用root的身份来执行)</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gtvwm6mj30je0bqwgo.jpg\"></p>\n<p><strong>使用visudo之后，就会出现一个画面，它就是以vi来打开/etc/sudoers的，当我们存储离开时，visudo会去检查/etc/sudoers内部的语法，以避免用户输入错误的信息。在上面只加入一行，就是让用户成为可以随意使用sudo的身份</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gua9gzij30jr010aa0.jpg\"><br><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gy0t78oj30id0htte1.jpg\"></p>\n<h2 id=\"用户的特殊Shell与PAM模块\"><a href=\"#用户的特殊Shell与PAM模块\" class=\"headerlink\" title=\"用户的特殊Shell与PAM模块\"></a>用户的特殊Shell与PAM模块</h2><h3 id=\"特殊的shell、-sbin-nologin\"><a href=\"#特殊的shell、-sbin-nologin\" class=\"headerlink\" title=\"特殊的shell、/sbin/nologin\"></a>特殊的shell、/sbin/nologin</h3><p><strong>这个shell通常时给系统账号使用的，因为/sbin/nologin事实上无法让账号实际登录，如果利用usermod将dmtsai用户的shell改为/sbin/nologin之后，再次以dmtsai登录系统，屏幕就会出现不允许这个账号登录，不过可以进行其他工作，例如打印工作、www服务。他们都可以进行系统程序的工作，但就是无法登录主机</strong></p>\n<p><strong>所以可以考虑单纯使用邮件的账号以/sbin/nologin作为shell，当主机尝试想登录系统时，可以拒绝该账号</strong></p>\n<h3 id=\"PAM模块：-etc-nologin、-etc-securetty\"><a href=\"#PAM模块：-etc-nologin、-etc-securetty\" class=\"headerlink\" title=\"PAM模块：/etc/nologin、/etc/securetty\"></a>PAM模块：/etc/nologin、/etc/securetty</h3><p><strong>PAM模块除了可以在用户登录时进行身份验证之外，还可以辅助一些应用程序的验证</strong></p>\n<p><strong>PAM怎么运行的，以/usr/bin/passwd来说明</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gygt6g2j30k70apjtc.jpg\"></p>\n<p><strong>重要信息：</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gyob15pj30le031ab5.jpg\"></p>\n<p>1.PAM的设置文件设置范例</p>\n<p><strong>PAM模块的作用就是让程序调用，当程序调用时，PAM就会利用相对应的设置文件来进行一些验证</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs8gz5fv4jj30l30hc0yt.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gzhrls8j30lp0c640v.jpg\"></p>\n<p><strong>当前FC4提供的PAM模块够多了，这些模块实际上都放在/lib/security/目录中，FC4相关的PAM说明文件则放在/usr/share/doc/pam-*/*里，可以根据每个不同的模块去讨论它的用途</strong><br><img data-src=\"!%5B%5D(https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gzxzmbuj30kg03gmxh.jpg)\"></p>\n<p>2./etc/securetty</p>\n<p><strong>主要功能就是预防不安全的登录环境。而且主要是针对root用户的身份。这个模块在被启动时，会去读取/etc/securetty文件，我们可以将被认定是安全的终端环境写入这个文件，则root仅可以在那几个终端环境下登录</strong></p>\n<p>3./etc/nologin</p>\n<p><strong>用于控制用户登录；这个模块只针对一般身份用户进行控制，对root没有效果；必须与/etc/nologin结合使用</strong><br><strong>当/etc/nologin文件存在时，任何一个一般身份账号在尝试登录时，仅会获得/etc/nologin内容的信息，而无法登录主机</strong></p>\n<p>4./etc/security/*</p>\n<p>*<em>更多的PAM模块设置信息可以参考/etc/security/<em>中的文件设置，尤其是针对用户使用Linux系统资源的limits.conf以及时间的time.conf</em></em></p>\n<h2 id=\"Linux系统的用户对话与邮件的使用\"><a href=\"#Linux系统的用户对话与邮件的使用\" class=\"headerlink\" title=\"Linux系统的用户对话与邮件的使用\"></a>Linux系统的用户对话与邮件的使用</h2><h3 id=\"查询用户：w、who、last、lastlog\"><a href=\"#查询用户：w、who、last、lastlog\" class=\"headerlink\" title=\"查询用户：w、who、last、lastlog\"></a>查询用户：w、who、last、lastlog</h3><h3 id=\"用户对话：talk、mesg、wall\"><a href=\"#用户对话：talk、mesg、wall\" class=\"headerlink\" title=\"用户对话：talk、mesg、wall\"></a>用户对话：talk、mesg、wall</h3><p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs8h1u31iij30nl0kvjvl.jpg\"></p>\n<h3 id=\"用户邮件信箱：mail\"><a href=\"#用户邮件信箱：mail\" class=\"headerlink\" title=\"用户邮件信箱：mail\"></a>用户邮件信箱：mail</h3><p><strong>寄信：</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8h27dl8cj30kd04bmxx.jpg\"></p>\n<p><strong>收信</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8h2w1twbj30ly0hoaeh.jpg\"><br><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs8h3hk51jj30kp09v77f.jpg\"></p>\n<h2 id=\"手动增加用户\"><a href=\"#手动增加用户\" class=\"headerlink\" title=\"手动增加用户\"></a>手动增加用户</h2><h3 id=\"一些检查工具\"><a href=\"#一些检查工具\" class=\"headerlink\" title=\"一些检查工具\"></a>一些检查工具</h3><p>1.pwck</p>\n<p><strong>pwck命令能检查/etc/passwd账号设置文件内的信息，以及实际的家目录是否存在等信息，还可以比较/etc/passwd、/etc/shadow的信息是否一致；如果/etc/passwd内的数据字段错误，会提示用户修改</strong></p>\n<p>2.pwconv</p>\n<p><strong>主要目的是：将/etc/passwd内账号与密码移到/etc/shadow中。</strong></p>\n<p>3.pwunconv</p>\n<p><strong>与pwconv相比，pwunconv是将/etc/shadow内的密码栏数据写回/etc/passwd中，并且删除/etc/shadow文件</strong></p>\n<p>4.chpasswd</p>\n<p><strong>可以用于读入未加密前的密码，并且经过加密后，将加密后的密码写入/etc/shadow中</strong></p>\n<h3 id=\"特殊账号，如纯数字账号的建立\"><a href=\"#特殊账号，如纯数字账号的建立\" class=\"headerlink\" title=\"特殊账号，如纯数字账号的建立\"></a>特殊账号，如纯数字账号的建立</h3><p><strong>手动建立账号：</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs8hjr6guwj30kg09d77q.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs8hjxw4uhj30k40ce0vb.jpg\"></p>\n<h3 id=\"不开放终端登录的账号（ex-gt-mail-account）\"><a href=\"#不开放终端登录的账号（ex-gt-mail-account）\" class=\"headerlink\" title=\"不开放终端登录的账号（ex&gt;mail  account）\"></a>不开放终端登录的账号（ex&gt;mail  account）</h3><p><strong>建立一个不需要登录系统的账号</strong><br><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8ht7vaqsj30k1018glt.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8htav6n4j30lo0a2q5g.jpg\"></p>\n<h1 id=\"Linux磁盘配额\"><a href=\"#Linux磁盘配额\" class=\"headerlink\" title=\"Linux磁盘配额\"></a>Linux磁盘配额</h1><h2 id=\"什么是磁盘配额\"><a href=\"#什么是磁盘配额\" class=\"headerlink\" title=\"什么是磁盘配额\"></a>什么是磁盘配额</h2><p> <strong>由于少数几个用户占用大量硬盘空间，势必影响其他用户的使用，因此管理员应该给用户适当开放硬盘的权限，妥善分配系统资源</strong></p>\n<p>1.磁盘配额的一般用途</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs9a98dmm0j30i702b0tc.jpg\"></p>\n<p>2.磁盘配额的使用限制</p>\n<ul>\n<li><p>针对整个分区的限制</p>\n</li>\n<li><p>核心必须支持磁盘配额</p>\n</li>\n<li><p>磁盘配额的记录文件</p>\n</li>\n<li><p>只对一般身份用户有效</p>\n</li>\n</ul>\n<p>3.磁盘配额程序对硬盘配额的限制</p>\n<ul>\n<li><p>最低限制：容量可以超过最低限制，但必须在宽限时间之内将磁盘容量降低到最低限制的容量限制范围之内</p>\n</li>\n<li><p>最高限制：绝对不能超过的容量，通常最高限制会比最低限制高</p>\n</li>\n<li><p>宽限时间：当用户使用的空间超过最低限制，却还没有到达最高限制时，在这个宽限时间内，就必须请用户将使用的磁盘容量降低到最低限制之下</p>\n</li>\n</ul>\n<h2 id=\"基本磁盘配额命令\"><a href=\"#基本磁盘配额命令\" class=\"headerlink\" title=\"基本磁盘配额命令\"></a>基本磁盘配额命令</h2><p>1./etc/mtab</p>\n<p><strong>当我们要使用磁盘配额的功能时，文件系统必须要支持磁盘配额的标志，可通过编辑/etc/fstab后，再重新载入文件系统的方法，来让系统的文件系统支持磁盘配额</strong></p>\n<p>2.quota：用于显示</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/35ae178a4391b8b41f1d011163069d4a\"></p>\n<p>3.quotacheck</p>\n<p><strong>主要是扫描某个磁盘的配额空间，针对分区进行扫描，由于该磁盘持续运行，可能扫描过程中文件会增减，造成磁盘配额扫描错误，因此，当使用quotacheck时，该磁盘将自动被设置成为只读扇区；扫描完毕之后，扫描所得的磁盘空间结果会写入该区最顶端</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/235047593b4661e92bb3786e00ce0bc8\"></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/3c1d03264334f22bf988ad3d3635a4fb\"></p>\n<p>4.edquota</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/731b33f73a3611dc3ae6f4eaad45056d\"></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/5b7bac5e6dbb200c7710a9fe2fa702e4\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/1a82595fc6304e143f93d9128232406c\"></p>\n<p>5.quotaon</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/77d720239327679f75405b0dc62f921c\"></p>\n<p>6.quotaoff</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/edae6a0db49e8e297e323cfa0e39b648\"></p>\n<h2 id=\"磁盘配额实例\"><a href=\"#磁盘配额实例\" class=\"headerlink\" title=\"磁盘配额实例\"></a>磁盘配额实例</h2><p><strong>一般用途：</strong></p>\n<ul>\n<li><p>限制用户组所能使用的最大磁盘配额（使用户组限制）</p>\n</li>\n<li><p>限制某一用户的最大磁盘配额（使用用户限制）</p>\n</li>\n<li><p>已连接方式，使邮件可以作为限制的配额（更改/var/spool/mail路径）</p>\n</li>\n</ul>\n<p><strong>磁盘从开始准备文件系统的支持，到整个设置结束的主要步骤如下：</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/c3539a299da8b7058198159b337bd53e\"></p>\n<p><strong>实际训练：</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/0985597cdde751f6aad2896be8966d09\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/90fe2ee5846c4fbbcdaa8719690fe1e7\"></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/3547bc9ff3a695be9e3a02ef68deba14\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/ff9e21aa7d2b55822d0e181df202cf5d\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/d4880b9490f7106cfaa4e2848158ccd5\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/d46460915965de8de4ab803751f41ee2\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/dba2be455f1594ec340235196dfd269f\"></p>\n<h2 id=\"不更改现有系统的磁盘配额实力\"><a href=\"#不更改现有系统的磁盘配额实力\" class=\"headerlink\" title=\"不更改现有系统的磁盘配额实力\"></a>不更改现有系统的磁盘配额实力</h2><p><strong>设置对外打开的邮件主机，最好对邮件空间进行限制</strong></p>\n<p><strong>例子：我的分区仅有/、/disk1、/disk2,所有用户都在/home里，邮件在/var/spool/mail</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/512d89a553751d82e81da047af9142f8\"></p>\n<h1 id=\"例行性命令的建立\"><a href=\"#例行性命令的建立\" class=\"headerlink\" title=\"例行性命令的建立\"></a>例行性命令的建立</h1><h2 id=\"什么是例行性命令\"><a href=\"#什么是例行性命令\" class=\"headerlink\" title=\"什么是例行性命令\"></a>什么是例行性命令</h2><h3 id=\"Linux工作任务分配的种类：at、cron\"><a href=\"#Linux工作任务分配的种类：at、cron\" class=\"headerlink\" title=\"Linux工作任务分配的种类：at、cron\"></a>Linux工作任务分配的种类：at、cron</h3><p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/970616cd635c848fda3d6fe2d8d12a42\"></p>\n<h3 id=\"系统常见的例行性命令\"><a href=\"#系统常见的例行性命令\" class=\"headerlink\" title=\"系统常见的例行性命令\"></a>系统常见的例行性命令</h3><p><strong>默认工作如下：</strong></p>\n<ul>\n<li><p>登录文件的数据轮换</p>\n</li>\n<li><p>rpm数据库的建立</p>\n</li>\n<li><p>建立locate的数据库</p>\n</li>\n<li><p>程序分析</p>\n</li>\n<li><p>检查登录文件</p>\n</li>\n<li><p>指纹数据库的比较</p>\n</li>\n</ul>\n<h2 id=\"仅进行一次的工作任务分配\"><a href=\"#仅进行一次的工作任务分配\" class=\"headerlink\" title=\"仅进行一次的工作任务分配\"></a>仅进行一次的工作任务分配</h2><p><strong>要分配工作任务时，Linux系统上有负责任务分配的服务，就是atd，只是很多新的Linux版本似乎默认不打开它，我们必须手动启动它，启动如下：</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/7d73e4a853b9f7d7a920cda8a47d836d\"></p>\n<p>1.at的工作</p>\n<p><strong>并不是所有人都可以进行at工作任务分配。由于怪客程序可能定时或不定时地在系统中工作，所以可以利用/etc/at.allow与/etc/at.deny这两个文件来限制at的使用：</strong><br><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/3903d5824428e33a0c93da5905339fd0\"></p>\n<p>2.开始使用at</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/efc74c50c2c65e3ddb26ea0d5e28c689\"></p>\n<p><strong>当我们使用at时，at会给用户一个bash shell让用户执行工作命令，不容易出现问题</strong></p>\n<p><strong>at的优点就是能进行后台执行</strong></p>\n<p><strong>at命令执行错误，解决方法：</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/77a189a7da07b25936a100e2d5c7f6e1\"></p>\n<h2 id=\"循环执行的例行性命令\"><a href=\"#循环执行的例行性命令\" class=\"headerlink\" title=\"循环执行的例行性命令\"></a>循环执行的例行性命令</h2><p><strong>循环执行的例行性命令，是由cron系统服务来控制的</strong></p>\n<h3 id=\"用户的设置：crontab\"><a href=\"#用户的设置：crontab\" class=\"headerlink\" title=\"用户的设置：crontab\"></a>用户的设置：crontab</h3><p><strong>我们可以限制使用crontab的用户账户，使用的限制数据有:</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/bbcd3a0bbb001ac388c9e362356544b4\"></p>\n<p><strong>/etc/cron.allow比/etc/cron.deny更优秀，在判断上，这两个文件只选择一个来限制而已，建议只要保留一个即可，以免影响自己在设置上的判断</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/a557200d3cc53d9a6fa098e096424629\"></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/7202923fb8cd3a20a6201f5205534161\"></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/04c427e51cecf015c363d8fdaa18e20d\"></p>\n<h3 id=\"系统的设置：-etc-crontab\"><a href=\"#系统的设置：-etc-crontab\" class=\"headerlink\" title=\"系统的设置：/etc/crontab\"></a>系统的设置：/etc/crontab</h3><p><strong>crontab  -e中的crontab其实是/usr/bin/crontab执行文件，但是/etc/crontab是一个纯文本文件，您可以用root的身份编辑这个文件</strong></p>\n<p><strong>cron服务的最低检测限制是分钟，所以cron会每分钟去读取一次/etc/crontab与/var/spool/cron中的数据内容，因此，只要编辑完/etc/crontab文件，并且将它储存之后，cron的设置就自动执行了</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/2b06fde0fb8db1099663431ef2608565\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/5c9be31b031284a17fc9448ea0cd55fe\"></p>\n<h2 id=\"一些使用特性\"><a href=\"#一些使用特性\" class=\"headerlink\" title=\"一些使用特性\"></a>一些使用特性</h2><ul>\n<li>资源分配不均的问题</li>\n</ul>\n<p><strong>当大量使用1crontab的时候，总是会有问题发生的，最严重的问题就是系统资源分配不均</strong></p>\n<ul>\n<li><p>取消不要的输出项目</p>\n</li>\n<li><p>安全检验</p>\n</li>\n</ul>\n<p><strong>大部分时间都是以例行命令的放肆植入木马，所以可以通过检查/var/log/cron的内容来查看是否执行了非您设置的cron</strong></p>\n<h1 id=\"程序与资源管理\"><a href=\"#程序与资源管理\" class=\"headerlink\" title=\"程序与资源管理\"></a>程序与资源管理</h1><p><strong>在Linux系统中，触发任何一个事件，系统都会将它定义成为一个进程，并且给这个进程一个ID，称为PID，同时根据启动这个进程的用户与相关属性关系，给这个PID一组有效的权限设置</strong></p>\n<h3 id=\"进程与程序\"><a href=\"#进程与程序\" class=\"headerlink\" title=\"进程与程序\"></a>进程与程序</h3><p><strong>当我们要让系统工作的时候，就需要启动一个二进制文件，该二进制文件就是程序</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/2c523329963c658f3c8f85e0ee2b0fb1\"></p>\n<blockquote>\n<p>当登入并执行bash时，系统已经给我们一个PID，这个PID就是根据登陆者的UID/GID而得到的</p>\n</blockquote>\n<p>1.子程序与父程序</p>\n<p><strong>当我们登录系统后，会获取一个bash的shell，然后我们用这个bash提供的接口去执行另一个命令，例如/usr/bin/passwd或touch等，那些另外执行的命令也会被出发成为PID，PID就是子程序，而在bash环境下就称为父进程</strong></p>\n<p><strong>环境变量在不同程序之间的调用，因为我们执行了不同的bash，执行两次，就会获得两个PID，要让这两个PID之间具有一些关联，bash就使用了环境变量</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/a02efce225edc3012a1dbf4575121059\"></p>\n<p><strong>子程序与父程序之间的关系很复杂，最复杂的地方在于程序互相之间的调用，以及两者权限的关联性</strong></p>\n<p>2.系统或网络服务，常驻内存程序</p>\n<p><strong>系统每分钟都会扫描/etc/crontab以及相关的设置文件，来进行工作任务分配，所以crond程序启动后，他就一直持续不断地运行，属于常驻内存程序</strong></p>\n<h3 id=\"Linux的多用户、多任务环境\"><a href=\"#Linux的多用户、多任务环境\" class=\"headerlink\" title=\"Linux的多用户、多任务环境\"></a>Linux的多用户、多任务环境</h3><ul>\n<li>多人环境</li>\n</ul>\n<p><strong>Linux允许不同的人使用，而且每个人都有特殊的权限，只有root有至高无上的权力</strong></p>\n<ul>\n<li>多任务行为</li>\n</ul>\n<p><strong>多项工作都是由一个CPU来处理，也是将多个命令触发为系统进程PID，而这些程序若同时被触发，一个CPU就要同时负责许多工作，这就是指多任务</strong></p>\n<ul>\n<li>多重登录环境的7个基本终端窗口</li>\n</ul>\n<p><strong>在Linux中，默认提供了6个命令行界面登录窗口，以及一个图形界面，可以使用alt+F1…F7键来切换不同的终端界面，而且每个终端界面的登陆这还可以是不同的人。再某个程序死掉的时候，这非常有用</strong></p>\n<ul>\n<li>特殊的程序管理行为</li>\n</ul>\n<p><strong>Linux几乎不会死机，因为它可以在任何时候，删掉将被困住的程序，然后重新执行该程序而不用重新开机</strong></p>\n<ul>\n<li>bash环境下的作业管理（job  control）</li>\n</ul>\n<p><strong>我们登录bash之后，就是获取一个名为bash的PID，在这个环境下所执行的其他命令，就是子程序</strong></p>\n<ul>\n<li>多用户、多任务的系统资源分配问题</li>\n</ul>\n<p><strong>多用户、多任务确实有很多好处，但因为用户越来越多，将导致管理上的问题。当用户达到一定的人数后，通常您的机器便需要升级了，因为CPU的运算与RAM的大小可鞥你会不足以应付日常的工作。</strong></p>\n<h2 id=\"作业管理：-amp-、ctrl-z、jobs、fg、bg、kill\"><a href=\"#作业管理：-amp-、ctrl-z、jobs、fg、bg、kill\" class=\"headerlink\" title=\"作业管理：&amp;、ctrl -z、jobs、fg、bg、kill\"></a>作业管理：&amp;、ctrl -z、jobs、fg、bg、kill</h2><p><strong>作业管理是在bash环境下使用的；就是当我们登录系统获取bash shell之后，在单一终端界面下，同时管理多个作业；就如我们登录bash后，想同时复制文件、进行数据搜索、进行编译，还可以编写vi程序</strong></p>\n<p>1.直接将命令放到后台执行的&amp;</p>\n<p><strong>后台与前台：</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/91f9e4b459c7d7b9a45ccbb661a50673\"></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/eb356a75a2b15960b4eb6c01b25d6829\"></p>\n<p>2.将当前作业放到后台暂停：Ctrl-z</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/11ce5f1279e46dc9783d750d65278d87\"></p>\n<p>3.观察当前后台作业状态：jobs</p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/b421889fc72b847aa30b1a20ea09ec14\"></p>\n<p>4.将后台作业拿到前台处理：fg</p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/e78fd2a67867d459b8394ca73a08c54d\"></p>\n<p>5.让作业在后台进行：bg</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/cc9903484300f958dd770b43acf138ba\"></p>\n<p>6.管理后台作业：kill</p>\n<p><strong>这个信号通常用在强制一个不正常的作业的情况</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/65fc8cc3ec84c64bb79ac42de7a263ea\"></p>\n<h2 id=\"进程管理\"><a href=\"#进程管理\" class=\"headerlink\" title=\"进程管理\"></a>进程管理</h2><p><strong>进程管理的重要性：</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/0e29224b4c991dae9878cee0c139153b\"></p>\n<h3 id=\"进程的观察\"><a href=\"#进程的观察\" class=\"headerlink\" title=\"进程的观察\"></a>进程的观察</h3><p>1.ps</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/843b2eac4df94ba2aefc44199de295c9\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/d8158630d84f02e6a992291c8dcb45f0\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/1ad41691a4f24a71d427dba9830844a7\"></p>\n<p><strong>范例二显示项目表示的意义：</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/9f0f6cbd740c245c57596b3d5697e0b0\"></p>\n<p>2.top</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/ffcc3058eb47c40ac60e7ddd5abeb5a8\"><br><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/1eb6b645b9b15b8b1c093f699768ba12\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/ca19b079fa41e2025f7010db6d0dae73\"></p>\n<p><strong>top进程可以持续检测整个系统的进程工作状态</strong></p>\n<p><strong>进程使用的资源情况</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/56eef4a065c27204c4a93471d35ef8df\"></p>\n<p>3.pastree</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/3e4349061c7637f394f6463fbb159831\"></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/b11e3507071461999343d06e14bb93c2\"></p>\n<p><strong>直接输入pstree可以查到进程的关联性，最好直接加上-A使用；如果子进程死掉或者总是删不掉子进程，用pstree查找父进程</strong></p>\n<h3 id=\"进程的删除\"><a href=\"#进程的删除\" class=\"headerlink\" title=\"进程的删除\"></a>进程的删除</h3><p><strong>主要信号代号与名臣的对应集内容</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/6367962d64562b31fab6e68fcb54ccec\"></p>\n<p><strong>kill可以帮我们将信号传送给某个作业或者是某个PID，kill后面直接加数字与加上%的情况是不同的</strong></p>\n<p>例：</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/c8f4f353f7ee8506e92b06176965126d\"></p>\n<p><strong>用killall，可直接把SIGHUP信号给syslog进程</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/6a15b3997ee3193fc3f3002d5c7657b5\"></p>\n<h3 id=\"系统资源的观察\"><a href=\"#系统资源的观察\" class=\"headerlink\" title=\"系统资源的观察\"></a>系统资源的观察</h3><p>1.free</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/d17d448937837a1f979fc41daa982c37\"></p>\n<p><strong>Men行显示物理内存量，Swap是虚拟内存量，total是总量，used是已用的量，free是剩余可用的量，后面的shared/buffers/cached是在已用的量中，用来进行缓冲及缓存</strong></p>\n<p>2.uname</p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/f056c11c8b4202cd68c9c15ceaab0e9c\"></p>\n<p><strong>uname可以列出当前系统的核心版本，主要硬件平台以及CPU类型等信息；例如范一，Linux主机使用的核心名称为linux,而主机名称为linux site，核心的版本为2.6.12~1.1398_FC4，该核心版本建立的日期为2005/7/15，适用的硬件平台为i386以上等级的硬件平台</strong></p>\n<p>3.uptime</p>\n<p><strong>用于显示当前系统已开机时间</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/3f2a572985ffab198631f2226cdfdcd2\"></p>\n<p>4.netstat</p>\n<p><strong>常用在网络的监控方面，netstat的输出分为两部分，上面是网络接口相关的联机，下方则是与unix进程有关的项目</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/a8ef73c8237bb87586c839fc488419de\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/aa9154ee1d08cf23b8a445f96deff1df\"></p>\n<p>5.dmesg</p>\n<p>** 查看CPU的形式、硬盘、光盘型号及硬盘分区表；如果消息太多，可加入管道命令| more 来使画面暂停 **</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/e0f7c2f9aa97e915bedd4348438ced9e\"></p>\n<p>6.sar</p>\n<p><strong>用于检测主机的资源状态，然后绘制为图表</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/9504fd6a2bd141c98be575a21872189b\"></p>\n<h2 id=\"进程的执行顺序\"><a href=\"#进程的执行顺序\" class=\"headerlink\" title=\"进程的执行顺序\"></a>进程的执行顺序</h2><p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/fd535725adcfab15276e67118b7c0547\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/9014501717e9ba94a40f50fe1bc51fe3\"></p>\n<p><strong>nice使用于调整进程的执行优先级；renice用于调整nice的值</strong></p>\n<h2 id=\"特殊文件与进程\"><a href=\"#特殊文件与进程\" class=\"headerlink\" title=\"特殊文件与进程\"></a>特殊文件与进程</h2><h3 id=\"SUID-SGID-SBIT的概念\"><a href=\"#SUID-SGID-SBIT的概念\" class=\"headerlink\" title=\"SUID/SGID/SBIT的概念\"></a>SUID/SGID/SBIT的概念</h3><p>关于SUID的执行：</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/a0621cadb2378f5c229693d4b9eb7b20\"></p>\n<p><strong>当用户触发的SUID的进程中，有效用户会变成SUID命令的进程拥有者</strong></p>\n<h3 id=\"proc-的意义\"><a href=\"#proc-的意义\" class=\"headerlink\" title=\"/proc/*的意义\"></a>/proc/*的意义</h3><p>*<em>内存中的数据都写入到/proc/<em>目录</em></em></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/0abd5a28738feddef87d73e51a52ae26\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/a616b0ad761569a144da1d70aeec6c70\"></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/29e6ce1ac7e423ede6df2d715ed82099\"></p>\n<h3 id=\"查询已打开的文件或已执行进程打开的文件\"><a href=\"#查询已打开的文件或已执行进程打开的文件\" class=\"headerlink\" title=\"查询已打开的文件或已执行进程打开的文件\"></a>查询已打开的文件或已执行进程打开的文件</h3><p>1.fuser</p>\n<p><strong>查询当前那个进程在使用这台设备；是由文件或设备去找出使用该文件或设备的进程</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/573121660b6fad1d2a7d5193fd7f647b\"></p>\n<p>2.Isof</p>\n<p><strong>查询某个进程打开或使用的文件与设备</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/7fe085ffad08f9416af3f7cfd59c44f5\"></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/f0bfcc63a2e96162f1fc422f4d33c86a\"></p>\n<p>3.pidof</p>\n<p><strong>通过pidof命令，并且配合ps  aux与正则表达式，就可以很轻松地找到想要的进程信息</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/660abbb18c8a0963dd69d77d48ebe19e\"></p>\n",
            "tags": []
        },
        {
            "id": "https://theprofessor249.github.io/2021/07/07/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86%20%20%20%E5%AD%A6%E4%B9%A0Shell%E5%92%8CShell%E8%84%9A%E6%9C%AC/",
            "url": "https://theprofessor249.github.io/2021/07/07/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86%20%20%20%E5%AD%A6%E4%B9%A0Shell%E5%92%8CShell%E8%84%9A%E6%9C%AC/",
            "title": "第三部分   学习Shell和Shell脚本",
            "date_published": "2021-07-07T01:11:40.671Z",
            "content_html": "<h1 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h1><h1 id=\"vi文字处理器\"><a href=\"#vi文字处理器\" class=\"headerlink\" title=\"vi文字处理器\"></a>vi文字处理器</h1><h2 id=\"Vi与vim\"><a href=\"#Vi与vim\" class=\"headerlink\" title=\"Vi与vim\"></a>Vi与vim</h2><p><strong>使用文字模式来处理Linux的系统设置问题，不仅可以容易地了解到Linux系统中，使用文字编辑器来编辑Linux参数设置文件。</strong></p>\n<p><strong>vi是老式的文字处理器，功能很齐全。对于程序开发人员很好用，vim是一个程序开发工具而不是文字处理软件。因为vim里加入了很多附加的功能，如支持规范表达法的搜索架构、多文件编辑、块复制。</strong></p>\n<h2 id=\"vi的使用\"><a href=\"#vi的使用\" class=\"headerlink\" title=\"vi的使用\"></a>vi的使用</h2><p><strong>一般模式、编辑模式、命令行命令模式</strong></p>\n<ul>\n<li><p>一般模式：<strong>可以使用“上下左右”键来移动光标，可以使用删除字符或删除整行，可以使用复制、粘贴来处理文件数据</strong></p>\n</li>\n<li><p>编辑模式：按下上述字母后，画面的左下方会出现“INSERT”或“REPLACE”的字样，才<strong>可以输入任何字到文件中，如果要回到一般模式时，则必须要按下Esc键才可退出编辑模式</strong></p>\n</li>\n<li><p>命令行命令模式：<strong>输入“：或/或？</strong>”就可以将光标移到最下面的那一行，在这个模式中，您<strong>可以搜索数据，而且读取、存盘、大量删除字符、离开vi、显示行号等操作</strong></p>\n</li>\n</ul>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs63kjplg0j30d9082abj.jpg\"></p>\n<h3 id=\"简单执行范例\"><a href=\"#简单执行范例\" class=\"headerlink\" title=\"简单执行范例\"></a>简单执行范例</h3><p>1.使用vi进入一般模式</p>\n<p>vi test.txt</p>\n<p>2.按下i进入编辑模式，开始编辑文字</p>\n<p><strong>I、o、a</strong>,可以发现在左下角会出现–INSERT–，意味着可以输入任意字符，键盘上除了Esc这个按键之外，其他按键都可以视作为一般的输入按钮</p>\n<p>3.按下【Esc】键回到一般模式</p>\n<p>4.在一般模式中按下:wq存储后离开vi</p>\n<h3 id=\"命令行内容说明\"><a href=\"#命令行内容说明\" class=\"headerlink\" title=\"命令行内容说明\"></a>命令行内容说明</h3><ul>\n<li>一般模式<br><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs63qcme7nj30kq04o75v.jpg\"><br><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/be70dd4f37983a9dc34d3d34186d2314\"><br><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/f3b6902891dee70dad0f3127be15f735\"><br><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/aff76fed52058823c4445c3e58d5f9d9\"><br><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/28656f3faf2df35255dd72ffea848c6a\"><br><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/3b4fad79b6c38b5181dc903205d883c6\"><blockquote>\n<p>ctrl  +  f：屏幕向下移动一页，相当于Page  Down按键</p>\n</blockquote>\n</li>\n</ul>\n<blockquote>\n<p>Ctrl  +  b：屏幕向上移动一页，相当于Page  Up按键</p>\n</blockquote>\n<blockquote>\n<p>0         ：移动到这一行的最前面字符处</p>\n</blockquote>\n<blockquote>\n<p>$         ：移动到这一行的最后面字符处</p>\n</blockquote>\n<blockquote>\n<p>G         ：移动到这个文件的最后一行        </p>\n</blockquote>\n<blockquote>\n<p>gg        ：移动到文件的第一行</p>\n</blockquote>\n<blockquote>\n<p>n《Enter》  ：n为数字，光标向下移动n行</p>\n</blockquote>\n<blockquote>\n<p>/word     ：从光标向下寻找一个名为word的字符串</p>\n</blockquote>\n<blockquote>\n<p>n1、n2s/word1/word2/g：n1与n2为数字，在第n1与n2行之间寻找word1这个字符串，并将该字符串替换为word2</p>\n</blockquote>\n<blockquote>\n<p>x、X       ：x为向后删除一个字符，X为向前删除一个字符</p>\n</blockquote>\n<blockquote>\n<p>dd        ：删除光标所在的那一整行</p>\n</blockquote>\n<blockquote>\n<p>ndd       ：n为数字，从光标位置开始，删除向下n行</p>\n</blockquote>\n<blockquote>\n<p>yy        ：复制光标所在的那一行</p>\n</blockquote>\n<blockquote>\n<p>nyy       ：复制光标所在的向下n行</p>\n</blockquote>\n<blockquote>\n<p>p、P       ：p为将已复制的数据粘贴到光标的下一行，P为贴在光标上一行</p>\n</blockquote>\n<blockquote>\n<p>u         ：复原前一个操作</p>\n</blockquote>\n<blockquote>\n<p>ctrl  +  r：重做上一个操作</p>\n</blockquote>\n<ul>\n<li>编辑模式</li>\n</ul>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/783775d1f9f4593adca0d834c74b697e\"></p>\n<blockquote>\n<p>i、I       ：i为从当前光标所在处插入，I为在当前所在行的第一个非空格符处开始插入</p>\n</blockquote>\n<blockquote>\n<p>a、A       ：a为从当前光标所在的下一个字符处开始插入，A为从光标所在行的最后一个字符处开始插入</p>\n</blockquote>\n<blockquote>\n<p>r、R       ：r会替换光标所在的哪一个字符；R会一直替换光标所在的文字，直到按下Esc键为止</p>\n</blockquote>\n<ul>\n<li>命令行命令模式</li>\n</ul>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/fc4f797df47360c697e0bf9fd4a1b1b0\"></p>\n<blockquote>\n<p>：w       ：将编辑的数据写入硬盘文件中</p>\n</blockquote>\n<blockquote>\n<p>：q       ：离开vi</p>\n</blockquote>\n<blockquote>\n<p>：wq      ：存储后离开      </p>\n</blockquote>\n<h3 id=\"案例练习\"><a href=\"#案例练习\" class=\"headerlink\" title=\"案例练习\"></a>案例练习</h3><p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs854jjffij30mo0kqq8g.jpg\"></p>\n<h3 id=\"文件的恢复与暂存盘\"><a href=\"#文件的恢复与暂存盘\" class=\"headerlink\" title=\"文件的恢复与暂存盘\"></a>文件的恢复与暂存盘</h3><p><strong>当我们编辑一个文件时，假设名称为/tmp/passwd，那么在这个/tmp中就会有一个临时文件，文件名为/tmp/.passwd.swp,这是一个隐藏文件，我们所进行的一些修改，都会暂时存在该文件中，如果在文件修改过程中，系统死机，那么下次再重新vi /tmp/passwd时，系统就会告诉你，是否需要恢复成修改过程中的模样？如果按下R，就可以将数据恢复到修改过程的样子，而不是源文件</strong>、<br><strong>再/tmp中执行ls  -al 时，发现有两个文件，文件名分别为passwd与.passwd.swp。</strong><br><strong>（1）可能有人在编辑这个文件；（2）之前你在编辑这个文件时，因为某些未知因素导致vi程序中断，则该临时文件就会存在。如果是状态（2），则此时可以将该/.passwd.swp文件删除，或者直接vi /tmp/passwd,在vi询问是否恢复时，选择恢复，然后存储更新/tmp/passwd，之后再将这个/tmp/.passwd.swp文件删除即可。如果不删除的话，那么每次编辑这个文件时，都会告诉你该文件有问题</strong></p>\n<h2 id=\"vim的附加功能\"><a href=\"#vim的附加功能\" class=\"headerlink\" title=\"vim的附加功能\"></a>vim的附加功能</h2><p><strong>vim具有颜色显示功能，并且还支持许多程序语法，当使用vim编辑程序时，vim可帮你直接进行“程序调试debug”</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs8553ebrdj30my0c4dii.jpg\"></p>\n<h3 id=\"快选择\"><a href=\"#快选择\" class=\"headerlink\" title=\"快选择\"></a>快选择</h3><p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs855ftam8j30lu0c441d.jpg\"></p>\n<h3 id=\"多文件编辑\"><a href=\"#多文件编辑\" class=\"headerlink\" title=\"多文件编辑\"></a>多文件编辑</h3><p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs856k5vqgj30kt0kh41f.jpg\"></p>\n<h3 id=\"多窗口功能\"><a href=\"#多窗口功能\" class=\"headerlink\" title=\"多窗口功能\"></a>多窗口功能</h3><p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs857wr1tmj30kt07n75w.jpg\"></p>\n<h3 id=\"vim环境设置\"><a href=\"#vim环境设置\" class=\"headerlink\" title=\"vim环境设置\"></a>vim环境设置</h3><p><strong>如果以vim软件来搜索一个文件内部的某个字符串时，这个字符串会被反白，而下次再次以vim编辑这个文件时，该搜索的字符串还是存在。当编辑其他文件时，如果其他文件中也存在这个字符串，也会主动反白显示。另外，当重复编辑同一个文件时，第二次进入该文件，光标竟然就在上次离开的哪一行上</strong><br><strong>因为vim会主动将曾经做过的行为记录下来，以便下次可以轻松工作。那个记录动作的文件就是：~/.viminfo。每个人的家目录都应该有这个文件。这个文件是自动产生的，不必自行建立。在vim里所做过的操作，可以在这个文件内部查询到</strong><br><strong>vim的环境设置：在一般模式时输入：set  all来查看</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs858ka7avj30ig0kbn38.jpg\"></p>\n<h2 id=\"使用vi进行编辑的练习\"><a href=\"#使用vi进行编辑的练习\" class=\"headerlink\" title=\"使用vi进行编辑的练习\"></a>使用vi进行编辑的练习</h2><p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs858ka7avj30ig0kbn38.jpg\"></p>\n<h2 id=\"DOS与Linux换行符\"><a href=\"#DOS与Linux换行符\" class=\"headerlink\" title=\"DOS与Linux换行符\"></a>DOS与Linux换行符</h2><p><strong>在DOS使用的换行符为^M$,我们称为CR与LF两个符号。而在Linux中，则仅有LF（$）这个换行符。</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs858vh4mej30k20bfdir.jpg\"></p>\n<h2 id=\"本章与LPI的关系\"><a href=\"#本章与LPI的关系\" class=\"headerlink\" title=\"本章与LPI的关系\"></a>本章与LPI的关系</h2><p><strong>注意事项：</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gs85astrx7j30kb05b3yz.jpg\"></p>\n<h1 id=\"认识Bash-Shell\"><a href=\"#认识Bash-Shell\" class=\"headerlink\" title=\"认识Bash  Shell\"></a>认识Bash  Shell</h1><h2 id=\"Bash-Shell\"><a href=\"#Bash-Shell\" class=\"headerlink\" title=\"Bash Shell\"></a>Bash Shell</h2><h3 id=\"什么是Shell\"><a href=\"#什么是Shell\" class=\"headerlink\" title=\"什么是Shell\"></a>什么是Shell</h3><p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs85b3r880j30k802djrw.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs85bbduhoj30e90hzq4u.jpg\"></p>\n<p><strong>通常，替我们工作的是硬件，而控制硬件的是核心。用户是利用Shell控制一些内核提供的工具，来控制硬件替我们正确工作。由于我们听不懂人类语言，而人类也没办法直接记住内核的语言，所以两者的沟通就要通过Shell来支持</strong></p>\n<h3 id=\"系统的shell与-etc-shells功能\"><a href=\"#系统的shell与-etc-shells功能\" class=\"headerlink\" title=\"系统的shell与/etc/shells功能\"></a>系统的shell与/etc/shells功能</h3><ul>\n<li>目前至少有下面几个可用的shells:</li>\n</ul>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/c8e59f2ad4d82c3fc3ccaca3395c9fca\"></p>\n<h3 id=\"Bash-Shell-的功能\"><a href=\"#Bash-Shell-的功能\" class=\"headerlink\" title=\"Bash Shell 的功能\"></a>Bash Shell 的功能</h3><ul>\n<li>命令记忆能力</li>\n</ul>\n<blockquote>\n<p>只要在命令行按上下键，就可以找到前一个输入的命令</p>\n</blockquote>\n<ul>\n<li>命令与文件补全功能</li>\n</ul>\n<blockquote>\n<p>【tab】接在一串命令的第一个字的后面，则为命令补全</p>\n</blockquote>\n<blockquote>\n<p>【tab】接在一串命令的第二个字以后时，则为文件补齐</p>\n</blockquote>\n<ul>\n<li>命令别名设置功能</li>\n</ul>\n<blockquote>\n<p>在命令行输入alias，就可以知道当前的命令名有哪些了。也可以直接执行命令来设置别名：alias  lm = ‘ls  -al’</p>\n</blockquote>\n<ul>\n<li>作业控制、前台、后台控制</li>\n</ul>\n<blockquote>\n<p>可以单一登录的环境中，达到多任务的目的</p>\n</blockquote>\n<ul>\n<li>Shell scripts的强大功能</li>\n</ul>\n<blockquote>\n<p>可以将日常连续命令写成一个文件，该文件可以通过对话交互方式来进行主机的检测。也可以通过shell提供的环境变量及相关命令来进行设计</p>\n</blockquote>\n<ul>\n<li>通配符</li>\n</ul>\n<blockquote>\n<p>除了完整的字符串之外，bash还支持许多通配符来帮助用户查询与执行命令</p>\n</blockquote>\n<h3 id=\"Bash-Shell的内置命令：type\"><a href=\"#Bash-Shell的内置命令：type\" class=\"headerlink\" title=\"Bash Shell的内置命令：type\"></a>Bash Shell的内置命令：type</h3><p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/9d402ed527c82c219e3ee22578415338\"></p>\n<h3 id=\"执行命令\"><a href=\"#执行命令\" class=\"headerlink\" title=\"执行命令\"></a>执行命令</h3><p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/b3de6c937e8dab2326f8676e8a902891\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/6b0bf2ff9813838ae209fde29d74add2\"></p>\n<h2 id=\"Shell的变量功能\"><a href=\"#Shell的变量功能\" class=\"headerlink\" title=\"Shell的变量功能\"></a>Shell的变量功能</h2><p><strong>变量：变量就是以一组文字或字符，来替换一些设置或者是一串保留的数据</strong></p>\n<p><strong>ls命令应该要用/bin/ls来执行，那为什么在任意路径下都可以执行ls，而不需要指定路径？这是因为系统已经默认了一些搜索路径PATH，所以当您执行一些命令的时候，系统就会根据据该PATH的设置来搜索命令，这个PATH就是一个变量，可以使用echo命令显示变量</strong></p>\n<h3 id=\"变量的获取与设置：echo、变量设置规则、unset\"><a href=\"#变量的获取与设置：echo、变量设置规则、unset\" class=\"headerlink\" title=\"变量的获取与设置：echo、变量设置规则、unset\"></a>变量的获取与设置：echo、变量设置规则、unset</h3><p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/99594b1c8554311115c19148eab7ab68\"></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/f1f8473ad693c89ecef7295de38fbf48\"></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/fd5796399d45c7ab93f2ca0932b027df\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/64449865936cf910a33222a0cf7d509a\"></p>\n<blockquote>\n<p>在执行命令的过程中，引号（’）代表的含义是什么？</p>\n</blockquote>\n<blockquote>\n<p>在一串命令中，’之内的命令将先执行，而其执行出来的结果将作为外部输入信息.</p>\n</blockquote>\n<h3 id=\"变量的用途\"><a href=\"#变量的用途\" class=\"headerlink\" title=\"变量的用途\"></a>变量的用途</h3><p><strong>PATH变量是我们在执行命令时所需要具备的命令搜索目录数据，没有它，就要使用绝对路径来执行命令</strong></p>\n<blockquote>\n<p>案例一：在UNIX中，要进行一些数值模式的仿真工作。由于数据量太大，为了怕日后忘记这个目录的内容与主要意义，所以文件名都取得很长，在执行模式的过程中，常切换目录，非常麻烦。所以我就设置几行目录名称成为一个4个字符的变量，只要输入“ cd  $VAR1 ” 命令，马上就移动到该路径下</p>\n</blockquote>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/eca28b7266b5e7f3d8a45c1938c8a0fd\"></p>\n<h3 id=\"环境变量的功能\"><a href=\"#环境变量的功能\" class=\"headerlink\" title=\"环境变量的功能\"></a>环境变量的功能</h3><p>1.环境变量的说明：env （查看变量）</p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/8fbb5f2ca68531ddfad0ec1be9fc30be\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/b9ff66241ab3f77b08d4b63217148b56\"></p>\n<p>2.其他所有的变量说明：set</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/afbbc605cdb561f02ab27dd4012b84ae\"></p>\n<p> <strong>上面比较重要的变量</strong></p>\n<ul>\n<li>PSI：（提示符的设置）</li>\n</ul>\n<p><strong>下面列出了FC4的环境下，默认的bash的PS1变量内的特殊符号所代表的含义：</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/84c9f832edc099b7da47ea61dba27f49\"></p>\n<ul>\n<li>$：（关于shell的PID）</li>\n</ul>\n<p>当前这个shell的进程号。即为PID</p>\n<ul>\n<li>？：（上一个执行命令的回传码）</li>\n</ul>\n<p>上一个执行的命令所回传的值；当我们执行某些命令时，这些命令都会回传一个执行后的代码。如果成功地执行该命令，则会回传一个0值，如果执行过程发生错误，就会回传错误代码，通常以非0值来替换</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/eef78cabfa9476eabc218158887c77af\"></p>\n<ul>\n<li>OSTYPE、HOSTTYPE、MACHYTYPE：（主机硬件与核心的等级）</li>\n</ul>\n<p>他们与程序的安装有关。在安装软件的时候，需要通过编译器将源码编译为二进制文件。但是，我们可以针对硬件设置进行编译的优化，就可以用到这些参数。例如当前主要的版本都是针对i386即最低等级的机器进行优化，这样才能安装在较高级的机器上，如果以686机型来优化，那么，就无法向下兼容。</p>\n<ul>\n<li>自定义变量转成环境变量：export</li>\n</ul>\n<p>export  变量：在引用他人的文件或其他程序时，如果忘记设置export的话，那么不同文件中的相同变量值，将需要一再重复设置。所以，只要在头一个文件使用export，那么后续的文件引用时，将会把该变量内容读进来。如果仅下达export而没有变量，此时将会把所有的环境变量显示出来。</p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/be1e8d76162cb1b546a3f28251f61dd9\"></p>\n<h3 id=\"语系文件的变量\"><a href=\"#语系文件的变量\" class=\"headerlink\" title=\"语系文件的变量\"></a>语系文件的变量</h3><p><strong>当我们使用man command的方式去查询某个数据的帮助文件时，该帮助文件的内容可能会因为我们使用的语系，而产生一些乱码。另外，利用ls查询文件的时间时，也可能会有乱码出现在时间部分。</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/74c2dbd13d61322e77dff93d85eecd11\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/80a0bae6ebcd312b433b71badd2ad6cb\"></p>\n<h3 id=\"变量的有效范围\"><a href=\"#变量的有效范围\" class=\"headerlink\" title=\"变量的有效范围\"></a>变量的有效范围</h3><p><strong>如果在运行程序的时候，存在父程序与子程序的不同程序关系时，则变量可否被引用是与export有关的，被export后的变量，可以称它为环境变量。环境变量可以被子程序所引用，但是，其他的自定义变量内容就不会存在于子程序中。我们自行设置的变量，只在当前shell环境中存在，在子程序中将不会存在此变量，除非使用export将自定义变量变成环境变量。</strong></p>\n<p><strong>环境变量可以让子程序继续引用的原因：</strong></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/b7c1f43bbd37d8753e399f29c1738fe9\"></p>\n<h3 id=\"变量键盘读取、数组与声明：read、array、declare\"><a href=\"#变量键盘读取、数组与声明：read、array、declare\" class=\"headerlink\" title=\"变量键盘读取、数组与声明：read、array、declare\"></a>变量键盘读取、数组与声明：read、array、declare</h3><p>1.read：要读取来自键盘输入的变量</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/d64b4fa434dd81c73e81a87c1e9d49a1\"></p>\n<p>2.declare/typeset:声明变量的属性</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/f583bc4a0059685df86912a014cf405a\"></p>\n<p>3.array：使用数组来声明一些变量</p>\n<p>数组的设置方式：var [index] = content</p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/9b13c22737f96c5b296872f440936b83\"></p>\n<h3 id=\"与文件系统及程序的限制关系：ulimit\"><a href=\"#与文件系统及程序的限制关系：ulimit\" class=\"headerlink\" title=\"与文件系统及程序的限制关系：ulimit\"></a>与文件系统及程序的限制关系：ulimit</h3><p><strong>为了防止系统不死机，我们的Bash是可以限制用户的某些系统资源的，包括可以打开的文件数量、可以使用的CPU实践、可以使用的内存总量</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/bae0d67f9dcc5668ee7b429c937ce6d2\"></p>\n<h3 id=\"附加的变量设置功能\"><a href=\"#附加的变量设置功能\" class=\"headerlink\" title=\"附加的变量设置功能\"></a>附加的变量设置功能</h3><p>获取两种变量的方法：1.echo  $HOME;   2.echo  ${HOME}</p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/4c9a3447021b1e9286d4763e572271a6\"></p>\n<h2 id=\"命令别名与历史命令\"><a href=\"#命令别名与历史命令\" class=\"headerlink\" title=\"命令别名与历史命令\"></a>命令别名与历史命令</h2><h3 id=\"命令别名设置：alias、unalias\"><a href=\"#命令别名设置：alias、unalias\" class=\"headerlink\" title=\"命令别名设置：alias、unalias\"></a>命令别名设置：alias、unalias</h3><p><strong>执行命令：</strong> alias  ls=’ls -l | more’</p>\n<p><strong>查询当前命令别名：</strong> alias</p>\n<h3 id=\"历史命令：history\"><a href=\"#历史命令：history\" class=\"headerlink\" title=\"历史命令：history\"></a>历史命令：history</h3><p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/7059f9120b1d8e3fd6bcd668c4cb022e\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/e5fb092dc2441c9bc8b6591243831e00\"></p>\n<p>相关的功能：</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/10de0eb917aaab86c3f3ec49fb91c9b6\"></p>\n<h2 id=\"Bash-Shell使用环境\"><a href=\"#Bash-Shell使用环境\" class=\"headerlink\" title=\"Bash Shell使用环境\"></a>Bash Shell使用环境</h2><h3 id=\"绝对路径与相对路径\"><a href=\"#绝对路径与相对路径\" class=\"headerlink\" title=\"绝对路径与相对路径\"></a>绝对路径与相对路径</h3><ul>\n<li>绝对路径：是指以根目录开始一直写到文件的一种命令方式</li>\n</ul>\n<blockquote>\n<p>当前在/home/test这个test用户的家目录中，想要看看里面的.bashrc文件的数据，使用more命令，而这个命令在/bin/more中，执行命令的正确方法为：</p>\n</blockquote>\n<blockquote>\n<p>/bin/more  .bashrc</p>\n</blockquote>\n<ul>\n<li>相对路径：.与..分别代表这个路径与上层路径</li>\n</ul>\n<blockquote>\n<p>我所在目录为/home/test，然后我要使用/bin/more执行文件，并且使用相对路径的方法</p>\n</blockquote>\n<blockquote>\n<p>../../bin/more  .bashre</p>\n</blockquote>\n<h3 id=\"登录消息显示数据-etc-issue、-etc-motd\"><a href=\"#登录消息显示数据-etc-issue、-etc-motd\" class=\"headerlink\" title=\"登录消息显示数据:/etc/issue、/etc/motd\"></a>登录消息显示数据:/etc/issue、/etc/motd</h3><p>1./etc/issue</p>\n<p>终端接口（tty1-tty6）登录的时候，会有几行提示的字符串</p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/219de7a50262d2647d2c238b0c2319f7\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/35b52a990e06ba96b65c456443860f71\"></p>\n<p>2./etc/motd</p>\n<p>如果想让用户登录后获取一些消息，可以将消息加入/etc/motd中，当登录后，告诉登陆者，系统将会在某个固定时间进行维护工作</p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/213c2e7089a80662252c2ba700857c6b\"></p>\n<h3 id=\"环境设置文件：bashrc、-bashrc、-profile、profile…、-etc-inputrc、source\"><a href=\"#环境设置文件：bashrc、-bashrc、-profile、profile…、-etc-inputrc、source\" class=\"headerlink\" title=\"环境设置文件：bashrc、/.bashrc、/.profile、profile…、/etc/inputrc、source\"></a>环境设置文件：bashrc、<del>/.bashrc、</del>/.profile、profile…、/etc/inputrc、source</h3><p>1.系统设置值</p>\n<ul>\n<li>/etc/sysconfig/i18n</li>\n</ul>\n<blockquote>\n<p>语系是由i18n维护的，而FC4默认的系统语系设置文件就在/etc/sysconfig/i18n中</p>\n</blockquote>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/0d2d438a6e49d4579f051168504b2dda\"></p>\n<ul>\n<li>/etc/profile</li>\n</ul>\n<blockquote>\n<p>这个文件设置了几个重要的变量，例如“PATH、USER、MAIL、HOSTNAME、HISTSIZE、umask等，同时也确定/etc/inputrc这个针对键盘热键设置的文件的数数据内容。可以在这里设置总体的PATH等信息。同时，这个文件也规划出/etc/profile.d及/etc/inputrc这两个目录与文件</p>\n</blockquote>\n<ul>\n<li>/etc/bashrc</li>\n</ul>\n<blockquote>\n<p>这个文件确定umask的功能，同时也确定了提示符的内容</p>\n</blockquote>\n<ul>\n<li>/etc/profile.d/*.sh</li>\n</ul>\n<blockquote>\n<p>针对bash及C-shell规范了一些数据。这个目录中针对颜色、语系、vim及which等命令进行了一些附加设置</p>\n</blockquote>\n<ul>\n<li>/etc/man.config</li>\n</ul>\n<blockquote>\n<p>规定了使用man的时候，该去哪里查看数据的路径设置；</p>\n</blockquote>\n<p><strong>这就是系统在设置时常用的文件。通常设置完这几个文件之后，都要先注销再登录之后，设置才生效</strong></p>\n<p>2.个人设置值</p>\n<ul>\n<li><del>/.bash_profile,</del>/.bash_login,~/.profile</li>\n</ul>\n<blockquote>\n<p>3个文件只要一个，一般默认是以<del>/.bash_profile文件名存在。这个文件可以定义个性化的路径PATH与环境变量；bash启动时，会先去读取</del>/.bash_profile,找不到时，就去读取<del>/.bash_login,然后才是</del>/.profile</p>\n</blockquote>\n<ul>\n<li>~/.bashrc</li>\n</ul>\n<blockquote>\n<p>个性化设置都会写在这里。例如命令别名、路径等；在每次执行shell脚本的时候，都会重新读取这个文件，所以时最完整的，而~/.bash_profile则只有登录时才读取一次</p>\n</blockquote>\n<ul>\n<li>~/.bash_history</li>\n</ul>\n<blockquote>\n<p>历史命令就记录再这里。而这个文件能够记录多少数据，则与HISTSIZE变量有关。每次登录bash后，bash会先读取这个文件，将所有的历史命令读入内存，因此，当我们登录bash后，就可以查知上次使用过那些命令</p>\n</blockquote>\n<ul>\n<li>~/.bash_logout</li>\n</ul>\n<blockquote>\n<p>这个文件记录”当我注销bash后，系统再帮我做完什么操作后才离开</p>\n</blockquote>\n<p><strong>登录bash的时候，这些设置文件是如何读取的</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/3d9e0e7ecbefd76b0b7d1be6d318ca91\"></p>\n<p>3.登录shell与非登录shell</p>\n<p><strong>所谓登录shell，指的是当用户登录Linux系统时，所取得的那个shell；当登录后，再去执行其他shell时，其他shell就是非登录shell。</strong></p>\n<p><strong>登录与非登录shell的差异:当登录Linux，即是取得的登陆shell时，会读取<del>/.bash_profile、</del>/bash_login、<del>/.profile。至于取得登录shell后继续操作的其他非登录shell，读取的就仅有</del>/.bashrc。而大部分的Linux版本都会将<del>/.bash_profile的内容指到</del>/.bashrc</strong></p>\n<h3 id=\"终端的环境设置：stty、set\"><a href=\"#终端的环境设置：stty、set\" class=\"headerlink\" title=\"终端的环境设置：stty、set\"></a>终端的环境设置：stty、set</h3><p>1.stty设置终端的输入按键代表的意义</p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/ac9ec9f2352455dd269020dc6b0b52df\"></p>\n<p>2.set设置整个命令输出/输入的环境</p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/191e334580b7706fa48137b0d4cb6dff\"></p>\n<h3 id=\"通配符与特殊符号\"><a href=\"#通配符与特殊符号\" class=\"headerlink\" title=\"通配符与特殊符号\"></a>通配符与特殊符号</h3><p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/55340db6a52281e7c910b88c101bd811\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/2aadc6956359b1a67e1d4821e0a7c911\"></p>\n<p>*<em>最常见的就是</em>、？、【】、’**</p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/a8d4b4b55258d94783d4cd3355b509cc\"></p>\n<h3 id=\"数据流重导向\"><a href=\"#数据流重导向\" class=\"headerlink\" title=\"数据流重导向\"></a>数据流重导向</h3><p><strong>就是将数据传到其他地方。数据流重导向就是将某个命令执行后应该要出现在屏幕上的数据，传输到其他方，例如文件或者设备</strong></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/e7f5339e64a4962ebf6cf6807981a02b\"></p>\n<p>执行命令时，这个命令可能会通过文件读入数据，经过处理之后，再将数据输出到屏幕</p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/c5ae5d2b09ee0390b1c1ae129a5728f0\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/e2249e476bd2d29b0092d6b27132ce89\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/b6c4a2e8c8710a7e704326eb6b475978\"></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/ca95d809ed6ff3da73f6aa83384602e0\"></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/dd7b91572fd950e1ba2a9a4a58c6ae8f\"></p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/60749b5c4b7bae7b3a0503096105331a\"></p>\n<h3 id=\"命令执行的判断依据：-、-amp-amp-、\"><a href=\"#命令执行的判断依据：-、-amp-amp-、\" class=\"headerlink\" title=\"命令执行的判断依据： ;、&amp;&amp;、||\"></a>命令执行的判断依据： ;、&amp;&amp;、||</h3><ol>\n<li> ;  :用于执行多次命令</li>\n</ol>\n<p>sync; sync; shutdown  -h  now</p>\n<ol start=\"2\">\n<li>&amp;&amp;  :当前的命令执行结果为正确（仅有标准输出）时，就可以接着执行后续命令，否则略过</li>\n</ol>\n<p>ls  /vbird   &amp;&amp;  touch   /vbird/test</p>\n<ol start=\"3\">\n<li> || ：当前一个命令有错误时，才会执行||后面的命令</li>\n</ol>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/4178247df710d26addee2a9c8e652b20\"></p>\n<h2 id=\"管道命令（pipe）\"><a href=\"#管道命令（pipe）\" class=\"headerlink\" title=\"管道命令（pipe）\"></a>管道命令（pipe）</h2><p><strong>管道命令|仅能处理通过前面一个命令传来的正确信息，也就是标准输出STDOUT的信息，对于标准错误、并没有直接处理的能力</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/26d61af51046bd69f67da7686b02ad68\"></p>\n<p>再每个管道的前后都是命令，后一个命令的输入是前一个命令的输出</p>\n<h3 id=\"选取命令：cut、grep\"><a href=\"#选取命令：cut、grep\" class=\"headerlink\" title=\"选取命令：cut、grep\"></a>选取命令：cut、grep</h3><p>1.cut：可以将一段消息的某段切出来。处理的消息是以行为单位</p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/662cd4bf5d2b0a02f94932877b1fa658\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/317cf1d098695ae32cfb061fe6122c03\"></p>\n<p>2.grep：分析一行消息，若其中有所需要的信息，就将该行取出</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/6c626fd66bc650d356b05e468f6d7397\"></p>\n<h3 id=\"排序命令：sort、wc、uniq\"><a href=\"#排序命令：sort、wc、uniq\" class=\"headerlink\" title=\"排序命令：sort、wc、uniq\"></a>排序命令：sort、wc、uniq</h3><p>1.sort:根据不同的数据类型来排序</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/823f513ebdd8defcdf0bb437bbb94b29\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/bdf95ceff6b17ce4e94f14a0e17f9d52\"></p>\n<p>2.uniq：如果排序完成了，可以将重复的数据仅显示一次</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/d318a443fef67bd8b6f8f9a10ac1dd8f\"></p>\n<p>3.wc：查询文件里有多少字，多少行，多少字符</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/11a070cac063bf3d0ab4e3b31f9ba7b2\"></p>\n<h3 id=\"双向重导向：tee\"><a href=\"#双向重导向：tee\" class=\"headerlink\" title=\"双向重导向：tee\"></a>双向重导向：tee</h3><p><strong>将数据流分别送至文件和屏幕：而输出到屏幕的，其实就是stdout，可以让下个命令继续处理</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/44ea2ab0fe95548d1ded005cbb7f927e\"></p>\n<p>在命令重导向的时候，如果要将数据发送到文件，屏幕上就不会出现任何数据。如果需要将数据同时显示在屏幕和文件中，这时就要使用tee命令。使用last可以查看这个月份的登录数据，而使用了tee之后，会将数据同时传给下一个命令去执行，也会将数据写last.list文件中</p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/6f5d068ad5b0dd0710dcb75f25fddb87\"><br><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/6f5d068ad5b0dd0710dcb75f25fddb87\"></p>\n<h3 id=\"字符转换命令：tr、col、join、paste、expand\"><a href=\"#字符转换命令：tr、col、join、paste、expand\" class=\"headerlink\" title=\"字符转换命令：tr、col、join、paste、expand\"></a>字符转换命令：tr、col、join、paste、expand</h3><p>1.tr：可以用来删除一段消息中的文字，或者是进行文字消息的替换</p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/a1d637ac39eb839131a37b619768c6ce\"></p>\n<p>2.col：可以用来将【tab】按键换成空格键</p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/d841a31b70bb0fff8eec39c4eb2251ae\"></p>\n<p>3.join：主要是在处理两个文件中，有相同数据的行，将他们加在一起</p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/7c39d4abf31fffc56fb090712036e1dc\"></p>\n<p>4.paste：直接将两行贴在一起，且中间以【tab】键隔开</p>\n<p><img data-src=\"https://img04.sogoucdn.com/app/a/100520146/3625a0eacc70d68d714654fdecb6f9d5\"></p>\n<p>5.expend：将【tab】按键转成空格键</p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/4134afcb52371e00b6eba901facddf34\"></p>\n<p><img data-src=\"https://img02.sogoucdn.com/app/a/100520146/c50fe0a6ba9123143f6d5a513978140a\"></p>\n<h3 id=\"拆分命令：split\"><a href=\"#拆分命令：split\" class=\"headerlink\" title=\"拆分命令：split\"></a>拆分命令：split</h3><p><strong>如果文件太大，导致无法复制在便携设备中，可以使用split，它可以将一个大文件、根据文件大小或行数来拆分，将大文件拆分为小文件</strong></p>\n<p><img data-src=\"https://img01.sogoucdn.com/app/a/100520146/1d42d0a6a2c638c32d06cd108adfc928\"></p>\n<h3 id=\"参数代换：xargs\"><a href=\"#参数代换：xargs\" class=\"headerlink\" title=\"参数代换：xargs\"></a>参数代换：xargs</h3><p><strong>args则是arguments的意思。这是产生某个命令的参数的意思。xargs可以读入是特定的数据，并且以空格符或换行符作为标识，将stdin的数据分隔成为参数</strong></p>\n<p><img data-src=\"https://img03.sogoucdn.com/app/a/100520146/ffa1279689d9746783bb27598114874c\"></p>\n<h3 id=\"减号（-）的用途\"><a href=\"#减号（-）的用途\" class=\"headerlink\" title=\"减号（-）的用途\"></a>减号（-）的用途</h3><p><strong>在管道命令中，常常会用到一个命令的dtdout作为这次的stdin，某些命令需要用到文件名称来进行处理时，stdin与stdout可以利用减号（-）来替代</strong></p>\n<p>tar  -cvf  -home   |   tar  -xvf  -</p>\n<h1 id=\"第十二章-正则表达式\"><a href=\"#第十二章-正则表达式\" class=\"headerlink\" title=\"第十二章 正则表达式\"></a>第十二章 正则表达式</h1><h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><h3 id=\"什么是正则表达式\"><a href=\"#什么是正则表达式\" class=\"headerlink\" title=\"什么是正则表达式\"></a>什么是正则表达式</h3><p><strong>正则表达式就是处理字符串的方法，以行为单位进行字符串的处理，通过一些特殊符号的辅助，可以让用户轻松搜索/替换某特定字符串</strong></p>\n<h3 id=\"系统管理员使用正则表达式\"><a href=\"#系统管理员使用正则表达式\" class=\"headerlink\" title=\"系统管理员使用正则表达式\"></a>系统管理员使用正则表达式</h3><p><strong>系统的错误消息登录文件的内容记载了系统产生的信息，其中包含系统是否被入侵的记录数据，管理员就可以通过正则表达式，将登录信息进行处理，仅取出有问题的信息来进行分析</strong></p>\n<h3 id=\"正则表达式的广泛用途\"><a href=\"#正则表达式的广泛用途\" class=\"headerlink\" title=\"正则表达式的广泛用途\"></a>正则表达式的广泛用途</h3><p><strong>正则表达式可以让系统管理员更为方便地管理主机，由于正则表达式强大的字符串处理能力，当前有许多软件都支持正则表达式。常见的就是邮件服务器</strong></p>\n<h3 id=\"正则表达式与Shell在Linux中的角色定位\"><a href=\"#正则表达式与Shell在Linux中的角色定位\" class=\"headerlink\" title=\"正则表达式与Shell在Linux中的角色定位\"></a>正则表达式与Shell在Linux中的角色定位</h3><p><strong>正则表达式是Linux基础中的基础，不论是对系统的认识还是进行系统管理，它都会带来很大的帮助</strong></p>\n<h3 id=\"扩展的正则表达式\"><a href=\"#扩展的正则表达式\" class=\"headerlink\" title=\"扩展的正则表达式\"></a>扩展的正则表达式</h3><p><strong>正则表达式除了简单的一组字符串处理之外，还可以进行用户组的字符串处理</strong></p>\n<h2 id=\"基础正则表达式\"><a href=\"#基础正则表达式\" class=\"headerlink\" title=\"基础正则表达式\"></a>基础正则表达式</h2><p><strong>正则表达式是处理字符串的标准表达方式，它需要有支持的工具程序来辅助</strong></p>\n<h3 id=\"通过grep选取字符串\"><a href=\"#通过grep选取字符串\" class=\"headerlink\" title=\"通过grep选取字符串\"></a>通过grep选取字符串</h3><p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grxpyboiayj30k508ydhh.jpg\"></p>\n<p><strong>grep是很常见也很常用的命令，它最重要的功能就是进行字符串数据的比较，然后将符合用户需求的字符串打印出来；grep除了可以进行文件的数据搜索之外，也常常应用在输入/输出的数据处理中</strong></p>\n<p>1.例题一：搜索特定字符串</p>\n<p><strong>从文件中提取the字符串</strong></p>\n<ul>\n<li>grep -vn  ‘the’  regular_express.txt</li>\n</ul>\n<p><strong>取得的the字符串不考虑大小写</strong></p>\n<ul>\n<li>grep  -in  ‘the’  regular_express.txt</li>\n</ul>\n<p>2.例题二：利用【】来搜索集合字符</p>\n<p><strong>搜索test或taste这两个单词，搜索他们共同的部分</strong></p>\n<ul>\n<li>grep  -n  ‘t[ae]st’   regular_express.txt</li>\n</ul>\n<p><strong>如果像搜索oo的字符</strong></p>\n<ul>\n<li>grep -n ‘oo’ regular_express.txt</li>\n</ul>\n<p><strong>不想oo前面有g，可利用反向【^】</strong></p>\n<ul>\n<li>grep  -n  ‘[^g]oo’   regular_express.txt</li>\n</ul>\n<p><strong>oo前面不想有小写字母</strong></p>\n<ul>\n<li>grep -n ‘[^a-z]oo’  regular_express.txt</li>\n</ul>\n<p><strong>取得有数字的行</strong></p>\n<ul>\n<li>grep -n ‘[0-9]’  regular_express.txt</li>\n</ul>\n<p>3.例题三：行首与行尾字符^$</p>\n<p><strong>如果想让the只在行首列出</strong></p>\n<ul>\n<li>grep  -n ‘^the’ regular_express.txt</li>\n</ul>\n<p><strong>如果想列出开头是小写字母的哪一行</strong></p>\n<ul>\n<li>grep -n ‘^[a-z]’  regular_express.txt</li>\n</ul>\n<p><strong>开头不想是英文字母</strong></p>\n<ul>\n<li>grep  -n  ‘^[a-zA-Z]’ regular_express.txt</li>\n</ul>\n<p><strong>找出行尾结束为小数点的行</strong></p>\n<ul>\n<li>grep -n ‘.$’  regular_express.txt</li>\n</ul>\n<p><strong>找出那行为空白行</strong></p>\n<ul>\n<li>grep -n ‘^$’  regular_express.txt</li>\n</ul>\n<p>4.例题四：任意一个字符（.）与重复字符（*）</p>\n<p>1.（.）代表绝对一个任意字符</p>\n<p><strong>找出共有4个字符的g??d</strong></p>\n<ul>\n<li>grep -n ‘g..d’  regular_express.txt</li>\n</ul>\n<p>2.（*）重复0个或多个前面的RE字符</p>\n<p><strong>找出至少两个o以上的字符串，就需要</strong></p>\n<ul>\n<li>grep -n ‘ooo*’  regular_express.txt</li>\n</ul>\n<p><strong>想要字符串开头与结尾都是g，但是两个g之间仅能至少一个o</strong></p>\n<ul>\n<li>grep -n ‘go*g’ regular_express.txt</li>\n</ul>\n<p>*<em>如何得到g…g(.<em>代表零个或多个任意字符)</em></em></p>\n<ul>\n<li>grep  -n  ‘g.*g’  regular_express.txt</li>\n</ul>\n<p>5.例题五：限定连续重复字符范围{}</p>\n<p><strong>要找到两个o的字符串</strong></p>\n<ul>\n<li>grep -n ‘o{2}‘   regular_express.txt</li>\n</ul>\n<p><strong>找g后面接2-5个o，然后再接一个g的字符串</strong></p>\n<ul>\n<li>grep -n ‘go{2,5}g’ regular_express.txt</li>\n</ul>\n<h3 id=\"重要特殊字符\"><a href=\"#重要特殊字符\" class=\"headerlink\" title=\"重要特殊字符\"></a>重要特殊字符</h3><p><img data-src=\"https://www.hualigs.cn/image/60d92c0ec29ce.jpg\"><br><img data-src=\"https://www.hualigs.cn/image/60d92c324770a.jpg\"></p>\n<h2 id=\"扩展正则表达式\"><a href=\"#扩展正则表达式\" class=\"headerlink\" title=\"扩展正则表达式\"></a>扩展正则表达式</h2><blockquote>\n<p>/#grep -v ‘^$’  regular_express.txt  |  grep  -v  ‘^#’</p>\n</blockquote>\n<blockquote>\n<p>/#egrep -v ‘^$|^#’  regular_express.txt</p>\n</blockquote>\n<blockquote>\n<p>使用支持扩展型正则表达式的egrep与特殊字符（|）来分隔两组字符串</p>\n</blockquote>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grtfm9ndx0j30l90icn14.jpg\"></p>\n<h2 id=\"格式化显示：printf\"><a href=\"#格式化显示：printf\" class=\"headerlink\" title=\"格式化显示：printf\"></a>格式化显示：printf</h2><p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grtfmc8nmoj30n10k2gqf.jpg\"><br><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grtfmc8nmoj30n10k2gqf.jpg\"></p>\n<h2 id=\"sed工具简介\"><a href=\"#sed工具简介\" class=\"headerlink\" title=\"sed工具简介\"></a>sed工具简介</h2><p><strong>sed可以分析标准输入（STDIN）的数据，然后将数据经过处理后，再将它输出到标准输出（STDOUT）</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grtfmh3pzlj30j10nhgsf.jpg\"><br><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grtfmji3oyj30in0e9gpn.jpg\"></p>\n<h2 id=\"awk工具简介\"><a href=\"#awk工具简介\" class=\"headerlink\" title=\"awk工具简介\"></a>awk工具简介</h2><p><strong>与sed常常用于整行处理相比，awk比较倾向于一行中分成数个字段来处理</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grtfmlw7o3j30nd0coadc.jpg\"><br><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grtfwxngabj30kx09m3z8.jpg\"></p>\n<h2 id=\"文件数据比较与显示的相关功能\"><a href=\"#文件数据比较与显示的相关功能\" class=\"headerlink\" title=\"文件数据比较与显示的相关功能\"></a>文件数据比较与显示的相关功能</h2><h3 id=\"文件比较\"><a href=\"#文件比较\" class=\"headerlink\" title=\"文件比较\"></a>文件比较</h3><p>1.diff（用于比较两个文件之间的不同，一般用于ASCII纯文本文件的比较）</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grtgsf42l5j30jt0awwgn.jpg\"></p>\n<p>2.cmp(主要是用于比较两个文件，用位为单位去比较，因此可以比较二进制文件)</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d57090d8bd1.jpg\"></p>\n<p>3.patch（将旧文件更新到新版内容）</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d570d567712.jpg\"></p>\n<h3 id=\"文件打印准备：pr\"><a href=\"#文件打印准备：pr\" class=\"headerlink\" title=\"文件打印准备：pr\"></a>文件打印准备：pr</h3><p><img data-src=\"https://www.hualigs.cn/image/60d57147e5600.jpg\"></p>\n<blockquote>\n<p>上面第一行就是使用pr处理后所形成的标题</p>\n</blockquote>\n<h2 id=\"重点回顾\"><a href=\"#重点回顾\" class=\"headerlink\" title=\"重点回顾\"></a>重点回顾</h2><p><img data-src=\"https://www.hualigs.cn/image/60d5718760641.jpg\"></p>\n<h1 id=\"第十三章-学习Shell脚本\"><a href=\"#第十三章-学习Shell脚本\" class=\"headerlink\" title=\"第十三章   学习Shell脚本\"></a>第十三章   学习Shell脚本</h1><h2 id=\"什么是Shell脚本\"><a href=\"#什么是Shell脚本\" class=\"headerlink\" title=\"什么是Shell脚本\"></a>什么是Shell脚本</h2><p><strong>shell是命令行界面下让我们与系统沟通的工具接口；最简单的功能就是将许多命令写在一起，让用户执行一次就能够执行多个命令；由于这个程序语言由于利用shell与相关工具命令，所以不需要编译即可执行；</strong></p>\n<h3 id=\"为什么学习shell脚本\"><a href=\"#为什么学习shell脚本\" class=\"headerlink\" title=\"为什么学习shell脚本\"></a>为什么学习shell脚本</h3><ul>\n<li><p>自动化管理的重要依据：编写一个简单程序每日自动处理分析，等有问题才通知您</p>\n</li>\n<li><p>追踪与管理系统的重要工作：Linux系统服务启动的接口，在/etc/init.d/目录下，所有文件都是脚本；包括引导过程也都是利用shell脚本来搜索系统的相关数据，然后再代入各个服务的设置参数；</p>\n</li>\n<li><p>简单的入侵检测功能：当系统有异常现象时，将这些异常现象记录在系统记录器，可以在固定几分钟内主动去分析系统登录文件。</p>\n</li>\n<li><p>连续命令单一化：将在命令行连续执行的命令写入脚本，通过直接执行脚本来启动一连串的命令行命令；</p>\n</li>\n<li><p>简单的数据处理：可以用shell脚本比较数据文件，处理文字数据等；</p>\n</li>\n<li><p>跨平台支持与缩短学习历程：几乎所有类UNIX机器上都可以运行shell脚本</p>\n</li>\n</ul>\n<h3 id=\"第一个脚本的编写与执行\"><a href=\"#第一个脚本的编写与执行\" class=\"headerlink\" title=\"第一个脚本的编写与执行\"></a>第一个脚本的编写与执行</h3><p><img data-src=\"https://www.hualigs.cn/image/60d57218b4b2a.jpg\"></p>\n<p><strong>执行shell文件</strong><br><img data-src=\"https://www.hualigs.cn/image/60d5724c0180b.jpg\"></p>\n<p><strong>第一行：#!/bin/bash在声明这个脚本使用的shell名称：使用的是bash；</strong></p>\n<p><strong>除了#！是用来声明shell的之外，其他的#都是注释。</strong></p>\n<p><strong>第六行：主要变量的声明</strong></p>\n<p><strong>第七行为主要程序部分：</strong></p>\n<p><strong>第八行为告知执行结果：使用exit命令让程序中断</strong></p>\n<h3 id=\"编写Shell简本的良好习惯\"><a href=\"#编写Shell简本的良好习惯\" class=\"headerlink\" title=\"编写Shell简本的良好习惯\"></a>编写Shell简本的良好习惯</h3><p><img data-src=\"https://www.hualigs.cn/image/60d57276b6994.jpg\"></p>\n<h2 id=\"简单的Shell脚本练习\"><a href=\"#简单的Shell脚本练习\" class=\"headerlink\" title=\"简单的Shell脚本练习\"></a>简单的Shell脚本练习</h2><p>1.变量内容由用户决定</p>\n<p><strong>利用read输入变量内容，利用$ 变量声明来读取文件</strong><br><img data-src=\"https://www.hualigs.cn/image/60d572a80a0c4.jpg\"></p>\n<p>2.利用date建立文件</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d572cd3e777.jpg\"></p>\n<p>3.数值运算的方法(+-*/%)</p>\n<p>** 使用方式：var = $((运算内容)) **</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d572e38cf6b.jpg\"></p>\n<h2 id=\"善用判断条件\"><a href=\"#善用判断条件\" class=\"headerlink\" title=\"善用判断条件\"></a>善用判断条件</h2><p><strong>可通过&amp;&amp;及||来确定前一个命令是否成功执行；也可通过test命令来检测；或者利用ls来执行，然后以$？判断执行结果</strong></p>\n<h3 id=\"使用test命令的测试功能\"><a href=\"#使用test命令的测试功能\" class=\"headerlink\" title=\"使用test命令的测试功能\"></a>使用test命令的测试功能</h3><p><strong>text并不会显示任何消息</strong></p>\n<ul>\n<li>#text -e /dmtsai  &amp;&amp;  echo “exist”  ||  echo “no exist”</li>\n</ul>\n<p><strong>测试/dmtsai目录是否存在</strong></p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d5731534cab.jpg\"><br><img data-src=\"https://www.hualigs.cn/image/60d5731b1623c.jpg\"><br><img data-src=\"https://www.hualigs.cn/image/60d573248961d.jpg\"><br><img data-src=\"https://www.hualigs.cn/image/60d573684bdd6.jpg\"></p>\n<h3 id=\"使用判断符号【】\"><a href=\"#使用判断符号【】\" class=\"headerlink\" title=\"使用判断符号【】\"></a>使用判断符号【】</h3><p><img data-src=\"https://www.hualigs.cn/image/60d573c69d296.jpg\"></p>\n<p>注意事项：</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d574365580f.jpg\"></p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d57431d508a.jpg\"></p>\n<h3 id=\"Shell脚本的默认变量（-0、-1…）\"><a href=\"#Shell脚本的默认变量（-0、-1…）\" class=\"headerlink\" title=\"Shell脚本的默认变量（$0、$1…）\"></a>Shell脚本的默认变量（$0、$1…）</h3><p>变量对应关系</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d574365580f.jpg\"></p>\n<p><strong>执行的文件名为$0变量，第一个参数是$1,只要在脚本里好好使用$1，就可以很简单地立即执行某些命令。</strong></p>\n<p>例：要执行一个脚本，该脚本会自动列出自己的文件名，还有后面的前3个参数</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d574619fe1c.jpg\"></p>\n<h2 id=\"条件判断\"><a href=\"#条件判断\" class=\"headerlink\" title=\"条件判断\"></a>条件判断</h2><h3 id=\"使用if…then\"><a href=\"#使用if…then\" class=\"headerlink\" title=\"使用if…then\"></a>使用if…then</h3><p>1.条件判断</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d5773474ee7.jpg\"><br><img data-src=\"https://www.hualigs.cn/image/60d577464f0ef.jpg\"><br><img data-src=\"https://www.hualigs.cn/image/60d5775b29c45.jpg\"><br><img data-src=\"https://www.hualigs.cn/image/60d5775f9ef75.jpg\"><br><img data-src=\"https://www.hualigs.cn/image/60d5776f3f055.jpg\"></p>\n<p>2.netstat:查询当前主机是否有打开的网络服务端口</p>\n<p>netstat-tuln：来获取当前主机启动的服务</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d57856ce052.jpg\"></p>\n<p>测试端口：<br><img data-src=\"https://www.hualigs.cn/image/60d578861aeb8.jpg\"></p>\n<h3 id=\"使用case…esac\"><a href=\"#使用case…esac\" class=\"headerlink\" title=\"使用case…esac\"></a>使用case…esac</h3><p><img data-src=\"https://www.hualigs.cn/image/60d5802453039.jpg\"><br><img data-src=\"https://www.hualigs.cn/image/60d5801573aa3.jpg\"></p>\n<ul>\n<li><p>直接执行时：利用script.sh  variable 的方式来直接给$1变量赋以内容</p>\n</li>\n<li><p>交互式：通过read命令让用户输入变量的内容</p>\n</li>\n</ul>\n<p><img data-src=\"https://www.hualigs.cn/image/60d581c6e3d25.jpg\"></p>\n<h3 id=\"使用函数功能\"><a href=\"#使用函数功能\" class=\"headerlink\" title=\"使用函数功能\"></a>使用函数功能</h3><p><strong>函数：在shell脚本中类似于自定义的执行命令，可以简化很多程序代码</strong></p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d58204728ff.jpg\"></p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d582092d7ac.jpg\"></p>\n<h2 id=\"循环判断\"><a href=\"#循环判断\" class=\"headerlink\" title=\"循环判断\"></a>循环判断</h2><h3 id=\"while-do-done-、-until-do-done\"><a href=\"#while-do-done-、-until-do-done\" class=\"headerlink\" title=\"while  do  done 、 until  do  done\"></a>while  do  done 、 until  do  done</h3><p>1.while  do  done(当条件成立时，就进行循环，直到条件不成立才停止)</p>\n<p>2.until  do  done(当条件成立时，就终止循环，否则就继续执行循环的程序段)</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d582390a386.jpg\"></p>\n<p>例：</p>\n<p>1.</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d5824ed7243.jpg\"></p>\n<p>2.</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d58257de854.jpg\"></p>\n<p>3.</p>\n<p><img data-src=\"https://www.hualigs.cn/image/60d5827f2631a.jpg\"></p>\n<h3 id=\"for…do…done\"><a href=\"#for…do…done\" class=\"headerlink\" title=\"for…do…done\"></a>for…do…done</h3><p><strong>定义</strong><br><img data-src=\"https://www.hualigs.cn/image/60d58408d8add.jpg\"></p>\n<p>例：</p>\n<p>1.分别输出dog,cat,elephant<br><img data-src=\"https://www.hualigs.cn/image/60d5842748971.jpg\"></p>\n<p>2.<br><img data-src=\"https://www.hualigs.cn/image/60d584301a3fe.jpg\"></p>\n<h2 id=\"Shell脚本的追踪与调试\"><a href=\"#Shell脚本的追踪与调试\" class=\"headerlink\" title=\"Shell脚本的追踪与调试\"></a>Shell脚本的追踪与调试</h2><p><img data-src=\"https://www.hualigs.cn/image/60d58521b8414.jpg\"></p>\n",
            "tags": []
        },
        {
            "id": "https://theprofessor249.github.io/2021/06/24/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%20%20%20%20Linux%E6%96%87%E4%BB%B6%EF%BC%8C%E7%9B%AE%E5%BD%95%E4%B8%8E%E7%A3%81%E7%9B%98%E6%A0%BC%E5%BC%8F/",
            "url": "https://theprofessor249.github.io/2021/06/24/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%20%20%20%20Linux%E6%96%87%E4%BB%B6%EF%BC%8C%E7%9B%AE%E5%BD%95%E4%B8%8E%E7%A3%81%E7%9B%98%E6%A0%BC%E5%BC%8F/",
            "title": "第二部分    Linux文件，目录与磁盘格式",
            "date_published": "2021-06-24T06:19:15.897Z",
            "content_html": "<h1 id=\"Linux的文件属性与目录配置\"><a href=\"#Linux的文件属性与目录配置\" class=\"headerlink\" title=\"Linux的文件属性与目录配置\"></a>Linux的文件属性与目录配置</h1><h2 id=\"用户与用户组\"><a href=\"#用户与用户组\" class=\"headerlink\" title=\"用户与用户组\"></a>用户与用户组</h2><p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grk7lop27hj30jj0bpjsi.jpg\"></p>\n<p><strong>文件拥有者</strong>，<strong>用户组</strong>，<strong>其他人</strong></p>\n<blockquote>\n<p>任何一个文件都具有用户，用户组和其他人3个权限</p>\n</blockquote>\n<blockquote>\n<p>所有系统账号与一般身份用户，以及root的相关信息，都记录在 <strong>/etc/passwd</strong>文件内；密码记录在 <strong>/etc/shadow</strong>文件中；所有用户组名称都记录在 <strong>/etc/group</strong>内</p>\n</blockquote>\n<h2 id=\"Linux文件权限\"><a href=\"#Linux文件权限\" class=\"headerlink\" title=\"Linux文件权限\"></a>Linux文件权限</h2><p>ls   -al：查看文件所有属性<br><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grk7wloeymj30l004vmxw.jpg\"><br><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grk7wgv2xwj30il06rdgb.jpg\"><br><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grk7ygpa3jj30n30fpmzo.jpg\"></p>\n<h2 id=\"更改文件权限\"><a href=\"#更改文件权限\" class=\"headerlink\" title=\"更改文件权限\"></a>更改文件权限</h2><blockquote>\n<p>chgrp:改变文件所属用户组</p>\n</blockquote>\n<blockquote>\n<p>chown:改变文件拥有者</p>\n</blockquote>\n<blockquote>\n<p>chmod:改变文件的属性，SUID等特性</p>\n</blockquote>\n<blockquote>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grk89p1b1hj30m70ouq72.jpg\"></p>\n</blockquote>\n<h2 id=\"文件类型与扩展名\"><a href=\"#文件类型与扩展名\" class=\"headerlink\" title=\"文件类型与扩展名\"></a>文件类型与扩展名</h2><p><strong>文件类型</strong> </p>\n<blockquote>\n<p>普通文件：<strong>纯文本文件（ASCII）</strong>可以直接读取的数据；<strong>二进制文件（binary）</strong>:系统仅执行二进制文件；<strong>数据格式的文件：</strong>会读取某些特定格式的文件</p>\n</blockquote>\n<blockquote>\n<p>目录：第一个属性为【d】</p>\n</blockquote>\n<blockquote>\n<p>连接文件：第一个属性为【l】</p>\n</blockquote>\n<blockquote>\n<p>设备与设备文件： <strong>块设备文件：</strong> 就是存储数据以供系统访问的接口设备，简单而言就是硬盘； <strong>字符设备文件：</strong> 即串口端口的接口设备</p>\n</blockquote>\n<blockquote>\n<p>套接字：用在网络数据连接。启动一个程序来监听客户端的要求，客户端就可以通过套接字来进行数据通信。第一个属性为【s】，通常在/var/run目录中看到这种类型。</p>\n</blockquote>\n<blockquote>\n<p>管道：用于解决多个程序同时访问一个文件造成的错误。第一个属性为p</p>\n</blockquote>\n<p><strong>扩展名</strong> </p>\n<blockquote>\n<p>【*.sh】处理文件（scripts，脚本），处理文件使用shell写成</p>\n</blockquote>\n<blockquote>\n<p>[<em>.tar].[<em>tar.gz];[</em>.zip];[</em>.tgz]经过打包的压缩文件。压缩软件为gunzip，tar等，根据不同的压缩软件而取其相关的扩展名</p>\n</blockquote>\n<blockquote>\n<p>[<em>.html]; [</em>.php]网页相关文件，分别表示HTML语法与PHP语法的网页文件。html文件可使用网页浏览器直接打开，php的文件则可以通过客户端的浏览器来浏览服务器端，已得到运算后的网页结果。</p>\n</blockquote>\n<p><strong>文件名</strong></p>\n<blockquote>\n<p>通常用[ _ ]与数字和字母构成</p>\n</blockquote>\n<ul>\n<li>Linux目录配置</li>\n</ul>\n<p><strong>绝对路径：</strong> 由根目录（/）开始写起的文件名或目录名称；</p>\n<p><strong>相对路径：</strong> 只要开头不是（/）就属于相对路径</p>\n<p><strong>.  ：</strong> 表示当前目录，也可使用./来表示</p>\n<p><strong>.. :</strong> 表示上一层目录，也可使用../来表示</p>\n<p><strong>各层目录</strong><br><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grkzqsfvmej30kl0g33zf.jpg\"><br><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grl1m16v9fj31970lz76d.jpg\"><br><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grl1mbjwzej31180g6wfg.jpg\"><br><strong>各层目录存放的文件</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grl09yhdw2j30o30ev43c.jpg\"><br> <img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grl0a0nd0uj30n40l6jy9.jpg\"><br><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grl09zbar1j30n50c5n1e.jpg\"><br><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grl0a297cvj30nd0j0tfq.jpg\"><br><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grl09xbks7j30n80citd2.jpg\"></p>\n<p><strong>注意事项：</strong></p>\n<p>/etc/passwd 密码存放</p>\n<p>/etc/shadow 账号存放</p>\n<p>/etc/sysconfig/*  启动时用到的各项设置值</p>\n<p>/var/spool/mail   邮件暂存数据</p>\n<blockquote>\n<p>Windows与Linux安装在同一个硬盘的不同分区时，windows将不能使用Linux的硬盘数据，因为windows的核心不认识Linux的文件系统</p>\n</blockquote>\n<blockquote>\n<p>windows98默认的文件系统时FAT，windows2000有NTFS文件系统，Linux的正统文件系统则为ext2</p>\n</blockquote>\n<blockquote>\n<p>整个Linux系统都通过虚拟文件系统交换（Virtual Fliesystem Switch,VFS）的核心功能去读取文件系统。也就是说，整个Linux认识的文件系统其实都是VFS在管理，用户不需要知道分区的文件系统，VFS会主动帮我们做好读取操作。</p>\n</blockquote>\n<h1 id=\"Linux文件和目录管理\"><a href=\"#Linux文件和目录管理\" class=\"headerlink\" title=\"Linux文件和目录管理\"></a>Linux文件和目录管理</h1><h2 id=\"目录与路径-（cd-是Change-Directory）\"><a href=\"#目录与路径-（cd-是Change-Directory）\" class=\"headerlink\" title=\"目录与路径 ## （cd   是Change Directory）\"></a>目录与路径 ## （cd   是Change Directory）</h2><p>1.<br><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grl2shmmyjj30fb04374l.jpg\"><br><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grl2z4j252j30k7092q4w.jpg\"></p>\n<p>2.pwd（显示当前所在目录）Print Working Directory</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grl33zpfkaj30mo09atak.jpg\"></p>\n<p>3.mkdir(建立新目录)make directory<br><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grl37u9do5j30ly0bq0vo.jpg\"></p>\n<p>4.rmdir(删除空目录)<br><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grl3ccgptdj30mt09j0uh.jpg\"><br>rmdir仅能删除空的目录</p>\n<p>5.$PATH（执行文件路径的变量）</p>\n<blockquote>\n<p>在执行命令时，系统会按照PATH的设置，去每个PATH定义的路径下搜索执行文件，先搜索到的命令先执行<br><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grl3jy53f5j30n30230sw.jpg\"></p>\n</blockquote>\n<p>ls命令在/bin/ls中，/bin又在PATH的设置中。所以可以找到ls</p>\n<h2 id=\"管理文件与目录\"><a href=\"#管理文件与目录\" class=\"headerlink\" title=\"管理文件与目录\"></a>管理文件与目录</h2><p>1.ls（查看文件和目录）<br><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grl3pis09pj30mq0ern1m.jpg\"></p>\n<p>2.cp（复制文件或目录）copy</p>\n<p>-f： 强制</p>\n<p>-l： 建立硬链接</p>\n<p>-u： 比较文件的新旧</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grl3va99r8j30l60m545d.jpg\"><br><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grl3v7xfxrj30la0bbad4.jpg\"><br><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grl3x0f477j30nc0d20wc.jpg\"></p>\n<p>3.rm（删除文件或目录）remove<br><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grl44zc9mqj30me0hvjty.jpg\"></p>\n<p>4.mv（移动文件与目录，或重命名）move<br><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grl4a123hfj30m20ffgpg.jpg\"></p>\n<h2 id=\"查看文件内容\"><a href=\"#查看文件内容\" class=\"headerlink\" title=\"查看文件内容\"></a>查看文件内容</h2><p>1.cat（concatenate）</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grl4ff28itj30m40gq76z.jpg\"></p>\n<blockquote>\n<p>一般环境，显示出来的结果有【tab】与空格键，其实看不出来，所以使用cat   -A，一些特殊福豪就会显示出来</p>\n</blockquote>\n<p>2.tac(反向显示)</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grl8n45n32j30ne05kmy7.jpg\"></p>\n<p>3.nl（显示时添加行号）</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grl8p5ncsxj30lm0dcjty.jpg\"><br><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grl8p0t0ngj30lr0970u0.jpg\"></p>\n<p>4.more（一页一页翻动）</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grl8smuffwj30mf03faat.jpg\"></p>\n<p>5.less（一页一页翻动）</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grl8tql5e6j30ml05hab1.jpg\"></p>\n<p>6.head（取出前几行）</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grl8vdaie1j30ma05kjs2.jpg\"></p>\n<p>7.tail（取出后几行）</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grl8wajlwmj30mc059dgj.jpg\"></p>\n<p>8.od（非纯文本文件）</p>\n<blockquote>\n<p>由于执行文件通常是二进制文件，使用前面提到的命令来读取它的内容时，会产生乱码，我们可以利用od这个命令来读取。</p>\n</blockquote>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grl8xlub9bj30ly0amgo8.jpg\"></p>\n<p>9.touch（修改文件时间与创建新文件）</p>\n<blockquote>\n<p>modification time(mtime修改时间)：当该文件的内容数据更改时，就会更新这个时间。内容数据指的是文件的内容，而不是文件的属性。</p>\n</blockquote>\n<blockquote>\n<p>status time(ctime状态时间)：当该文件的状态改变时，就会更新这个时间。</p>\n</blockquote>\n<blockquote>\n<p>access time (atime访问时间)：当读取文件内容时，就会更新这个读取时间。</p>\n</blockquote>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grl98q83frj30m60m8grp.jpg\"></p>\n<h2 id=\"文件与目录的默认权限与隐藏权限\"><a href=\"#文件与目录的默认权限与隐藏权限\" class=\"headerlink\" title=\"文件与目录的默认权限与隐藏权限\"></a>文件与目录的默认权限与隐藏权限</h2><p>1.umask（文件默认权限）该默认值需要减掉的权限</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grl9kkb6emj30m9032mx6.jpg\"></p>\n<blockquote>\n<p>一般umask是用于减法，002相当于在原本权限的基础上去掉其他人权限的写</p>\n</blockquote>\n<blockquote>\n<p>r , w , x</p>\n</blockquote>\n<blockquote>\n<p>4 , 2 , 1</p>\n</blockquote>\n<p>2.chattr(设置文件隐藏属性)</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grl9tv2rnej30lz0eswj8.jpg\"></p>\n<blockquote>\n<p>这些属性是隐藏的，所以需要用lsattr才能看到</p>\n</blockquote>\n<blockquote>\n<p>最重要的是+i属性，因为它可以让一个文件无法被更改，对于需要很高系统安全性的用户来说，相当重要；如果是登入文件，就需要+a参数，使之可以增加但不能修改与删除原有的数据</p>\n</blockquote>\n<p>3.lsattr（显示文件的隐藏属性）</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grl9z851b3j30m205lwf4.jpg\"></p>\n<p>4.SUID/SGID/Sticky Bit(文件特殊权限)</p>\n<blockquote>\n<p>Set UID：当s权限在user的x时，也就是类似-r-s–x–x,称为Set UID，简称为SUID，这个UID表示User的ID，而User表示这个程序（/usr/bin/paddwd）的拥有者(root);SUID仅可用于二进制文件，因为SUID是程序在执行过程中拥有文件拥有者的权限，因此，它仅可用二进制文件，不能用在批处理文件（shell脚本）上，shell脚本知识调用很多二进制文件而已； SUID对目录是无效的。</p>\n</blockquote>\n<blockquote>\n<p>Set GID：<strong>文件：</strong>如果设置在二进制文件上，在执行该程序时，它的有效用户组将会变成该程序的用户组所有者；<strong>目录：</strong>如果设置到目录内，该目录的文件或目录的用户组都将会变成该程序的用户组所有者；</p>\n</blockquote>\n<blockquote>\n<p>Sticky Bit：只针对目录有效，对文件没有效果；将目录加上SBit的权限，则用户只能够<strong>针对自己建立的文件或目录</strong>进行删除/重命名/移动等操作，对其他人创建的不能操作。</p>\n</blockquote>\n<blockquote>\n<p>4 为SUID</p>\n</blockquote>\n<blockquote>\n<p>2 为SGID</p>\n</blockquote>\n<blockquote>\n<p>1 为Sticky Bit</p>\n</blockquote>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grlb0jy7zdj30m40cujsq.jpg\"></p>\n<p>5.file（文件类型）查询是属于ASCII，数据文件，二进制文件，是否使用到冬天函数库等信息</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grlb0jy7zdj30m40cujsq.jpg\"></p>\n<h2 id=\"搜索文件\"><a href=\"#搜索文件\" class=\"headerlink\" title=\"搜索文件\"></a>搜索文件</h2><p>1.which（寻找执行文件）</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grlbveq130j30m505n750.jpg\"></p>\n<p>2.whereis（寻找特定文件）</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grlbw3tur0j30m40am0ur.jpg\"></p>\n<p>3.locate（寻找文件的部分名称）</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grlbx1v0v5j30me04r3z5.jpg\"></p>\n<p>4.find（查找特定参数的文件）</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grlbziunxyj30lx0l3wlu.jpg\"><br><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grlc0nao8mj30ku02mgm2.jpg\"></p>\n<h1 id=\"Linux磁盘与文件系统管理\"><a href=\"#Linux磁盘与文件系统管理\" class=\"headerlink\" title=\"Linux磁盘与文件系统管理\"></a>Linux磁盘与文件系统管理</h1><h2 id=\"认识EXT2文件系统\"><a href=\"#认识EXT2文件系统\" class=\"headerlink\" title=\"认识EXT2文件系统\"></a>认识EXT2文件系统</h2><h3 id=\"硬盘物理组成\"><a href=\"#硬盘物理组成\" class=\"headerlink\" title=\"硬盘物理组成\"></a>硬盘物理组成</h3><p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grlcgzplecj309s07kdg5.jpg\"></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grlch4dvflj30m60d1wfv.jpg\"></p>\n<h3 id=\"分区\"><a href=\"#分区\" class=\"headerlink\" title=\"分区\"></a>分区</h3><blockquote>\n<p>为什么要分区，因为我们必须要告诉操作系统：这块硬盘可以访问的区域是由A柱面到B柱面，如此一来，操作系统才能够控制硬盘磁头去A~B范围内的柱面访问数据；<strong>分区的要点：就是记录每一个分区的起始与结束柱面</strong>;MBR就是在一块硬盘的第0轨上，这也是计算机启动之后要去使用硬盘时必须读取的第一个区域。这个区域内记录了硬盘里的所有分区信息，以及启动时可以写入引导程序的位置。当一个硬盘的MBR坏掉时，这个硬盘也算寿终正寝了。</p>\n</blockquote>\n<h3 id=\"文件系统\"><a href=\"#文件系统\" class=\"headerlink\" title=\"文件系统\"></a>文件系统</h3><blockquote>\n<p>硬盘的最小存储单位是扇区，而数据所存储的最小单位并不是扇区，因为用扇区来存储效率低，为了提高效率，引入逻辑块，逻辑块是在分区进行文件系统的格式化时所指定的最小存储单位（以扇区大小为基础），块的大小为扇区的2^n倍数，磁头一次可以读取一块</p>\n</blockquote>\n<blockquote>\n<p>块单位的规划并不是越大越好，因为一个块最多仅能容纳一个文件</p>\n</blockquote>\n<blockquote>\n<p>要考虑以下问题：文件读取的效率；文件大小可能造成硬盘空间的浪费。</p>\n</blockquote>\n<blockquote>\n<p>每个文件系统开始位置的那个快就称为超级块，超级块的作用是存储文件系统的大小，空的和填满的块，以及他们各自的总数和其他诸如此类的信息。</p>\n</blockquote>\n<h3 id=\"EXT2文件系统（inode）\"><a href=\"#EXT2文件系统（inode）\" class=\"headerlink\" title=\"EXT2文件系统（inode）\"></a>EXT2文件系统（inode）</h3><blockquote>\n<p>在标准的ext2文件系统中，将每个文件的内容分为两个部分来存储，一个是文件的属性，另一个则是文件的内容。</p>\n</blockquote>\n<p>以下是inode的内容<br><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grldqc91inj30mj05lt9y.jpg\"></p>\n<p><strong>目录</strong></p>\n<p>在Linux的ext2文件系统建立一个目录时，ext2会给该目录分配一个inode与至少一个块。inode记录该目录的相关属性，并指向分配到的那个块；块记录在这个目录下的相关文件的关联性。</p>\n<p><strong>文件</strong></p>\n<p>在Linux下的ext2建立普通文件时，ext2会给该文件分配至少一个inode与相对于该文件大小的块数量</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grldvanxcgj30m0074q3k.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grldvd2h68j30np0gigqx.jpg\"></p>\n<p><strong>ext2的相关信息</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grldxk10buj30mk05fmzc.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grldxnugdyj30mc0cr440.jpg\"></p>\n<h3 id=\"EXT2-EXT3文件的访问与日志文件系统的功能\"><a href=\"#EXT2-EXT3文件的访问与日志文件系统的功能\" class=\"headerlink\" title=\"EXT2/EXT3文件的访问与日志文件系统的功能\"></a>EXT2/EXT3文件的访问与日志文件系统的功能</h3><p>当建立ext2的文件系统时，有以下几个部分</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grle2fue9tj30mo08jjtv.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grle2qk6ovj30mj0hhabj.jpg\"></p>\n<p><strong>可以使用dumpe2fs命令来读取某个ext2/ext3的文件系统内的这些信息</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grle7a2refj30ni04x765.jpg\"></p>\n<p><strong>数据的不一致状态</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grle8akkjdj30nk06s0w8.jpg\"></p>\n<h3 id=\"Linux文件系统的运行\"><a href=\"#Linux文件系统的运行\" class=\"headerlink\" title=\"Linux文件系统的运行\"></a>Linux文件系统的运行</h3><p><strong>整个ext2/ext3的数据访问是通过日志与元数据以及数据存放区记录，当系统在运行的时候，系统读取某个文件，则这个文件会加载到内存中，所以该磁盘就会放在主存储器的缓冲区中。若这些块的数据被改变时，刚开始只有主存储器中的块数据会被改变，而且在缓冲区中的快数据会被标记为脏dirty，这个时候，磁盘实体块尚未被修正，所以脏块的数据必须回写到磁盘中，以维持磁盘实体块上的数据与主存储中的块数据的一致性。</strong></p>\n<h3 id=\"载入点\"><a href=\"#载入点\" class=\"headerlink\" title=\"载入点\"></a>载入点</h3><p><strong>要能够使用Linux，必须要载入Linux系统。目录可以记录文件名与inode的相关信息。目录与文件系统产生对应的入口点，我们称之为点目录为载入点；将硬盘划分为几个分区，并将/与/home设置为两个分区的载入点</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grxyr7xqhtj30i301waa7.jpg\"></p>\n<p><strong>载入点一定时目录而不是文件，载入点就是进入该文件系统的入口</strong></p>\n<h3 id=\"Linux支持的其他文件系统\"><a href=\"#Linux支持的其他文件系统\" class=\"headerlink\" title=\"Linux支持的其他文件系统\"></a>Linux支持的其他文件系统</h3><p>常见的支持文件系统有：</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grxyrz2ffgj30ia0akwfu.jpg\"></p>\n<p><strong>假设/使用的是/dev/hdal,用ext3，而/home使用/dev/hda2,用reiserfs,那么采用/home/dmtsai/.bashrc时，linux核心的VFS管理所有的文件系统，不需要自行设置读取文件系统的定义</strong></p>\n<h2 id=\"文件系统的简单操作\"><a href=\"#文件系统的简单操作\" class=\"headerlink\" title=\"文件系统的简单操作\"></a>文件系统的简单操作</h2><h3 id=\"磁盘与目录的容量\"><a href=\"#磁盘与目录的容量\" class=\"headerlink\" title=\"磁盘与目录的容量\"></a>磁盘与目录的容量</h3><p>1.df-查看所有的文件系统的容量</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grxyszaybpj30j20gdte8.jpg\"><br><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grxyz88sm8j30i70diwhv.jpg\"></p>\n<p>2.du-列出所有文件与目录容量</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grxyzj7nraj30im0ly42l.jpg\"></p>\n<h3 id=\"连接文件：In\"><a href=\"#连接文件：In\" class=\"headerlink\" title=\"连接文件：In\"></a>连接文件：In</h3><p><strong>连接文件有点类似Windows的快捷方式，也就是很多的链接文件其实都指向同个源文件；连接文件还分成硬连接与符号连接两种</strong></p>\n<p>1.硬连接或实际连接</p>\n<p>文件的读取方式：</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grxyzs8do6j30jc02u0tj.jpg\"></p>\n<p><strong>/root/crontab为一个硬连接的文件，它连接到/etc/crontab文件，其实/root/crontab与/etc/crontab是同一个文件，只是两个目录（/etc与/root）记录了crontab文件的关联数据。也就是说，由/etc所记录的关联数据可知，crontab的inode放在A处，而/root目录下的关联数据，crontab同样也指到A处的inode，所以crontab文件的inode与块都没有改变，只是有两个目录记录了关联数据。</strong></p>\n<p><strong>最大的好处就是安全。就是不管删除了那个文件，其实仅删除目录下面的文件关联数据，并没有更改原文件的inode与块数据。不论由哪个目录连接到正确的crontab的inode与块，都可以正确无误地进行数据的修改。</strong></p>\n<p><strong>硬链接设置连接文件时，磁盘空间与inode的数目都不会改变。由上面的说明可以知道，硬链接只是在某个目录下的块写入一个关联数据，所以并不会用掉inode与磁盘空间。</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grxz02eff2j30ij01zjrk.jpg\"></p>\n<p>2.符号连接（即快捷方式）</p>\n<p><strong>符号连接就是建立在一个独立的文件，这个文件会让数据的读取指向它连接的文件内容，由于只是利用文件来作为指向的动作，所以，当源文件被删除之后，符号连接的文件不能打开，会显示无法打开某文件。符号连接与windows的快捷方式可以划上等号。</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grxz0h0sxoj30hx0l80yo.jpg\"><br><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grxz0ooxhjj30i504aq3j.jpg\"></p>\n<p><strong>使用In如果不加任何参数，就是硬链接；如果In使用-s参数，所创建的就类似Windows的快捷方式，当修改linux下的连接文件时，更改的其实是原始文件，所以不论原始文件连接到哪里，只要修改了连接文件，原始文件就跟着变</strong></p>\n<p>3.目录的连接数量</p>\n<p><strong>当建立新目录时，新目录的连接数为2，而上层目录的连接数则会增加1</strong></p>\n<h2 id=\"磁盘的分区、格式化、检验与载入\"><a href=\"#磁盘的分区、格式化、检验与载入\" class=\"headerlink\" title=\"磁盘的分区、格式化、检验与载入\"></a>磁盘的分区、格式化、检验与载入</h2><p>新增硬盘步骤：</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grxzttfj1yj30jc02u0tj.jpg\"></p>\n<h3 id=\"分区-fdisk\"><a href=\"#分区-fdisk\" class=\"headerlink\" title=\"分区:fdisk\"></a>分区:fdisk</h3><p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grxzwaynmbj30j00l379g.jpg\"><br><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grxzx5bzilj30ig07ndhm.jpg\"><br><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grxzxemuaqj30jd0hfdjq.jpg\"></p>\n<p>1.删除分区</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grxzy33nmfj30ln0jygoo.jpg\"><br><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grxzym42aij30jy069myd.jpg\"></p>\n<p>2.新增分区</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grxzyx1socj30kt0ban0m.jpg\"><br><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grxzz6zkvcj30k40li78u.jpg\"><br><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grxzzdkd0nj30jn08iabb.jpg\"><br><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grxzzj8pz0j30jy08gjsu.jpg\"></p>\n<p>3.操作环境的说明</p>\n<p><strong>以root身份进行硬盘分区时，在单用户维护模式下比较安全。在进行fdisk的时候1，如果该硬盘的某个分区还在使用，那么很有可能系统核心会无法重新加载硬盘的分区表，解决方法就是卸载使用中的分区，然后再重新进入fdisk，重新写入分区表，这样就可以成功</strong></p>\n<p>4.注意事项</p>\n<p><strong>虽然一个硬盘最大的逻辑分区可以到63号（总数，包含1-4的主分区），但并非所有的Linux版本都会将所有的逻辑分区对应的磁盘号都写入系统中</strong></p>\n<h3 id=\"磁盘格式化-mke2fs\"><a href=\"#磁盘格式化-mke2fs\" class=\"headerlink\" title=\"磁盘格式化  mke2fs\"></a>磁盘格式化  mke2fs</h3><p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gry11cyl3pj30k00avgo0.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gry11quz22j30js02074m.jpg\"></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gry11wvr7cj30kx09y77n.jpg\"></p>\n<h3 id=\"磁盘检验：fsck、badblocks\"><a href=\"#磁盘检验：fsck、badblocks\" class=\"headerlink\" title=\"磁盘检验：fsck、badblocks\"></a>磁盘检验：fsck、badblocks</h3><p>1.fsck-用来检查与修正硬盘错误的命令，通常只有身为root且系统有问题的时候才用这个命令，否则在正常状态下使用此命令，可能会损坏文件</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gry124njv3j30je0b041p.jpg\"></p>\n<p>2.badblocks-用来检查硬盘或软盘是否有坏轨的命令</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gry129ykfzj30jh05jab0.jpg\"></p>\n<p>3.sync-可以直接将系统暂存在内存中的数据写入磁盘中</p>\n<h3 id=\"磁盘载入与卸载\"><a href=\"#磁盘载入与卸载\" class=\"headerlink\" title=\"磁盘载入与卸载\"></a>磁盘载入与卸载</h3><p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gry12jkffmj30jk0ihgre.jpg\"></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gry12rft6sj30jp0k00x9.jpg\"></p>\n<p><strong>默认情况下，mount命令只有root才能执行；如果想将整个系统中记录的文件系统与载入点对应的数据全部都载入，那么执行 mount   -a ；由于Linux系统中，各一个路径都有可能是一个独立的分区系统，所以需要将每个分区系统都挂上各自的载入点；由于各个分区的文件系统可能并不相同，所以必须要先了解该区的文件系统，这样才可以载入</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gry13677pwj30kq0fl40m.jpg\"></p>\n<h3 id=\"修改磁盘参数\"><a href=\"#修改磁盘参数\" class=\"headerlink\" title=\"修改磁盘参数\"></a>修改磁盘参数</h3><p><strong>修改磁盘的卷标、日志参数、或者是其他硬盘运行时的相关参数（如DMA启动与否）</strong></p>\n<p>1.mknod</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gry13twn6lj30l50fhad0.jpg\"></p>\n<p>2.e2label-主要功能是用来修改磁盘的表头数据，也就是卷标</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gry144rti3j30ks03ltae.jpg\"></p>\n<p><strong>在载入磁盘的时候，除了使用磁盘号之外，也可以直接使用磁盘卷标作为载入的磁盘载入点</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gry144rti3j30ks03ltae.jpg\"></p>\n<p>3.tune2fs</p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gry14h9xjkj30jn043t9h.jpg\"></p>\n<p>4.hdparm-主要用于启动DMA模式，并测试硬盘的访问性能</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gry14qs6xqj30jw08341f.jpg\"><br><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gry15a9jvgj30js0ljgrp.jpg\"><br><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gry15a9jvgj30js0ljgrp.jpg\"></p>\n<p><strong>命令只有root才能执行。需要特别注意，-X参数是很危险的参数设置，除非您非常了解硬盘结构，否则不要自行设置</strong></p>\n<h2 id=\"设置启动载入\"><a href=\"#设置启动载入\" class=\"headerlink\" title=\"设置启动载入\"></a>设置启动载入</h2><h3 id=\"载入磁盘、中文编码和U盘\"><a href=\"#载入磁盘、中文编码和U盘\" class=\"headerlink\" title=\"载入磁盘、中文编码和U盘\"></a>载入磁盘、中文编码和U盘</h3><p><strong>linux或UNIX系统之下，是以目录来表示，也就是一个目录可能就是一个分区；例如通常Linux默认的软盘载入点在/mnt/floppy,如果需要软盘的数据时，就将/dev/fd0设备（这是访问设备的一个设备文件类型）挂上/mnt/floppy即可，就可以读取软盘的数据</strong></p>\n<p>1.载入软盘（格式为ext2）</p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gry302r1zoj30k702c74i.jpg\"></p>\n<p><strong>即使是windows格式的文件，在linux下仍然是可读取。要注意，使用完软盘，一定要将/media/floppy卸载之后才可以取出软盘，否则系统会一直告诉您发生错误；当卸载/media/floppy的时候，一定不能在该目录中，否则会发生错误信息；如果加载的格式不符合，系统也不会将该软盘挂载</strong></p>\n<p>2.载入windows磁盘</p>\n<p><strong>假设windows的VFAT文件系统是在/dev/hda1下，如果想将该分区载入到/mnt/win98，该如何做？</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gry30fzp72j30j5026aaa.jpg\"></p>\n<p>3.载入U盘</p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gry30lvkyfj30ja01v749.jpg\"></p>\n<h3 id=\"启动载入-etc-fstab和-etc-mtab\"><a href=\"#启动载入-etc-fstab和-etc-mtab\" class=\"headerlink\" title=\"启动载入/etc/fstab和/etc/mtab\"></a>启动载入/etc/fstab和/etc/mtab</h3><p><strong>载入的限制：</strong></p>\n<p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gry30lvkyfj30ja01v749.jpg\"></p>\n<p><strong>/etc/fstab就是使用mount将设备载入到系统的某个载入点所需执行的命令内容，将这些内容都写到/etc/fstab里，让系统一启动就主动载入。当mount发出命令时，需要的参数有设备号、载入点、文件系统类别、参数等，/etc/fstab加入了两项额外的功能，分别是是否执行备份命令dump，以及是否启动使用fsck扫描磁盘</strong></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gry315v05ej30ik05z0tu.jpg\"></p>\n<p>1.磁盘设备号或该设备的卷标</p>\n<p>2.载入点</p>\n<ul>\n<li>载入点就是目录</li>\n</ul>\n<p>3.分区的文件系统</p>\n<ul>\n<li>Linux在传统上使用的是ext2/ext3等文件系统</li>\n</ul>\n<p>4.文件系统参数</p>\n<ul>\n<li>每个文件系统还可以加入很多参数</li>\n</ul>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gry31fpsuuj30k40d6td5.jpg\"></p>\n<p>5.dump备份命令</p>\n<ul>\n<li>可以使用dump命令来进行系统备份。dump命令则会针对/etc/fstab的设置值，去选择是否要将该分区进行备份。0表示不要做dump备份，1表示要进行dump备份，2表示要做dump备份</li>\n</ul>\n<p>6.是否以fsck检验分区</p>\n<p><strong>启动过程中，系统默认以fsck检验分区内的文件系统是否完整</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gry31nue8qj30kd058myy.jpg\"></p>\n<h2 id=\"建立虚拟内存\"><a href=\"#建立虚拟内存\" class=\"headerlink\" title=\"建立虚拟内存\"></a>建立虚拟内存</h2><p><strong>在Linux中，如果需要使用大量的虚拟内存，但是swap分区不够大，可以采用下列方法来实现：</strong></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gry31tlwkqj30is010747.jpg\"></p>\n<h3 id=\"建立虚拟内存设备\"><a href=\"#建立虚拟内存设备\" class=\"headerlink\" title=\"建立虚拟内存设备\"></a>建立虚拟内存设备</h3><p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gry31ym9fuj30kx04zjt5.jpg\"></p>\n<h3 id=\"建立虚拟内存文件\"><a href=\"#建立虚拟内存文件\" class=\"headerlink\" title=\"建立虚拟内存文件\"></a>建立虚拟内存文件</h3><p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gry329cwqjj30l70kxteo.jpg\"></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8gry32f20fvj30jf05hq3h.jpg\"></p>\n<h1 id=\"文件的压缩与打包\"><a href=\"#文件的压缩与打包\" class=\"headerlink\" title=\"文件的压缩与打包\"></a>文件的压缩与打包</h1><h2 id=\"压缩文件的用途与技术\"><a href=\"#压缩文件的用途与技术\" class=\"headerlink\" title=\"压缩文件的用途与技术\"></a>压缩文件的用途与技术</h2><p><strong>比较大型的文件通过文件压缩之后，可以降低磁盘使用量，减少文件大小；有的压缩程序还可以进行容量限制，使一个大型文件可以分割成为数个小文件</strong></p>\n<h2 id=\"Linux系统常见的压缩命令\"><a href=\"#Linux系统常见的压缩命令\" class=\"headerlink\" title=\"Linux系统常见的压缩命令\"></a>Linux系统常见的压缩命令</h2><p><strong>常见压缩扩展名</strong></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs84u9qkv1j30ka036aao.jpg\"></p>\n<h3 id=\"compress（-Z）\"><a href=\"#compress（-Z）\" class=\"headerlink\" title=\"compress（*.Z）\"></a>compress（*.Z）</h3><p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs84umdktoj30jt0j977k.jpg\"></p>\n<p>*<em>compress程序压缩是最简单的压缩命令，使用的时候需要特别留意，通过compress压缩之后，如果没有使用其他参数，那么源文件就会被后来的</em>.Z所取代**</p>\n<h3 id=\"gzip、zcat-gz\"><a href=\"#gzip、zcat-gz\" class=\"headerlink\" title=\"gzip、zcat (*.gz)###\"></a>gzip、zcat (*.gz)###</h3><p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8gs84v08rm1j30k40d10vi.jpg\"></p>\n<p><strong>gzip是用来压缩与解压缩扩展名为*.gz的命令，在看到*.gz的文件时，它是通过gzip程序压缩的。</strong></p>\n<p><strong>zcat则是用来读取压缩文件数据内容的命令，zcat命令可以同时读取compress与gzip的压缩文件</strong></p>\n<h3 id=\"bzip2、bzcat-bz2\"><a href=\"#bzip2、bzcat-bz2\" class=\"headerlink\" title=\"bzip2、bzcat(*.bz2)\"></a>bzip2、bzcat(*.bz2)</h3><p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8gs84vmp8xfj30kf0bymzj.jpg\"></p>\n<h3 id=\"tar（-tar）\"><a href=\"#tar（-tar）\" class=\"headerlink\" title=\"tar（*.tar）\"></a>tar（*.tar）</h3><p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs84vn8kiij30jx0bvgp2.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8gs84w7l925j30kr0jeq8k.jpg\"></p>\n<p><strong>tar可以将整个目录或者是指定的文件都整合成一个文件</strong></p>\n<ul>\n<li>仅打包，不压缩</li>\n</ul>\n<p>tar  -cvf   /tmp/etc.tar    /atc</p>\n<ul>\n<li>打包后压缩</li>\n</ul>\n<p><strong>tar  -xcvf  /tmp/etc.tar.gz   /etc</strong></p>\n<ul>\n<li>打包后，以bzip2压缩</li>\n</ul>\n<p>tar  -jcvf   /tmp/etc.tar.bz2   /etc</p>\n<ul>\n<li>查看压缩文件</li>\n</ul>\n<p>tar  -xtvf   /tmp/etc.tar.gz</p>\n<ul>\n<li>文件解压</li>\n</ul>\n<p><strong>tar -zxvf   /tmp/etc.tar.gz</strong></p>\n<ul>\n<li>在别的目录下解压压缩文件中的部分文件夹</li>\n</ul>\n<p>tar -zxvf  /tmp/etc.tar.gz   etc/passwd</p>\n<ul>\n<li>备份所有文件，并且保存其权限</li>\n</ul>\n<p>tar  -zxvpf   /tmp/etc.tar.gz   /etc</p>\n",
            "tags": []
        },
        {
            "id": "https://theprofessor249.github.io/2021/06/24/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%20%20%20%20%20%E8%AE%A4%E8%AF%86Linux%E5%8F%8ALinux%E4%B8%BB%E6%9C%BA%E8%A7%84%E5%88%92%E4%B8%8E%E5%AE%89%E8%A3%85/",
            "url": "https://theprofessor249.github.io/2021/06/24/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%20%20%20%20%20%E8%AE%A4%E8%AF%86Linux%E5%8F%8ALinux%E4%B8%BB%E6%9C%BA%E8%A7%84%E5%88%92%E4%B8%8E%E5%AE%89%E8%A3%85/",
            "title": "第一部分     认识Linux及Linux主机规划与安装",
            "date_published": "2021-06-24T06:19:15.894Z",
            "content_html": "<h1 id=\"第一部分-认识Linux及Linux主机规划与安装\"><a href=\"#第一部分-认识Linux及Linux主机规划与安装\" class=\"headerlink\" title=\"第一部分     认识Linux及Linux主机规划与安装\"></a>第一部分     认识Linux及Linux主机规划与安装</h1><h2 id=\"什么是linux\"><a href=\"#什么是linux\" class=\"headerlink\" title=\"什么是linux\"></a>什么是linux</h2><h3 id=\"什么时Linux\"><a href=\"#什么时Linux\" class=\"headerlink\" title=\"什么时Linux\"></a>什么时Linux</h3><p>超级计算机：超级计算机是运行速度最快的计算机，主要用于需要有高速计算的项目中，如国防军事，气象预测，太空科技等</p>\n<p>大型机：大型机具有数个高速CPU，功能上虽不及超级计算机，但可用来处理大量数据与复杂的运算</p>\n<p>小型机:小型机具有大型机同时支持多用户的特性，通常用于科学研究，工程分析与工厂的流程管理</p>\n<p>微机：又称个人计算机，微机体积小，价格低，但功能完备</p>\n<h3 id=\"什么是操作系统\"><a href=\"#什么是操作系统\" class=\"headerlink\" title=\"什么是操作系统\"></a>什么是操作系统</h3><p>操作系统能正确地控制硬件工作，该系统就称为操作系统。操作系统可以管理整台计算机的硬件，可以控制CPU进行正确的计算，可以分辨硬盘里的数据并进行读取，它还必须能够识别所有的适配卡，这样才能正确地使用所有的硬件。<br>比肩完整的操作系统包含两个组件，一个是核心与其提供的接口工具，另一个是利用核心提供的接口工具所开发的软件。</p>\n<h3 id=\"什么是核心\"><a href=\"#什么是核心\" class=\"headerlink\" title=\"什么是核心\"></a>什么是核心</h3><p>核心就是Kernel，它是操作系统最底层的东西，每个操作系统都有自己的核心，由它来掌管整个硬件资源的工作状态。当有新的硬件加入到系统中时，若核心并没有支持它，这个新硬件就无法工作，因为控制它的核心并不认识它，</p>\n<p><strong>核心所要管理的事项：</strong></p>\n<p>系统调用接口：通过接口，程序开发人员可以轻松地与核心沟通，进一步利用硬件资源</p>\n<p>进程控制：在多任务环境中，一台计算机可能同时有很多地作业等待CPU运算处理，核心这时必须能够控制这些作业并有效地分配CPU地资源</p>\n<p>内存管理：控制整个系统地内存，如果内存不足，核心还能提供虚拟内存地功能</p>\n<p>文件系统管理：文件系统地管理，如果核心不能识别某个文件系统，那么将无法使用该文件格式地文件</p>\n<p>设备驱动程序：”可加载模块“功能可以将驱动程序编辑成模块，而不需要重新编译核心</p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grjui0sasej30iv0bcjst.jpg\"></p>\n<h3 id=\"下面为主要地Linux版本地发行者网址\"><a href=\"#下面为主要地Linux版本地发行者网址\" class=\"headerlink\" title=\"下面为主要地Linux版本地发行者网址\"></a>下面为主要地Linux版本地发行者网址</h3><p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grjv6ra23yj30nv0joadz.jpg\"></p>\n<h3 id=\"其他相关信息\"><a href=\"#其他相关信息\" class=\"headerlink\" title=\"其他相关信息\"></a>其他相关信息</h3><p><strong>各个版本也都要遵循LSB地规范，硬软件开发人员也会遵照LSB，                                  LSB：<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5saW51eGJhc2Uub3JnLw==\">http://www.linuxbase.org/</span></strong></p>\n<p>服务器：提供Internet一种以上网络服务地主机，自己架设一台邮件服务器也是小型地服务器</p>\n<p>工作站：仅提供给一组特定人员进行数值分析，科学研究。只要是没有对Internet提供网络服务地，那就是工作站，当然也包括所谓地终端</p>\n<p>终端：就是最终用户地那台计算机。例如笔者使用地机器连接上主机来工作，那么，这台计算机就可以称为终端</p>\n<h2 id=\"如何学习Linux\"><a href=\"#如何学习Linux\" class=\"headerlink\" title=\"如何学习Linux\"></a>如何学习Linux</h2><h3 id=\"Linux地应用\"><a href=\"#Linux地应用\" class=\"headerlink\" title=\"Linux地应用\"></a>Linux地应用</h3><p><strong>网络服务器</strong>：承袭了Unix地高稳定性，Linux地网络功能特别稳定与强大。作为网络服务器，例如WWW，邮件服务器，文件服务器，FTP服务器等</p>\n<p><strong>工作站计算机</strong>：工作站不提供Internet服务，工作站计算机与台式计算机不太一样，工作站通常面对比较重要地应用，如工程界流体力学地数值模式运算，娱乐界地特效处理，软件开发人员地工作平台。Linux有强大地运算能力，支持相当广泛地GCC编译软件，在工作站中，它也是相当不错地一个操作系统。</p>\n<p><strong>台式计算机</strong>：办公室使用地。工作包括如下几种：</p>\n<p>上网浏览</p>\n<p>文字处理</p>\n<p>网络接口地文字处理系统</p>\n<p>办公软件处理数据</p>\n<p>手法电子邮件</p>\n<p><strong>嵌入式系统：</strong> 小型电脑地开发。例如家电产品，PDA，手机，数字相机以及其他微型地计算机设备。这些计算机设备都是需要操作系统来控制，操作系统直接嵌入产品中。</p>\n<h3 id=\"基础学习\"><a href=\"#基础学习\" class=\"headerlink\" title=\"基础学习\"></a>基础学习</h3><p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grjw6g1zbvj30mo07n40k.jpg\"></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grjw9qu5v9j30o50g241v.jpg\"></p>\n<p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grjwbwqy4qj30m002sq3n.jpg\"></p>\n<p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grjwhzpumhj30op07zdhx.jpg\"></p>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grjwknr4avj30mk06k0uk.jpg\"></p>\n<h2 id=\"Linux主机地规划\"><a href=\"#Linux主机地规划\" class=\"headerlink\" title=\"Linux主机地规划\"></a>Linux主机地规划</h2><h3 id=\"认识主机硬件主件\"><a href=\"#认识主机硬件主件\" class=\"headerlink\" title=\"认识主机硬件主件\"></a>认识主机硬件主件</h3><p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grjwqsupd0j30o00nddj9.jpg\"></p>\n<h3 id=\"电脑槽口图\"><a href=\"#电脑槽口图\" class=\"headerlink\" title=\"电脑槽口图\"></a>电脑槽口图</h3><p><img data-src=\"https://tva4.sinaimg.cn/large/008jSNE7ly8grjwwx42mcj30dn0d70ts.jpg\"></p>\n<p><strong>1.中央处理器</strong></p>\n<p>（</p>\n<p><strong>双核心</strong>：是指在一个CPU里有两个运算单元，该双核心地CPU有两个可以运算地实体CPU</p>\n<p><strong>频率</strong>:就是单位时间地运算次数。频率越高，表示设备地运算次数越多，速度就会越快</p>\n<p>）</p>\n<blockquote>\n<p>CPU有倍频与外频之分，外频是指CPU与接口设备进行数据传输/运算地速度，倍频则是指CPU本身运算时地运算速度。两者相乘才是CPU地频率。与外频有关的是内存与主板芯片集。</p>\n</blockquote>\n<p>-CPU外频与倍频：：133（外频）*7（倍频）MHZ；</p>\n<p>-RAM频率：通常与CPU的外频相同，为133MHz；</p>\n<p>-PCI接口（包括网卡，声卡等的接口）133/4=33MHz；</p>\n<p>-AGP接口：133/2=66MHz（这是AGP正常的频率）</p>\n<blockquote>\n<p>外频是可以超频的。如果CPU外部频率是133.通过工具，就可以将133提升到比较高的频率，就叫超频。如果超频高出正常值很多，虽然设备的运行频率都会提升，但是也可能会造成系统不稳定，常常死机，或者造成某些组件的寿命减短。</p>\n</blockquote>\n<p><strong>2.内存</strong></p>\n<blockquote>\n<p>操作系统的核心，软硬件的驱动程序，所有要读取的文件，都需要先读入内存之后，才传输给CPU来运行；也会将常用的文件或程序等数据存储在内存中，而不直接删除，如此一来，下次访问这些数据时，不需要访问外部设备就能读取，提高了系统的运行速度；内存规格主要有两种：SDRAM与DDR。</p>\n</blockquote>\n<p><strong>3.显卡VGA卡</strong></p>\n<blockquote>\n<p>为了避免由于大量的3D画面造成CPU的负载过大，显卡开发商在显卡上安装了一个可以处理这些很耗CPU运算时间的硬件GPU，来处理画面数据；当前显卡有两种规格：一种是以传统的AGP接口来进行影像数据的传输，另一种则是以更快的PCI Express接口来传输数据；VGA卡上也有一个内存，该内存大小可以影响屏幕输出的分辨率与画面质量，它是直接嵌入在显卡上的。</p>\n</blockquote>\n<p><strong>4.硬盘与访问设备</strong></p>\n<blockquote>\n<p>主机需要加载数据，这些数据就存放在主机的硬盘上。我们可以通过便携式存储媒体，例如光盘，Zip磁盘，软盘等来传递数据。主流的硬盘访问接口应该是SATA与IDE；当选购硬盘是，除了注意硬盘的容量大小之外，还要知道硬盘的转速以及缓存的大小。我们要求是，转速至少为7200转，缓存最好选择8MB。</p>\n</blockquote>\n<p><strong>5.PCI适配卡</strong></p>\n<blockquote>\n</blockquote>\n<p>网卡，声卡，特数功能卡等，都是通过PCI插槽来安装的</p>\n<p>网卡：目前采用的是RJ-45的接口插孔，这种接口有点像电话线插孔，不过要稍微大一些。由于网络需求提高，最高网卡速度已达到吉比特（Gbit/s）。也可以选购10/100/1000Mbit/s的网卡。</p>\n<p>SCSI适配卡：可以用来连接SCSI接口的设备。由于SCSI接口的设备比较稳定，而且设备运行速度较快，耗费CPU资源较少。SCSI适配卡是大型服务器主机的硬盘传输接口，如果是个人计算机，采用IDE/SATA接口就够了，SCSI接口的硬盘很贵。</p>\n<p><strong>6.主板</strong></p>\n<p> <img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grk3ecgjwij30fn0argmc.jpg\"></p>\n<blockquote>\n<p>芯片集：就是负责与CPU，RAM，输出与输入设备通信；CPU的外频就是指芯片集与其他设备通信的速度；芯片集只能支持集中规格，无法支持所有的规格，所以在选购时，需要一起考虑。</p>\n</blockquote>\n<blockquote>\n<p>I/O地址与IRQ中断：既然主板是负责各个计算机系统组件之间的通信，有输入输出，又有不同的储存设备，所以利用I/O与IRQ，使得每台设备都有自己的地址，如若发生端口之间的冲突，可以手动设置各台设备的I/O,还可利用IRQ中断。</p>\n</blockquote>\n<blockquote>\n<p>BIOS：是Basic Input/Output System（基本输入/输出系统）的缩写，上面提到的I/O,IRQ等，都可以通过操作系统，亦可以通过主板提供的BIOS功能来设置。启动的时候，屏幕出现的版本信息就是BIOS的设置。可以在机器启动时按下DEL，来设置启动顺序，I/O以及IRQ。</p>\n</blockquote>\n<blockquote>\n<p>其他输出输入接口：<strong>PS2接口</strong>：键盘与鼠标的接口，插孔为圆形的；<strong>9针串行端口：</strong>以前用来连接鼠标的接口，常称为coml；<strong>25针并行端口：</strong>通常用来连接打印机，LPT1；<strong>声音输出，输入与麦克风：</strong>圆形插孔，主板上必须装有内置音效芯片，才会有这三个设备；<strong>USB：</strong>支持即插即用。</p>\n</blockquote>\n<blockquote>\n<p>电源：电源至少也要300W以上才能够主机使用，有些特殊的主机要求至少400-500W以上的电源。</p>\n</blockquote>\n<blockquote>\n<p>关于速度/稳定性的问题：<strong>系统超频；</strong> <strong>电源不稳定；</strong> <strong>内存负荷；</strong> <strong>系统过热；</strong></p>\n</blockquote>\n<h3 id=\"适合主机的硬件配置\"><a href=\"#适合主机的硬件配置\" class=\"headerlink\" title=\"适合主机的硬件配置\"></a>适合主机的硬件配置</h3><p><img data-src=\"https://tva3.sinaimg.cn/large/008jSNE7ly8grk4e7ljnsj30o60kntcc.jpg\"></p>\n<h3 id=\"Linux中的硬件设备号\"><a href=\"#Linux中的硬件设备号\" class=\"headerlink\" title=\"Linux中的硬件设备号\"></a>Linux中的硬件设备号</h3><p> <img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grk4dj6cdqj30o80k2766.jpg\"></p>\n<h3 id=\"选择适当的版本\"><a href=\"#选择适当的版本\" class=\"headerlink\" title=\"选择适当的版本\"></a>选择适当的版本</h3><p><img data-src=\"https://tva1.sinaimg.cn/large/008jSNE7ly8grk4hfc652j30nl0800vq.jpg\"></p>\n<h3 id=\"双系统安装步骤\"><a href=\"#双系统安装步骤\" class=\"headerlink\" title=\"双系统安装步骤\"></a>双系统安装步骤</h3><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI0NjI0NTM5L2FydGljbGUvZGV0YWlscy84MTc3NTYzNT9vcHNfcmVxdWVzdF9taXNjPSZhbXA7cmVxdWVzdF9pZD0mYW1wO2Jpel9pZD0xMDImYW1wO3V0bV90ZXJtPXVidW50dSVFNSU4RiU4QyVFNyVCMyVCQiVFNyVCQiU5RiVFNSVBRSU4OSVFOCVBMyU4NSZhbXA7dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3NlYXJjaF9yZXN1bHQubm9uZS10YXNrLWJsb2ctMn5hbGx+c29iYWlkdXdlYn5kZWZhdWx0LTEtLm5vbmVjYXNlJmFtcDtzcG09MTAxOC4yMjI2LjMwMDEuNDE4Nw==\">https://blog.csdn.net/qq_24624539/article/details/81775635?ops_request_misc=&amp;request_id=&amp;biz_id=102&amp;utm_term=ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-.nonecase&amp;spm=1018.2226.3001.4187</span></p>\n<h2 id=\"命令行模式\"><a href=\"#命令行模式\" class=\"headerlink\" title=\"命令行模式\"></a>命令行模式</h2><ul>\n<li>Ctrl Alt Backspace：<strong>重新启动</strong></li>\n<li>Ctrl Alt 【F1】<del>【F6】：**命令登入tty1</del>tty6终端**</li>\n<li>Ctrl Alt 【7】：<strong>图形界面桌面</strong></li>\n<li>startx:<strong>启动图形界面</strong></li>\n<li><strong>默认root的提示符为#；一般身份用户的提示符为$</strong></li>\n<li>exit:<strong>注销</strong></li>\n<li>date +%Y%m%d：<strong>显示日期</strong></li>\n<li>cal  month  year：<strong>列出月份的月历</strong></li>\n<li>bc:<strong>计算器</strong>（quit离开计算器）</li>\n<li>Tab：<strong>大小写切换键，且具有命令补全与文件补齐的功能</strong></li>\n<li>Ctrl  C：<strong>中止当前程序</strong></li>\n<li>Ctrl  d：<strong>文件结束或输入结束，可用来取代exit的输入</strong></li>\n<li>man  命令：<strong>命令使用指南</strong> </li>\n</ul>\n<blockquote>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grk6cv0b1kj30of0lamzm.jpg\"><br>man -f  命令：获取关于命令的信息</p>\n</blockquote>\n<blockquote>\n<p>man 数字  命令：获取man N page页中的文件数据</p>\n</blockquote>\n<blockquote>\n<p>man -k  命令：找到更多的帮助文件数据</p>\n</blockquote>\n<ul>\n<li><p>who：<strong>看谁在线</strong></p>\n</li>\n<li><p>netstat -a：<strong>查看网络的联机状态</strong></p>\n</li>\n<li><p>ps  -aux：<strong>查看后台执行的程序</strong></p>\n</li>\n<li><p>shutdown</p>\n<blockquote>\n<p><img data-src=\"https://tva2.sinaimg.cn/large/008jSNE7ly8grk6tpdxsyj30ni0hd426.jpg\"></p>\n</blockquote>\n</li>\n<li><p>sync：<strong>在内存中尚未更新的数据就会写入硬盘中</strong></p>\n</li>\n<li><p>reboot:<strong>重启</strong></p>\n</li>\n<li><p>halt,poweroff：<strong>关机</strong></p>\n</li>\n</ul>\n",
            "tags": []
        }
    ]
}