<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>培新 • Posts by &#34;笔记类&#34; category</title>
        <link>https://theprofessor249.github.io</link>
        <description></description>
        <language>zh-CN</language>
        <pubDate>Tue, 13 Jul 2021 14:15:12 +0800</pubDate>
        <lastBuildDate>Tue, 13 Jul 2021 14:15:12 +0800</lastBuildDate>
        <item>
            <guid isPermalink="true">https://theprofessor249.github.io/2021/07/13/%E7%AC%94%E8%AE%B0%E7%B1%BB/linux%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/</guid>
            <title>Linux 共享文件夹</title>
            <link>https://theprofessor249.github.io/2021/07/13/%E7%AC%94%E8%AE%B0%E7%B1%BB/linux%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E5%A4%B9/</link>
            <pubDate>Tue, 13 Jul 2021 14:15:12 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;Linux 共享文件夹&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.打开虚拟机，编辑虚拟机设置，选择选项中的共享文件夹；在右侧点击始终启用，选择好后点击添加按钮&lt;br&gt;，在弹口中，点击浏览，并在主机磁盘中建立一个文件夹，做为共享文件夹，选择启用该共享，点击完成。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gse60gkm6vj318g0p0k6f.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.进入ubuntu，安装VMwave  Tool&lt;br&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gse60nlk3ej30gr0b5td6.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.通过下列命令解压、执行，分别是下面的tar和sudo的两行&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;复制、压缩命令：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;tar -czvf dir.tar.gz dir/          将dir目录打包成dir.tar.gz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;tar -cjvf dir.tar.bz2 dir/         将dir目录打包成dir.tar.bz2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;tar -zxvf dir.tar.gz                解压缩dir.tar.gz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;tar -jxvf dir.tar.bz2               解压缩dir.tar.bz2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;注意“-”前面有空格&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;cp命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;语法： cp [选项] 源文件或目录 目标文件或目录&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;a 该选项通常在拷贝目录时使用。它保留链接、文件属性，并递归地拷贝目录，其作用等于dpR选项的组合。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;d 拷贝时保留链接。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;f 删除已经存在的目标文件而不提示。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;i 和f选项相反，在覆盖目标文件之前将给出提示要求用户确认。回答y时目标文件将被覆盖，是交互式拷贝。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;p 此时cp除复制源文件的内容外，还将把其修改时间和访问权限也复制到新文件中。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;r 若给出的源文件是一目录文件，此时cp将递归复制该目录下所有的子目录和文件。此时目标文件必须为一个目录名。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;l 不作拷贝，只是链接文件。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;例如：将/home/wally/test中 test.c 的文件复制到/local/arm 中，命令为：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;cd /wally/test&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;ls&lt;/p&gt;
&lt;p&gt;sudo cp -i test.c  /local/arm&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gse60qpm84j30gp0b4qaw.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.一路按Enter，最后得到&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gse60tkml1j30go0b5455.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;5.执行mount命令，之后mnt/hgfs里就可以看到前面设置的共享目录&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gse60whifpj30gq0b4qbl.jpg&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://theprofessor249.github.io/2021/07/13/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%BA%94%E9%83%A8%E5%88%86%20%20%20%20%20Linux%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%91%98/</guid>
            <title>第五部分   Linux系统管理员</title>
            <link>https://theprofessor249.github.io/2021/07/13/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%BA%94%E9%83%A8%E5%88%86%20%20%20%20%20Linux%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86%E5%91%98/</link>
            <pubDate>Tue, 13 Jul 2021 14:15:12 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;启动关机的流程与加载程序&#34;&gt;&lt;a href=&#34;#启动关机的流程与加载程序&#34; class=&#34;headerlink&#34; title=&#34;启动关机的流程与加载程序&#34;&gt;&lt;/a&gt;启动关机的流程与加载程序&lt;/h1&gt;&lt;h2 id=&#34;启动流程&#34;&gt;&lt;a href=&#34;#启动流程&#34; class=&#34;headerlink&#34; title=&#34;启动流程&#34;&gt;&lt;/a&gt;启动流程&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;启动过程需要加载核心，让核心来驱动整个硬件，启动过程如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/9c0d8c3d51f6a189978aade18172391c&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;引导加载程序与核心载入&#34;&gt;&lt;a href=&#34;#引导加载程序与核心载入&#34; class=&#34;headerlink&#34; title=&#34;引导加载程序与核心载入&#34;&gt;&lt;/a&gt;引导加载程序与核心载入&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;整个主机启动后，第一个读取的地方是BIOS，BIOS里记录了主机板的芯片集与相关的设置，如CPU与接口设备的通信频率、启动设备的搜索顺序、硬盘的大小与类型、系统时间、外部总线是否启动即插即用、各接口设备的I/O地址，以及与CPU通信的IRQ中断等信息；获取BIOS设置值后，系统会根据BIOS的数据，进行加电自检，然后初始化硬件检测，并设置PnP设备，确定可启动的设备后，开始读取启动设备的数据；启动流程读到硬盘的过程中，第一个要读取的就是该硬盘的主引导记录，系统可以由主要启动区安装的引导加载程序开始执行核心识别的工作。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;选择以grub程序启动，系统就会到该记录区去读取该操作系统的核心。良好的引导加载程序会具有如下两项功能：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;菜单功能&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指向功能&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;通过引导加载程序的管理而开始读取核心文件后，Linux就会将核心解压缩到主存储器中，并且利用核心的功能，开始测试与驱动各台外部设备，包括存储设备、CPU、网卡、声卡等。一般核心文件会放置/boot里，并且取名为/boot/vmlinux&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在加载核心的过程中，系统只会载入根目录，而且是以只读方式载入；有时为了某些功能可以用文件方式来读取；有时系统启动时，会建立虚拟盘，这就需要使用initrd以及linuxrc，利用引导加载程序的功能，可以在加载核心的时候，一起加载initrd的映像文件，系统会主动以initrd来建立虚拟盘，并且利用linuxrc程序来加载模块，linuxrc主要特点：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/8828554dba19d37c988b6450f5c03fc6&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;第一个程序init及设置文件-etc-inittab与runlevel&#34;&gt;&lt;a href=&#34;#第一个程序init及设置文件-etc-inittab与runlevel&#34; class=&#34;headerlink&#34; title=&#34;第一个程序init及设置文件/etc/inittab与runlevel&#34;&gt;&lt;/a&gt;第一个程序init及设置文件/etc/inittab与runlevel&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;第一个执行的程序就是/sbin/init，它除了利用设置文件/etc/inittab来获取运行等级之外，还会通过运行等级的设置值启动不同的服务项目&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/744e67e69b45925055d78718e451ceec&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;运算等级：就是通过设置运行等级，来规定系统用不同的服务来启动；根据有无网络与有无XWindow，分为6个运行等级&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/etc/inittab的信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/8052a22e1a3fb3b9b08e29b010f7166b&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/c23b8a52a02e2c2086412253591040d5&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;结论&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/1eb89494bb05f7e9346b87bc479265cf&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;init处理系统初始化流程（-etc-rc-d-rc-sysinit）&#34;&gt;&lt;a href=&#34;#init处理系统初始化流程（-etc-rc-d-rc-sysinit）&#34; class=&#34;headerlink&#34; title=&#34;init处理系统初始化流程（/etc/rc.d/rc.sysinit）&#34;&gt;&lt;/a&gt;init处理系统初始化流程（/etc/rc.d/rc.sysinit）&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;主要用于设置系统环境&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/rc.d/rc.sysinit的主要工作：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/05b15ca9f58e2ebaa1e9ef5eae47cc95&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/cd85aa507effc2879697835c97c3f96f&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;启动系统服务与相关启动设置文件&#34;&gt;&lt;a href=&#34;#启动系统服务与相关启动设置文件&#34; class=&#34;headerlink&#34; title=&#34;启动系统服务与相关启动设置文件&#34;&gt;&lt;/a&gt;启动系统服务与相关启动设置文件&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;加载核心让整个系统准备接受命令，然后再经过/etc/rc.d/rc.sysinit的系统模块与相关硬件信息的初始化。还需我们启动系统所需要的各项服务，主机才能提供相关的网络或主机功能。根据再/etc/inittab里提到的运行等级设置值，就可以决定启动的服务项目。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;各种不同的服务其实还是相互关联的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;S或K后面接的数字就是执行的顺序：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/be2d2d160b60a5e26239faeb0d3b9bf1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;用户自定义引导启动程序&#34;&gt;&lt;a href=&#34;#用户自定义引导启动程序&#34; class=&#34;headerlink&#34; title=&#34;用户自定义引导启动程序&#34;&gt;&lt;/a&gt;用户自定义引导启动程序&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;任何想要再启动时就执行的工作，直接写入/etc/rc.d/rc.local，那么该工作就会再启动的时候自动加载，而不等我们登录系统去启动；把自己制作的shell脚本的完整文件名写入/etc/rc.d/rc.local，启动时就睡执行我的shell脚本&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;根据-etc-inittab设置加载终端或X-Window界面&#34;&gt;&lt;a href=&#34;#根据-etc-inittab设置加载终端或X-Window界面&#34; class=&#34;headerlink&#34; title=&#34;根据/etc/inittab设置加载终端或X-Window界面&#34;&gt;&lt;/a&gt;根据/etc/inittab设置加载终端或X-Window界面&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在完成了系统所有服务的启动后，接下来Linux就会启动终端或X Window来等待用户登录，实际参考内容是/etc/inittab内的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/ecc28e9606cb4da74596689a9a09d84e&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;其他启动相关事项&#34;&gt;&lt;a href=&#34;#其他启动相关事项&#34; class=&#34;headerlink&#34; title=&#34;其他启动相关事项&#34;&gt;&lt;/a&gt;其他启动相关事项&lt;/h3&gt;&lt;p&gt;1.关于模块：/etc/modprobe.conf&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;对核心提供的默认模块进行一些参数的设计&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/23e745b012127a32e82304b17587fdef&#34;&gt;&lt;/p&gt;
&lt;p&gt;2./etc/sysconfig/*&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;整个启动过程中，读取的服务相关设置文件都记录在/etc/sysconfig目录下&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/9588b4872993b0925e3af95f85892981&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/18635106d182a9e035cceb85ced7e11b&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;变换运行等级&#34;&gt;&lt;a href=&#34;#变换运行等级&#34; class=&#34;headerlink&#34; title=&#34;变换运行等级&#34;&gt;&lt;/a&gt;变换运行等级&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;运行等级的不同仅是/etc/rc.d/rc[0-6].d里启动的服务不同而已；根据启动是否自动进入不同运行等级的设置：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/4e4c05bdf37c415695622638485f3d02&#34;&gt;&lt;/p&gt;
&lt;p&gt;如何将运行等级5切换至等级3&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当执行init3时，系统会：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/6be449d26e6b626f12c5d0acf5c31092&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;之后直接在bash中输入runlevel即可&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/cb849ae011ed659a42b646e0ecf96fe2&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;核心与核心模块&#34;&gt;&lt;a href=&#34;#核心与核心模块&#34; class=&#34;headerlink&#34; title=&#34;核心与核心模块&#34;&gt;&lt;/a&gt;核心与核心模块&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;在整个启动过程中，能否成功地驱动主机的硬件设备，是核心的工作，而核心一般都是压缩文件，因此在使用核心之前，就要将它解压缩后，才加载到主存储器中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;由于硬件的不断更新，当前核心都具有可读取模块化驱动程序的功能，可以将模块化想成是一个外挂程序，该外挂程序可能由硬件开发厂商提供&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/ec7aefe8722f26ac4bb593fb0169f078&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/671e9824296085539083ccd7a5be187c&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;核心模块与依赖性&#34;&gt;&lt;a href=&#34;#核心模块与依赖性&#34; class=&#34;headerlink&#34; title=&#34;核心模块与依赖性&#34;&gt;&lt;/a&gt;核心模块与依赖性&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;核心房子啊/lib/modules/‘uname -r’/kernel中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1&lt;strong&gt;Linux提供一些模块依赖性的解决方案，就是检查/lib/moduless/‘uname-r’/modules.dep文件，它记录了在核心支持的模块的各项依赖性&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用depmod命令建立该文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/2beb12b271b31268b8b07e0a56561d8f&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;核心模块的观察：lsmod、modinfo&#34;&gt;&lt;a href=&#34;#核心模块的观察：lsmod、modinfo&#34; class=&#34;headerlink&#34; title=&#34;核心模块的观察：lsmod、modinfo&#34;&gt;&lt;/a&gt;核心模块的观察：lsmod、modinfo&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;查看核心内的模块：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;即可查看核心模块，亦可检查模块文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/6c2cdfd5686441ae774f6081ed5f5fed&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;核心模块的加载与删除：insmod、modprobe、rmmod&#34;&gt;&lt;a href=&#34;#核心模块的加载与删除：insmod、modprobe、rmmod&#34; class=&#34;headerlink&#34; title=&#34;核心模块的加载与删除：insmod、modprobe、rmmod&#34;&gt;&lt;/a&gt;核心模块的加载与删除：insmod、modprobe、rmmod&lt;/h3&gt;&lt;p&gt;1.insmod&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;手动加载模块；insmod完全由用户自行加载一个完整文件名的模块，并不会主动地分析模块的依赖性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/efff98efab91bedbe73e9c57b730eb68&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.rmmod&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;删除模块&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/44de937618b8ed2d572db3228c59c159&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.modprobe&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;modprobe会主动搜索modules.dep的内容，先解决了模块的依赖性后，才决定需要加载的模块&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/75f83239722c9e4d77183173b36204d0&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;核心模块的额外参数设置：-etc-modprobe-conf&#34;&gt;&lt;a href=&#34;#核心模块的额外参数设置：-etc-modprobe-conf&#34; class=&#34;headerlink&#34; title=&#34;核心模块的额外参数设置：/etc/modprobe.conf&#34;&gt;&lt;/a&gt;核心模块的额外参数设置：/etc/modprobe.conf&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;若想修改某些模块的额外参数设置，就在这个文件内设置，对于I/O与IRQ的设置&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;引导加载程序：Grub&#34;&gt;&lt;a href=&#34;#引导加载程序：Grub&#34; class=&#34;headerlink&#34; title=&#34;引导加载程序：Grub&#34;&gt;&lt;/a&gt;引导加载程序：Grub&lt;/h2&gt;&lt;h3 id=&#34;引导加载程序的功能与意义&#34;&gt;&lt;a href=&#34;#引导加载程序的功能与意义&#34; class=&#34;headerlink&#34; title=&#34;引导加载程序的功能与意义&#34;&gt;&lt;/a&gt;引导加载程序的功能与意义&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在BIOS读完信息后，接下来到第一个启动设备的MBR去读取引导加载程序，这个引导加载程序可以具有菜单功能，而且还能辨识硬盘的文件系统，并且指向核心文件，以将它读入主存储器中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;MBR是整个硬盘的第一个扇区，整个大小不可能超过512KB，加载程序功能这么强，不仅仅占用少量的容量；是因为我们将引导加载程序分成两个阶段来执行：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/8712a299d6a236b8fefcec9f41d7c9e2&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;我们可以将引导加载程序安装在超级块&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;引导加载程序可以做到：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;引导加载程序可以直接指定并取用核心文件，加载到主存储器中&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;也可以将加载程序的控制权移交给下一个加载程序&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;引导加载程序除了可以直接指定核心文件来启动之外，也可以指定某个超级快中的引导加载程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linxu可以选择将引导加载程序安装在MBR或超级快中，但是，Windows系统则几乎默认强制会同时安装在MBR与超级块中，所以，我们说要安装多重操作系统时，最好先安装Windows再安装Linux，因为若先安装Linux，则后安装Windows时，会强制将MBR的引导加载程序覆盖掉，这样将无法以Windows的引导加载程序进入Linux&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;grub的设置文件-boot-grub-menu-lst与安装类型&#34;&gt;&lt;a href=&#34;#grub的设置文件-boot-grub-menu-lst与安装类型&#34; class=&#34;headerlink&#34; title=&#34;grub的设置文件/boot/grub/menu.lst与安装类型&#34;&gt;&lt;/a&gt;grub的设置文件/boot/grub/menu.lst与安装类型&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/9c8fa3b22f4981a4cc040783e0fd79dc&#34;&gt;&lt;/p&gt;
&lt;p&gt;1.与硬盘的关系&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;grub主程序是安装在MBR中，并且动态地搜索设置文件的信息，它必须认识硬盘&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/1208e0d1f42758d3f986494369e228f4&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/e8321b599b2b0ae080363cb189f861b4&#34;&gt;&lt;/p&gt;
&lt;p&gt;2./boot/grup/menu.lst设置文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;grub的设置文件内容/boot/grub/menu.lst&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/1f0e71d5810dd419e3b66d880ce6f438&#34;&gt;&lt;/p&gt;
&lt;p&gt;(1)直接指定核心启动&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;指定核心启动，就需要用到initrd的RAM  Disk设置文件（通常放在/boot下面）；以grub的硬盘识别方式，找出完整的kernel与initrd文件名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/ed6ee205b0765123b141eb7509ce5c27&#34;&gt;&lt;/p&gt;
&lt;p&gt;（2）利用链式加载程序（chain loader）的方式&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所谓链式加载程序，仅是将控制权交给下一个引导加载程序而已，所以grub并不需要认识与找出核心文件，它只是将boot的控制权交给下一个超级快或者是MBR内的引导加载程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/9241b8f5d29db4dfef02935611d48569&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;测试与安装grub&#34;&gt;&lt;a href=&#34;#测试与安装grub&#34; class=&#34;headerlink&#34; title=&#34;测试与安装grub&#34;&gt;&lt;/a&gt;测试与安装grub&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;必须使用grub-install将一些必要的文件复制到/boot/grub&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/d5e10dd26c2026ae78cf28307680a155&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/309d74ae44a1bceaca4bc57940d987c2&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;介绍几个有用的命令及安装步骤&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/2e681844b5db9d4edc9138013da01c05&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/fdc960dcffb0b6dfcd42e0bd4d6db478&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;启动前的额外功能修改&#34;&gt;&lt;a href=&#34;#启动前的额外功能修改&#34; class=&#34;headerlink&#34; title=&#34;启动前的额外功能修改&#34;&gt;&lt;/a&gt;启动前的额外功能修改&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;当Linux正在进行启动，我们按下任意键，就可以进行grub的在线编辑功能&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若按如下按键&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/b1fd375c629eb395de3ac4e040214cfc&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/28589a73b503411f8ae881f4f8606ad1&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;核心功能的vga设置&#34;&gt;&lt;a href=&#34;#核心功能的vga设置&#34; class=&#34;headerlink&#34; title=&#34;核心功能的vga设置&#34;&gt;&lt;/a&gt;核心功能的vga设置&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;vga：主要设置终端tty1-tty6的分辨率与颜色质量；   对应表如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/869b479671a2024112feb2a895714adc&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;引导加载程序：LILO&#34;&gt;&lt;a href=&#34;#引导加载程序：LILO&#34; class=&#34;headerlink&#34; title=&#34;引导加载程序：LILO&#34;&gt;&lt;/a&gt;引导加载程序：LILO&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;LILO是Linux最早的引导加载程序。主要使用/etc/lilo.conf设置文件，然后再以lilo主程序将该设置内容写入启动区中&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;LILO的设置文件-etc-lilo-conf&#34;&gt;&lt;a href=&#34;#LILO的设置文件-etc-lilo-conf&#34; class=&#34;headerlink&#34; title=&#34;LILO的设置文件/etc/lilo.conf&#34;&gt;&lt;/a&gt;LILO的设置文件/etc/lilo.conf&lt;/h3&gt;&lt;p&gt;设置文件/etc/lilo.conf同样分为两部分，分别是LILO整体环境设置部分，与每个启动项目核心文件名称规范部分&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/37cf9a1bc57352e5108596eb4b3a4a65&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/bed7372f7f21a8f8b2867d5b7e358f57&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;测试与安装LILO引导加载程序&#34;&gt;&lt;a href=&#34;#测试与安装LILO引导加载程序&#34; class=&#34;headerlink&#34; title=&#34;测试与安装LILO引导加载程序&#34;&gt;&lt;/a&gt;测试与安装LILO引导加载程序&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/130c874283068f74126564c8559d7ee8&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;lilo的安装&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/c6aad9967b68c53da98c537d5f40d8f8&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;解决启动过程的问题&#34;&gt;&lt;a href=&#34;#解决启动过程的问题&#34; class=&#34;headerlink&#34; title=&#34;解决启动过程的问题&#34;&gt;&lt;/a&gt;解决启动过程的问题&lt;/h2&gt;&lt;h3 id=&#34;忘记root密码的解决方案&#34;&gt;&lt;a href=&#34;#忘记root密码的解决方案&#34; class=&#34;headerlink&#34; title=&#34;忘记root密码的解决方案&#34;&gt;&lt;/a&gt;忘记root密码的解决方案&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;忘记root密码：只要能够进入并且载入（/），然后修改/etc/shadow内的root密码栏重新启动后，root就不需要密码即可登录。过程如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/08225195c011dac805ab3e63912e99e8&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;利用chroot切换到另一个硬盘&#34;&gt;&lt;a href=&#34;#利用chroot切换到另一个硬盘&#34; class=&#34;headerlink&#34; title=&#34;利用chroot切换到另一个硬盘&#34;&gt;&lt;/a&gt;利用chroot切换到另一个硬盘&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;chroot：可以暂时将根目录移到某个目录中，然后区处理某个问题，最后再离开该根目录而回到原来的系统中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;同样可以将Linux硬盘拔到另一台Linux主机上，然后用这个chroot来切换，以处理硬盘问题，做法如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/2dee28ac8f890d2f6d4a93748993afa1&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;源码与Tarball套件管理程序&#34;&gt;&lt;a href=&#34;#源码与Tarball套件管理程序&#34; class=&#34;headerlink&#34; title=&#34;源码与Tarball套件管理程序&#34;&gt;&lt;/a&gt;源码与Tarball套件管理程序&lt;/h1&gt;&lt;h2 id=&#34;简介&#34;&gt;&lt;a href=&#34;#简介&#34; class=&#34;headerlink&#34; title=&#34;简介&#34;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;如果想在Linux服务器上运行网页服务器，一定要安装网页服务器的套件；Linux上的套件几乎都是经过GPL的授权，所以每个套件均提供源码，可以自行修改该程序代码&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;什么是开放源码、编译器与可执行文件&#34;&gt;&lt;a href=&#34;#什么是开放源码、编译器与可执行文件&#34; class=&#34;headerlink&#34; title=&#34;什么是开放源码、编译器与可执行文件&#34;&gt;&lt;/a&gt;什么是开放源码、编译器与可执行文件&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/24a7f7578809c50bf625fdd6863dee64&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;什么是函数库&#34;&gt;&lt;a href=&#34;#什么是函数库&#34; class=&#34;headerlink&#34; title=&#34;什么是函数库&#34;&gt;&lt;/a&gt;什么是函数库&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;Linux系统通常已提供一个可以进行身份验证的模块，称为PAM，这个PAM提供的功能可以让很多程序在执行的时候，除了可以验证用户登录的信息外，还可以将身份确定的数据记录在登陆文件；函数库分为动态函数库与静态函数库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/0c8baf2319fab57e47537bd8d977a428&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linux的核心提供很多的核心相关函数库与外部参数，这些核心相关信息大多数放在/usr/include、/lib、/usr/lib中&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;什么是make与configure&#34;&gt;&lt;a href=&#34;#什么是make与configure&#34; class=&#34;headerlink&#34; title=&#34;什么是make与configure&#34;&gt;&lt;/a&gt;什么是make与configure&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;使用类似gcc的编译器进行编译的过程中，除了每个主程序与子程序需要写上编译过程的命令外，还需要写上最终的连接程序。当代码比较复杂时，可以使用make命令的相关功能来简化编译过程的命令&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;什么是Tarball的套件&#34;&gt;&lt;a href=&#34;#什么是Tarball的套件&#34; class=&#34;headerlink&#34; title=&#34;什么是Tarball的套件&#34;&gt;&lt;/a&gt;什么是Tarball的套件&lt;/h3&gt;&lt;p&gt;** 由于纯文本文件是很浪费硬盘空间的一种文件格式，如果想去下载一个核心文件，应该将这些源码通过文件的打包与压缩，将文件的数量与容量减小，而Tarball就是将套件的所有源码文件先以tar打包，然后再压缩，最常见的就是gzip来压缩。因为使用了tar与gzip的功能，tarball文件一般的扩展名就会写成*.tar.gz或简单写为*.tgz,Tarball套件解压缩后，里面的文件通常会有: **&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/5f6bf24ee2f22e7623e3f2039c1f58da&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装与升级套件&#34;&gt;&lt;a href=&#34;#安装与升级套件&#34; class=&#34;headerlink&#34; title=&#34;安装与升级套件&#34;&gt;&lt;/a&gt;安装与升级套件&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;为什么升级Tarball的套件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/631f861b701351e5d1b7499656257625&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tarball的基本安装流程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/484eff772d2793001edbf769862a0f86&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;一个简单的范例&#34;&gt;&lt;a href=&#34;#一个简单的范例&#34; class=&#34;headerlink&#34; title=&#34;一个简单的范例&#34;&gt;&lt;/a&gt;一个简单的范例&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;生成动态库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/5ad5d00416c34f36cac4e1855a17ec93&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;生成静态库&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/ce764c52fe9415effdce33f1588a0240&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;完整调试&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/d7036f36abb406f3389c6a3151ea4621&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;显示Hello-World&#34;&gt;&lt;a href=&#34;#显示Hello-World&#34; class=&#34;headerlink&#34; title=&#34;显示Hello  World&#34;&gt;&lt;/a&gt;显示Hello  World&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/cff71a3d8f955f431d57fe91565b66a6&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hello.c就是源码，gcc就是编译器，a.out就是编译成功的可执行二进制文件&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;编译子程序&#34;&gt;&lt;a href=&#34;#编译子程序&#34; class=&#34;headerlink&#34; title=&#34;编译子程序&#34;&gt;&lt;/a&gt;编译子程序&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/108ff62589cb16cc8022fcf26578f6c6&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/fa8559dc949fe8523c975193f12a0324&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/8a334354ab6aaf8bbb7ccc1bbbbbd64c&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;加入函数库&#34;&gt;&lt;a href=&#34;#加入函数库&#34; class=&#34;headerlink&#34; title=&#34;加入函数库&#34;&gt;&lt;/a&gt;加入函数库&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/a73137d77f326a2a2b1517a74069095c&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;直接编译，会显示错误消息，表示没有sin的相关定义参考值，这是因为再C语言里的sin函数是写在libm.so函数库中，而我们并没有源码里加入相关的说明，所以需要在编译与连接的时候，将这个函数库连接进执行文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/4894f5a06f2534e9c7e48b5346ee877c&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;由于Linux默认是将函数库放在/lib与/usr/lib中，所以不写-L/lib和-L/usr/lib也没有关系。不过，如果使用的函数库并非放在这两个目录下，那么-L/path就很重要，否则找不到函数库&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用gcc&#34;&gt;&lt;a href=&#34;#使用gcc&#34; class=&#34;headerlink&#34; title=&#34;使用gcc&#34;&gt;&lt;/a&gt;使用gcc&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;gcc为Linux最标准的编译器，gcc是由GNU维护；下面为比较常见的参数：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/67c4660bafcf81c9791e2a53844cf017&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;make的简单用法&#34;&gt;&lt;a href=&#34;#make的简单用法&#34; class=&#34;headerlink&#34; title=&#34;make的简单用法&#34;&gt;&lt;/a&gt;make的简单用法&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;make可以简化编译过程执行的命令&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;为社么要用make&#34;&gt;&lt;a href=&#34;#为社么要用make&#34; class=&#34;headerlink&#34; title=&#34;为社么要用make&#34;&gt;&lt;/a&gt;为社么要用make&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/a6b8a1162bd17f19d26bbed4366362b3&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;仅写出main需要的目标文件，结果make会主动去判断每个目标文件相关的源码文件，并直接编译，最后再直接进行连接&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;make的好处：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/b1f15eb05d0a4a10ed02e4321baf2fee&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;make的基本语法与变量&#34;&gt;&lt;a href=&#34;#make的基本语法与变量&#34; class=&#34;headerlink&#34; title=&#34;make的基本语法与变量&#34;&gt;&lt;/a&gt;make的基本语法与变量&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/dbc38ca29dbb311c9423e61a336b73c6&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/7caddb4442ee504ae582aaa990b15c43&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/d27906e2d66ca47b77d98a1edb2e6be1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/5b2f56123c9bdacae7764512dbcd5472&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Tarball的管理与建议&#34;&gt;&lt;a href=&#34;#Tarball的管理与建议&#34; class=&#34;headerlink&#34; title=&#34;Tarball的管理与建议&#34;&gt;&lt;/a&gt;Tarball的管理与建议&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;知道了源码的相关信息之后，还需要了解如何使用具有源码的Tarball来建立属于自己的套件；Tarball源码程序应该可以再大部分环境安装成功&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用源码管理套件所需要的基础套件&#34;&gt;&lt;a href=&#34;#使用源码管理套件所需要的基础套件&#34; class=&#34;headerlink&#34; title=&#34;使用源码管理套件所需要的基础套件&#34;&gt;&lt;/a&gt;使用源码管理套件所需要的基础套件&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;创建一个二进制执行文件需要很多的文件，包括下面的基础套件：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;gcc或cc等C语言编译器&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;make及autoconfig等套件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;需要核心提供的函数库文件以及相关的包含文件&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;很多套件再开发时都直接取用系统核心提供的函数库与包含文件，这样才可以与操作系统兼容，尤其是驱动程序方面的套件，常常需要核心提供的相关信息&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;Tarball安装的基本步骤&#34;&gt;&lt;a href=&#34;#Tarball安装的基本步骤&#34; class=&#34;headerlink&#34; title=&#34;Tarball安装的基本步骤&#34;&gt;&lt;/a&gt;Tarball安装的基本步骤&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;安装的基本操作步骤如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/37bbd6a848f1f5cc07bc5164ab1143a8&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;!%5B%5D(https://img04.sogoucdn.com/app/a/100520146/ccdb14a2538f6d3eb687ae1dd8a0c7f0)&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;上面只要有一个步骤无法成功，那么后续的步骤就完全没有办法进行&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;Tarball套件安装的注意事项（如何删除、升级）&#34;&gt;&lt;a href=&#34;#Tarball套件安装的注意事项（如何删除、升级）&#34; class=&#34;headerlink&#34; title=&#34;Tarball套件安装的注意事项（如何删除、升级）&#34;&gt;&lt;/a&gt;Tarball套件安装的注意事项（如何删除、升级）&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;etc、lib、man、bin等目录中，分别表示“设置文件、函数库、执行文件、在线帮助文件”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;!%5B%5D(https://img02.sogoucdn.com/app/a/100520146/d52d04278b35893a9cee0c96a97910da)&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单一套件的文件都在同一个目录之下，要删除该套件就简单多了。只要将该目录删除，即可视为该套件已被删除。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;简单的范例：使用ntp&#34;&gt;&lt;a href=&#34;#简单的范例：使用ntp&#34; class=&#34;headerlink&#34; title=&#34;简单的范例：使用ntp&#34;&gt;&lt;/a&gt;简单的范例：使用ntp&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/ecfe44c20135788e89aaef11ed7c69dc&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/e2f5c8fbbc40df511f6e1f4beeffacc9&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用patch更新源码&#34;&gt;&lt;a href=&#34;#使用patch更新源码&#34; class=&#34;headerlink&#34; title=&#34;使用patch更新源码&#34;&gt;&lt;/a&gt;使用patch更新源码&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/69a578ff16cd88f411128b70692c9fbd&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;函数库管理&#34;&gt;&lt;a href=&#34;#函数库管理&#34; class=&#34;headerlink&#34; title=&#34;函数库管理&#34;&gt;&lt;/a&gt;函数库管理&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;很多套件之间都会互相采用彼此提供的函数库来运行特殊功能，函数库根据是否被编译到程序内部而分为动态与静态函数库&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;动态与静态函数库&#34;&gt;&lt;a href=&#34;#动态与静态函数库&#34; class=&#34;headerlink&#34; title=&#34;动态与静态函数库&#34;&gt;&lt;/a&gt;动态与静态函数库&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/878480086d788786346d7b89cd2a2060&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在linux版本中，比较倾向于使用动态函数库；如果使用太多的静态函数库，那么升级一个函数库时，都会对整个系统造成很大的冲击。如果其他相关的执行文件也要同时重新编译，动态函数库就有用得多，只要升级动态函数库，其他套件根本无须变动&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;绝大多数的函数库都放在：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;/usr/lib&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;/lib&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ldconfig与-etc-ld-so-conf&#34;&gt;&lt;a href=&#34;#ldconfig与-etc-ld-so-conf&#34; class=&#34;headerlink&#34; title=&#34;ldconfig与/etc/ld.so.conf&#34;&gt;&lt;/a&gt;ldconfig与/etc/ld.so.conf&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;将常用的动态函数库加载到内存中（高速缓存，cache），当软件套件要采用动态函数库时，就不需要重新从硬盘里读出，这样可以提高动态函数库的读取速度。这时候需要idconfig与/etc/ld.so.conf的帮助&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/5330f235be104a2d92053c1336144ee7&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;ldd&#34;&gt;&lt;a href=&#34;#ldd&#34; class=&#34;headerlink&#34; title=&#34;ldd&#34;&gt;&lt;/a&gt;ldd&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/9453bd441350f6ebf474af7875227b99&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;检测软件正确性：md5sum&#34;&gt;&lt;a href=&#34;#检测软件正确性：md5sum&#34; class=&#34;headerlink&#34; title=&#34;检测软件正确性：md5sum&#34;&gt;&lt;/a&gt;检测软件正确性：md5sum&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/1ee537fec32c9337453f328c7d468bc9&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/46f1ddb5e0e37f64d3c735a3d6a34be9&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这几个文件容易被修改，因外很多木马程序在执行的时候，还是会执行PID，为了不被root追查出来，所以会修改这些价差任务分配的文件。如果可以替这些文件建立指纹数据库（就是使用md5sum检查一次，将该文件指纹记录下来，然后以shell脚本的方式由程序自行来检查指纹表是否不同），那么文件系统就会比较安全&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;重点回顾&#34;&gt;&lt;a href=&#34;#重点回顾&#34; class=&#34;headerlink&#34; title=&#34;重点回顾&#34;&gt;&lt;/a&gt;重点回顾&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/93719747a52ced4bee42cff62103fd70&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;RPM与SRPM套件管理程序&#34;&gt;&lt;a href=&#34;#RPM与SRPM套件管理程序&#34; class=&#34;headerlink&#34; title=&#34;RPM与SRPM套件管理程序&#34;&gt;&lt;/a&gt;RPM与SRPM套件管理程序&lt;/h1&gt;&lt;h1 id=&#34;认识与分析登录文件&#34;&gt;&lt;a href=&#34;#认识与分析登录文件&#34; class=&#34;headerlink&#34; title=&#34;认识与分析登录文件&#34;&gt;&lt;/a&gt;认识与分析登录文件&lt;/h1&gt;&lt;h1 id=&#34;Linux备份策略&#34;&gt;&lt;a href=&#34;#Linux备份策略&#34; class=&#34;headerlink&#34; title=&#34;Linux备份策略&#34;&gt;&lt;/a&gt;Linux备份策略&lt;/h1&gt;&lt;h1 id=&#34;Linux硬件检测与维护&#34;&gt;&lt;a href=&#34;#Linux硬件检测与维护&#34; class=&#34;headerlink&#34; title=&#34;Linux硬件检测与维护&#34;&gt;&lt;/a&gt;Linux硬件检测与维护&lt;/h1&gt;&lt;h1 id=&#34;Linux核心编译与管理&#34;&gt;&lt;a href=&#34;#Linux核心编译与管理&#34; class=&#34;headerlink&#34; title=&#34;Linux核心编译与管理&#34;&gt;&lt;/a&gt;Linux核心编译与管理&lt;/h1&gt; ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://theprofessor249.github.io/2021/07/07/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E5%9B%9B%E9%83%A8%E5%88%86%20%20%20%20%20Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</guid>
            <title>第四部分   Linux用户管理</title>
            <link>https://theprofessor249.github.io/2021/07/07/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E5%9B%9B%E9%83%A8%E5%88%86%20%20%20%20%20Linux%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/</link>
            <pubDate>Wed, 07 Jul 2021 09:11:40 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Linux账户与身份管理&#34;&gt;&lt;a href=&#34;#Linux账户与身份管理&#34; class=&#34;headerlink&#34; title=&#34;Linux账户与身份管理&#34;&gt;&lt;/a&gt;Linux账户与身份管理&lt;/h1&gt;&lt;h2 id=&#34;Linux的账号与用户组&#34;&gt;&lt;a href=&#34;#Linux的账号与用户组&#34; class=&#34;headerlink&#34; title=&#34;Linux的账号与用户组&#34;&gt;&lt;/a&gt;Linux的账号与用户组&lt;/h2&gt;&lt;h3 id=&#34;用户识别：UID与GID&#34;&gt;&lt;a href=&#34;#用户识别：UID与GID&#34; class=&#34;headerlink&#34; title=&#34;用户识别：UID与GID&#34;&gt;&lt;/a&gt;用户识别：UID与GID&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;每个文件都具有拥有者与拥有用户组的属性。每个登录的用户至少会取得两个ID，一个是用户（User ID，简称UID），一个是用户组ID（Group ID，简称GID）&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何登录Linux取得UID/GID&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs87aqxap0j30ko031myd.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;用户账号：-etc-passwd、-etc-shadow&#34;&gt;&lt;a href=&#34;#用户账号：-etc-passwd、-etc-shadow&#34; class=&#34;headerlink&#34; title=&#34;用户账号：/etc/passwd、/etc/shadow&#34;&gt;&lt;/a&gt;用户账号：/etc/passwd、/etc/shadow&lt;/h3&gt;&lt;p&gt;1./etc/passwd&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs87b3eoq7j30kw0i1q90.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs87bdbyr7j30kk0d9tci.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2./etc/shadow&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs87bsygsyj30l60ld7f6.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;关于用户组：有效与初始用户组、groups-newgrp&#34;&gt;&lt;a href=&#34;#关于用户组：有效与初始用户组、groups-newgrp&#34; class=&#34;headerlink&#34; title=&#34;关于用户组：有效与初始用户组、groups/newgrp&#34;&gt;&lt;/a&gt;关于用户组：有效与初始用户组、groups/newgrp&lt;/h3&gt;&lt;p&gt;1./etc/group:用于记录GID与用户组名称的&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs87c38oclj30l20c7dhk.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.有效用户组与初始用户组&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GID就是初始用户组；当用户登录系统，立刻就拥有这个用户组的相关权限&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;在/etc/passwd中，GID就是初始用户组&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;直接输入groups就可以，在输出消息中，可以知道我同时属于dmtsai及users两个用户组，而第一个输出的用户组为有效用户组，可通过newgrp改变有效用户组&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;先查看一下 /etc/group 文件：&lt;/p&gt;
&lt;p&gt;[root@localhost /]# cat /etc/group&lt;br&gt;root:x:0:root&lt;br&gt;bin:x:1:root,bin,daemon&lt;/p&gt;
&lt;p&gt;这个文件的每一行代表一个用户组，以冒号分隔各个字段。共有4个字段，分别是：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用户组名称&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;用户组密码：&lt;/strong&gt;通常不需要设置，这个设置通常是给“用户组管理员”是用的。&lt;br&gt;&lt;strong&gt;GID：用户组 ID&lt;/strong&gt;&lt;br&gt;此用户组支持的账号名称：一个账号可以加入多个用户组，如果某个用户想要加入某个用户组，只需将该用户的用户名添加进这个字段中。&lt;br&gt;&lt;strong&gt;初始用户组&lt;/strong&gt;&lt;br&gt;在 /etc/passwd 中用户对应的那一行的第4个字段（GID），就是初始用户组。当用户登录系统，立刻就拥有这个初始用户组的相关权限。&lt;/p&gt;
&lt;p&gt;[root@localhost /]# cat /etc/passwd&lt;br&gt;root:x:0:0:root:/root:/bin/bash&lt;br&gt;bin:x:1:1:bin:/bin:/sbin/nologin&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;有效用户组&lt;br&gt;有效用户组表示用户此时此刻所在的用户组是什么。在切换有效用户组之前，有效用户组就是初始用户组。&lt;/p&gt;
&lt;p&gt;想要知道用户自己当前的有效用户组和支持的用户组(在 /etc/group 文件中第四字段包含此用户的用户组)，使用 groups 即可。&lt;/p&gt;
&lt;p&gt;[root@localhost /]# groups&lt;br&gt;root bin daemon sys adm disk wheel&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在这个输出的信息中，第一个输出的用户组就是当前的有效用户组了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果我以 touch 去创建一个新文件，那么这个文件的所有者为 root,而且用户组是 root（有效用户组）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;切换有效用户组：newgrp&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;使用 newgrp 命令可以切换有效用户组，注意只能切换当前账号支持的用户组。&lt;/p&gt;
&lt;p&gt;假设当前用户支持 “test” 和 “foo” 这两个用户组。那么 newgrp test 和 newgrp foo 是有效的。其他的都是无效的。&lt;/p&gt;
&lt;p&gt;这个转换的背后原理是创建一个新的 shell，如果要恢复到前一个用户组需要用 exit 或 Ctrl+D 来注销当前的 shell 。&lt;/p&gt;
&lt;p&gt;3./etc/gshadow&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果没有明白/etc/gshadow的设置，newgrp是无法操作的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs87d5u0k1j30lm05cjsw.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;账户管理&#34;&gt;&lt;a href=&#34;#账户管理&#34; class=&#34;headerlink&#34; title=&#34;账户管理&#34;&gt;&lt;/a&gt;账户管理&lt;/h2&gt;&lt;h3 id=&#34;新增与删除用户：useradd、相关设置文件、passwd、usermod、userdel&#34;&gt;&lt;a href=&#34;#新增与删除用户：useradd、相关设置文件、passwd、usermod、userdel&#34; class=&#34;headerlink&#34; title=&#34;新增与删除用户：useradd、相关设置文件、passwd、usermod、userdel&#34;&gt;&lt;/a&gt;新增与删除用户：useradd、相关设置文件、passwd、usermod、userdel&lt;/h3&gt;&lt;p&gt;1.useradd(-u、-r)&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs88n3fy98j30k304wwfo.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs88nis4lzj30km0lvteu.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs88nomiqoj30ka02r0sr.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.相关设置文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用useradd去新增用户时，一些在/etc/passwd中的值会去参考/etc/default/useradd&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs88nw81a5j30jh03ydgh.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.关于用户组的建立机制&lt;/p&gt;
&lt;p&gt;用户组有两种建立机制：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs88ppt2tej30kf02njsa.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.关于用户家目录的参考：/etc/skel/*&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;利用useradd  vbird1时，它在/home/vbird这个用户家目录内的各项数据，都是由/etc/skel所复制过去的。所以，将来如果想要新增用户，该用户大的环境变量~/.bashrc设置好的话，可以到/etc/skel/.bashrc去编辑，也可以建立/etc/skel/public_html目录，新增用户后，在它的家目录下就会有pubilc_html目录了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;5.关于用户UID/GID的设置&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs88shiv37j30k807p76l.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;6.关于家目录默认是否建立&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意CREATE_HOME的设置值也很重要。在FC4的环境下，使用useradd   useraccount时，默认会主动建立家目录，除非使用-M参数。不论哪个版本，最好还是加上-m参数来强制建立家目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs88tm87pyj30ld03k755.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;7.passwd&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs88tvrsopj30jx0cc41e.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;8.usermod&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs88u9ov1bj30kl0knwks.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;usermod是系统管理员root用来管理账号身份的相关数据的，不过这个usermod程序的功能其实也被很多其他命令所取代，如chfn与chsh等&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;9.userdel&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;作用是删除用户&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs88uk7m3pj30k50cmgmg.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;用户功能：chfn、chsh&#34;&gt;&lt;a href=&#34;#用户功能：chfn、chsh&#34; class=&#34;headerlink&#34; title=&#34;用户功能：chfn、chsh&#34;&gt;&lt;/a&gt;用户功能：chfn、chsh&lt;/h3&gt;&lt;p&gt;1.chsh&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs8ggwi3ezj30k50bxmzq.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.chfn&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs8gh8yy0oj30l20hvadk.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs8ghiceozj30ky04ujs9.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.finger&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用chfn修改用户的相关信息，这些信息就可以利用finger来查看&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs8ghr4gmxj30k207s0u3.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;finger可以用来查询其他主机的账号&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;4.id&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;id命令可以查询某人或自己的相关UID/GID信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs8gi7180nj30k5058dgk.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;新增与删除用户组&#34;&gt;&lt;a href=&#34;#新增与删除用户组&#34; class=&#34;headerlink&#34; title=&#34;新增与删除用户组&#34;&gt;&lt;/a&gt;新增与删除用户组&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;用户组内容与下面两个文件有关&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gif3mbkj30k1017dfo.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用户组的内容其实很简单，只是对上面两个文件进行新增，修改与删除而已，如果再加上有效用户组的概念，那么对newgrp与gpasswd则不可不知&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.groupadd&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs8gio267wj30jv0aa0um.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.groupmod&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;只是在进行group相关参数的修改&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs8gixzli5j30kh06qwfh.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.groupdel&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;删除用户组&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gj6e5qdj30k704zaal.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.gpasswd&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;除了设置用户组之外，还可以针对系统上有的用户组设置密码，该用户组就能让某些人登录成为有效用户组&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gjnxf4mj30k007ujtu.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gk2k27rj30k20btact.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;5.newgrp&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;newgrp会额外以另一个login来让用户登录到另一个shell中，并且将有效用户组改为newgrp后面接的那个用户组，若没有接用户组，则默认用户组为初始用户组&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;密码管理：passwd&#34;&gt;&lt;a href=&#34;#密码管理：passwd&#34; class=&#34;headerlink&#34; title=&#34;密码管理：passwd&#34;&gt;&lt;/a&gt;密码管理：passwd&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs8gkau0kyj30ks0d0q5k.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;切换用户身份&#34;&gt;&lt;a href=&#34;#切换用户身份&#34; class=&#34;headerlink&#34; title=&#34;切换用户身份&#34;&gt;&lt;/a&gt;切换用户身份&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;操作的习惯：为了安全，建议操作Linux时，尽量以一般身份用户来操作，等到需要设置系统环境时，才变换身份成为root来进行系统管理，相对比较安全&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用较低权限启动系统服务：烤炉到系统的安全性，必须要以某些系统账号来执行程序&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;软件本身的限制：以前没有ssh的时候，我们都是使用telnet登录系统的，偏偏系统默认是不打开root以telnet登录；系统最特殊的账号就是UID为0的用户，它具有至高无上的权力，而且时系统管理员必须要具备的身份&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;用su直接将身份变成root，但这个命令需要面膜&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;如果不想将root的密码外传，可以使用sudo&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1.su&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gknxm6pj30k10j6gpy.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gm3qbqcj30jz035dg5.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;su的特别使用方式&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果只是想要使用root身份操作系统，并不想要改变原来的环境参数，可以使用su直接切换的身份成为root&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;建议如果要切换成某个身份，使用su或者是su - l  username，否则容易造成环境变量的差异&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果仅想执行一次root的命令，可以参考-c这种su的使用方式&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;当root使用su切换身份时，并不需要输入密码&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;sudo&#34;&gt;&lt;a href=&#34;#sudo&#34; class=&#34;headerlink&#34; title=&#34;sudo&#34;&gt;&lt;/a&gt;sudo&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;sudo是如何工作的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gmw63flj30k303r0tw.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;sudo的执行权限与/etc/sudoers文件有关。在默认的情况下，只有root才能使用sudo，编辑/etc/sudoers时则需要visudo命令&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs8gng79cpj30jx05aq3q.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gs65yz4j30k40blgnz.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一定要使用visudo去编辑/etc/sudoers(visudo必须使用root的身份来执行)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gtvwm6mj30je0bqwgo.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用visudo之后，就会出现一个画面，它就是以vi来打开/etc/sudoers的，当我们存储离开时，visudo会去检查/etc/sudoers内部的语法，以避免用户输入错误的信息。在上面只加入一行，就是让用户成为可以随意使用sudo的身份&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gua9gzij30jr010aa0.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gy0t78oj30id0htte1.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;用户的特殊Shell与PAM模块&#34;&gt;&lt;a href=&#34;#用户的特殊Shell与PAM模块&#34; class=&#34;headerlink&#34; title=&#34;用户的特殊Shell与PAM模块&#34;&gt;&lt;/a&gt;用户的特殊Shell与PAM模块&lt;/h2&gt;&lt;h3 id=&#34;特殊的shell、-sbin-nologin&#34;&gt;&lt;a href=&#34;#特殊的shell、-sbin-nologin&#34; class=&#34;headerlink&#34; title=&#34;特殊的shell、/sbin/nologin&#34;&gt;&lt;/a&gt;特殊的shell、/sbin/nologin&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;这个shell通常时给系统账号使用的，因为/sbin/nologin事实上无法让账号实际登录，如果利用usermod将dmtsai用户的shell改为/sbin/nologin之后，再次以dmtsai登录系统，屏幕就会出现不允许这个账号登录，不过可以进行其他工作，例如打印工作、www服务。他们都可以进行系统程序的工作，但就是无法登录主机&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以可以考虑单纯使用邮件的账号以/sbin/nologin作为shell，当主机尝试想登录系统时，可以拒绝该账号&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;PAM模块：-etc-nologin、-etc-securetty&#34;&gt;&lt;a href=&#34;#PAM模块：-etc-nologin、-etc-securetty&#34; class=&#34;headerlink&#34; title=&#34;PAM模块：/etc/nologin、/etc/securetty&#34;&gt;&lt;/a&gt;PAM模块：/etc/nologin、/etc/securetty&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;PAM模块除了可以在用户登录时进行身份验证之外，还可以辅助一些应用程序的验证&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PAM怎么运行的，以/usr/bin/passwd来说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gygt6g2j30k70apjtc.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;重要信息：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gyob15pj30le031ab5.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;1.PAM的设置文件设置范例&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PAM模块的作用就是让程序调用，当程序调用时，PAM就会利用相对应的设置文件来进行一些验证&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs8gz5fv4jj30l30hc0yt.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8gzhrls8j30lp0c640v.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当前FC4提供的PAM模块够多了，这些模块实际上都放在/lib/security/目录中，FC4相关的PAM说明文件则放在/usr/share/doc/pam-*/*里，可以根据每个不同的模块去讨论它的用途&lt;/strong&gt;&lt;br&gt;&lt;img data-src=&#34;!%5B%5D(https://tva4.sinaimg.cn/large/008jSNE7ly8gs8gzxzmbuj30kg03gmxh.jpg)&#34;&gt;&lt;/p&gt;
&lt;p&gt;2./etc/securetty&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要功能就是预防不安全的登录环境。而且主要是针对root用户的身份。这个模块在被启动时，会去读取/etc/securetty文件，我们可以将被认定是安全的终端环境写入这个文件，则root仅可以在那几个终端环境下登录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;3./etc/nologin&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用于控制用户登录；这个模块只针对一般身份用户进行控制，对root没有效果；必须与/etc/nologin结合使用&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;当/etc/nologin文件存在时，任何一个一般身份账号在尝试登录时，仅会获得/etc/nologin内容的信息，而无法登录主机&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;4./etc/security/*&lt;/p&gt;
&lt;p&gt;*&lt;em&gt;更多的PAM模块设置信息可以参考/etc/security/&lt;em&gt;中的文件设置，尤其是针对用户使用Linux系统资源的limits.conf以及时间的time.conf&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;Linux系统的用户对话与邮件的使用&#34;&gt;&lt;a href=&#34;#Linux系统的用户对话与邮件的使用&#34; class=&#34;headerlink&#34; title=&#34;Linux系统的用户对话与邮件的使用&#34;&gt;&lt;/a&gt;Linux系统的用户对话与邮件的使用&lt;/h2&gt;&lt;h3 id=&#34;查询用户：w、who、last、lastlog&#34;&gt;&lt;a href=&#34;#查询用户：w、who、last、lastlog&#34; class=&#34;headerlink&#34; title=&#34;查询用户：w、who、last、lastlog&#34;&gt;&lt;/a&gt;查询用户：w、who、last、lastlog&lt;/h3&gt;&lt;h3 id=&#34;用户对话：talk、mesg、wall&#34;&gt;&lt;a href=&#34;#用户对话：talk、mesg、wall&#34; class=&#34;headerlink&#34; title=&#34;用户对话：talk、mesg、wall&#34;&gt;&lt;/a&gt;用户对话：talk、mesg、wall&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs8h1u31iij30nl0kvjvl.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;用户邮件信箱：mail&#34;&gt;&lt;a href=&#34;#用户邮件信箱：mail&#34; class=&#34;headerlink&#34; title=&#34;用户邮件信箱：mail&#34;&gt;&lt;/a&gt;用户邮件信箱：mail&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;寄信：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8h27dl8cj30kd04bmxx.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;收信&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8h2w1twbj30ly0hoaeh.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs8h3hk51jj30kp09v77f.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;手动增加用户&#34;&gt;&lt;a href=&#34;#手动增加用户&#34; class=&#34;headerlink&#34; title=&#34;手动增加用户&#34;&gt;&lt;/a&gt;手动增加用户&lt;/h2&gt;&lt;h3 id=&#34;一些检查工具&#34;&gt;&lt;a href=&#34;#一些检查工具&#34; class=&#34;headerlink&#34; title=&#34;一些检查工具&#34;&gt;&lt;/a&gt;一些检查工具&lt;/h3&gt;&lt;p&gt;1.pwck&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pwck命令能检查/etc/passwd账号设置文件内的信息，以及实际的家目录是否存在等信息，还可以比较/etc/passwd、/etc/shadow的信息是否一致；如果/etc/passwd内的数据字段错误，会提示用户修改&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2.pwconv&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要目的是：将/etc/passwd内账号与密码移到/etc/shadow中。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;3.pwunconv&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;与pwconv相比，pwunconv是将/etc/shadow内的密码栏数据写回/etc/passwd中，并且删除/etc/shadow文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;4.chpasswd&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以用于读入未加密前的密码，并且经过加密后，将加密后的密码写入/etc/shadow中&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;特殊账号，如纯数字账号的建立&#34;&gt;&lt;a href=&#34;#特殊账号，如纯数字账号的建立&#34; class=&#34;headerlink&#34; title=&#34;特殊账号，如纯数字账号的建立&#34;&gt;&lt;/a&gt;特殊账号，如纯数字账号的建立&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;手动建立账号：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs8hjr6guwj30kg09d77q.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs8hjxw4uhj30k40ce0vb.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;不开放终端登录的账号（ex-gt-mail-account）&#34;&gt;&lt;a href=&#34;#不开放终端登录的账号（ex-gt-mail-account）&#34; class=&#34;headerlink&#34; title=&#34;不开放终端登录的账号（ex&amp;gt;mail  account）&#34;&gt;&lt;/a&gt;不开放终端登录的账号（ex&amp;gt;mail  account）&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;建立一个不需要登录系统的账号&lt;/strong&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8ht7vaqsj30k1018glt.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8htav6n4j30lo0a2q5g.jpg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;Linux磁盘配额&#34;&gt;&lt;a href=&#34;#Linux磁盘配额&#34; class=&#34;headerlink&#34; title=&#34;Linux磁盘配额&#34;&gt;&lt;/a&gt;Linux磁盘配额&lt;/h1&gt;&lt;h2 id=&#34;什么是磁盘配额&#34;&gt;&lt;a href=&#34;#什么是磁盘配额&#34; class=&#34;headerlink&#34; title=&#34;什么是磁盘配额&#34;&gt;&lt;/a&gt;什么是磁盘配额&lt;/h2&gt;&lt;p&gt; &lt;strong&gt;由于少数几个用户占用大量硬盘空间，势必影响其他用户的使用，因此管理员应该给用户适当开放硬盘的权限，妥善分配系统资源&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.磁盘配额的一般用途&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs9a98dmm0j30i702b0tc.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.磁盘配额的使用限制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;针对整个分区的限制&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;核心必须支持磁盘配额&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;磁盘配额的记录文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;只对一般身份用户有效&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.磁盘配额程序对硬盘配额的限制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;最低限制：容量可以超过最低限制，但必须在宽限时间之内将磁盘容量降低到最低限制的容量限制范围之内&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最高限制：绝对不能超过的容量，通常最高限制会比最低限制高&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;宽限时间：当用户使用的空间超过最低限制，却还没有到达最高限制时，在这个宽限时间内，就必须请用户将使用的磁盘容量降低到最低限制之下&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基本磁盘配额命令&#34;&gt;&lt;a href=&#34;#基本磁盘配额命令&#34; class=&#34;headerlink&#34; title=&#34;基本磁盘配额命令&#34;&gt;&lt;/a&gt;基本磁盘配额命令&lt;/h2&gt;&lt;p&gt;1./etc/mtab&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当我们要使用磁盘配额的功能时，文件系统必须要支持磁盘配额的标志，可通过编辑/etc/fstab后，再重新载入文件系统的方法，来让系统的文件系统支持磁盘配额&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2.quota：用于显示&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/35ae178a4391b8b41f1d011163069d4a&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.quotacheck&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;主要是扫描某个磁盘的配额空间，针对分区进行扫描，由于该磁盘持续运行，可能扫描过程中文件会增减，造成磁盘配额扫描错误，因此，当使用quotacheck时，该磁盘将自动被设置成为只读扇区；扫描完毕之后，扫描所得的磁盘空间结果会写入该区最顶端&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/235047593b4661e92bb3786e00ce0bc8&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/3c1d03264334f22bf988ad3d3635a4fb&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.edquota&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/731b33f73a3611dc3ae6f4eaad45056d&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/5b7bac5e6dbb200c7710a9fe2fa702e4&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/1a82595fc6304e143f93d9128232406c&#34;&gt;&lt;/p&gt;
&lt;p&gt;5.quotaon&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/77d720239327679f75405b0dc62f921c&#34;&gt;&lt;/p&gt;
&lt;p&gt;6.quotaoff&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/edae6a0db49e8e297e323cfa0e39b648&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;磁盘配额实例&#34;&gt;&lt;a href=&#34;#磁盘配额实例&#34; class=&#34;headerlink&#34; title=&#34;磁盘配额实例&#34;&gt;&lt;/a&gt;磁盘配额实例&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;一般用途：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;限制用户组所能使用的最大磁盘配额（使用户组限制）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;限制某一用户的最大磁盘配额（使用用户限制）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;已连接方式，使邮件可以作为限制的配额（更改/var/spool/mail路径）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;磁盘从开始准备文件系统的支持，到整个设置结束的主要步骤如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/c3539a299da8b7058198159b337bd53e&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实际训练：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/0985597cdde751f6aad2896be8966d09&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/90fe2ee5846c4fbbcdaa8719690fe1e7&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/3547bc9ff3a695be9e3a02ef68deba14&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/ff9e21aa7d2b55822d0e181df202cf5d&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/d4880b9490f7106cfaa4e2848158ccd5&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/d46460915965de8de4ab803751f41ee2&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/dba2be455f1594ec340235196dfd269f&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;不更改现有系统的磁盘配额实力&#34;&gt;&lt;a href=&#34;#不更改现有系统的磁盘配额实力&#34; class=&#34;headerlink&#34; title=&#34;不更改现有系统的磁盘配额实力&#34;&gt;&lt;/a&gt;不更改现有系统的磁盘配额实力&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;设置对外打开的邮件主机，最好对邮件空间进行限制&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;例子：我的分区仅有/、/disk1、/disk2,所有用户都在/home里，邮件在/var/spool/mail&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/512d89a553751d82e81da047af9142f8&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;例行性命令的建立&#34;&gt;&lt;a href=&#34;#例行性命令的建立&#34; class=&#34;headerlink&#34; title=&#34;例行性命令的建立&#34;&gt;&lt;/a&gt;例行性命令的建立&lt;/h1&gt;&lt;h2 id=&#34;什么是例行性命令&#34;&gt;&lt;a href=&#34;#什么是例行性命令&#34; class=&#34;headerlink&#34; title=&#34;什么是例行性命令&#34;&gt;&lt;/a&gt;什么是例行性命令&lt;/h2&gt;&lt;h3 id=&#34;Linux工作任务分配的种类：at、cron&#34;&gt;&lt;a href=&#34;#Linux工作任务分配的种类：at、cron&#34; class=&#34;headerlink&#34; title=&#34;Linux工作任务分配的种类：at、cron&#34;&gt;&lt;/a&gt;Linux工作任务分配的种类：at、cron&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/970616cd635c848fda3d6fe2d8d12a42&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;系统常见的例行性命令&#34;&gt;&lt;a href=&#34;#系统常见的例行性命令&#34; class=&#34;headerlink&#34; title=&#34;系统常见的例行性命令&#34;&gt;&lt;/a&gt;系统常见的例行性命令&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;默认工作如下：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;登录文件的数据轮换&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;rpm数据库的建立&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;建立locate的数据库&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;程序分析&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;检查登录文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;指纹数据库的比较&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;仅进行一次的工作任务分配&#34;&gt;&lt;a href=&#34;#仅进行一次的工作任务分配&#34; class=&#34;headerlink&#34; title=&#34;仅进行一次的工作任务分配&#34;&gt;&lt;/a&gt;仅进行一次的工作任务分配&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;要分配工作任务时，Linux系统上有负责任务分配的服务，就是atd，只是很多新的Linux版本似乎默认不打开它，我们必须手动启动它，启动如下：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/7d73e4a853b9f7d7a920cda8a47d836d&#34;&gt;&lt;/p&gt;
&lt;p&gt;1.at的工作&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;并不是所有人都可以进行at工作任务分配。由于怪客程序可能定时或不定时地在系统中工作，所以可以利用/etc/at.allow与/etc/at.deny这两个文件来限制at的使用：&lt;/strong&gt;&lt;br&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/3903d5824428e33a0c93da5905339fd0&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.开始使用at&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/efc74c50c2c65e3ddb26ea0d5e28c689&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当我们使用at时，at会给用户一个bash shell让用户执行工作命令，不容易出现问题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;at的优点就是能进行后台执行&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;at命令执行错误，解决方法：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/77a189a7da07b25936a100e2d5c7f6e1&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;循环执行的例行性命令&#34;&gt;&lt;a href=&#34;#循环执行的例行性命令&#34; class=&#34;headerlink&#34; title=&#34;循环执行的例行性命令&#34;&gt;&lt;/a&gt;循环执行的例行性命令&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;循环执行的例行性命令，是由cron系统服务来控制的&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;用户的设置：crontab&#34;&gt;&lt;a href=&#34;#用户的设置：crontab&#34; class=&#34;headerlink&#34; title=&#34;用户的设置：crontab&#34;&gt;&lt;/a&gt;用户的设置：crontab&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;我们可以限制使用crontab的用户账户，使用的限制数据有:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/bbcd3a0bbb001ac388c9e362356544b4&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/cron.allow比/etc/cron.deny更优秀，在判断上，这两个文件只选择一个来限制而已，建议只要保留一个即可，以免影响自己在设置上的判断&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/a557200d3cc53d9a6fa098e096424629&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/7202923fb8cd3a20a6201f5205534161&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/04c427e51cecf015c363d8fdaa18e20d&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;系统的设置：-etc-crontab&#34;&gt;&lt;a href=&#34;#系统的设置：-etc-crontab&#34; class=&#34;headerlink&#34; title=&#34;系统的设置：/etc/crontab&#34;&gt;&lt;/a&gt;系统的设置：/etc/crontab&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;crontab  -e中的crontab其实是/usr/bin/crontab执行文件，但是/etc/crontab是一个纯文本文件，您可以用root的身份编辑这个文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;cron服务的最低检测限制是分钟，所以cron会每分钟去读取一次/etc/crontab与/var/spool/cron中的数据内容，因此，只要编辑完/etc/crontab文件，并且将它储存之后，cron的设置就自动执行了&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/2b06fde0fb8db1099663431ef2608565&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/5c9be31b031284a17fc9448ea0cd55fe&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;一些使用特性&#34;&gt;&lt;a href=&#34;#一些使用特性&#34; class=&#34;headerlink&#34; title=&#34;一些使用特性&#34;&gt;&lt;/a&gt;一些使用特性&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;资源分配不均的问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;当大量使用1crontab的时候，总是会有问题发生的，最严重的问题就是系统资源分配不均&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;取消不要的输出项目&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安全检验&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;大部分时间都是以例行命令的放肆植入木马，所以可以通过检查/var/log/cron的内容来查看是否执行了非您设置的cron&lt;/strong&gt;&lt;/p&gt;
&lt;h1 id=&#34;程序与资源管理&#34;&gt;&lt;a href=&#34;#程序与资源管理&#34; class=&#34;headerlink&#34; title=&#34;程序与资源管理&#34;&gt;&lt;/a&gt;程序与资源管理&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;在Linux系统中，触发任何一个事件，系统都会将它定义成为一个进程，并且给这个进程一个ID，称为PID，同时根据启动这个进程的用户与相关属性关系，给这个PID一组有效的权限设置&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;进程与程序&#34;&gt;&lt;a href=&#34;#进程与程序&#34; class=&#34;headerlink&#34; title=&#34;进程与程序&#34;&gt;&lt;/a&gt;进程与程序&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;当我们要让系统工作的时候，就需要启动一个二进制文件，该二进制文件就是程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/2c523329963c658f3c8f85e0ee2b0fb1&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当登入并执行bash时，系统已经给我们一个PID，这个PID就是根据登陆者的UID/GID而得到的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;1.子程序与父程序&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当我们登录系统后，会获取一个bash的shell，然后我们用这个bash提供的接口去执行另一个命令，例如/usr/bin/passwd或touch等，那些另外执行的命令也会被出发成为PID，PID就是子程序，而在bash环境下就称为父进程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;环境变量在不同程序之间的调用，因为我们执行了不同的bash，执行两次，就会获得两个PID，要让这两个PID之间具有一些关联，bash就使用了环境变量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/a02efce225edc3012a1dbf4575121059&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;子程序与父程序之间的关系很复杂，最复杂的地方在于程序互相之间的调用，以及两者权限的关联性&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2.系统或网络服务，常驻内存程序&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;系统每分钟都会扫描/etc/crontab以及相关的设置文件，来进行工作任务分配，所以crond程序启动后，他就一直持续不断地运行，属于常驻内存程序&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;Linux的多用户、多任务环境&#34;&gt;&lt;a href=&#34;#Linux的多用户、多任务环境&#34; class=&#34;headerlink&#34; title=&#34;Linux的多用户、多任务环境&#34;&gt;&lt;/a&gt;Linux的多用户、多任务环境&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;多人环境&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Linux允许不同的人使用，而且每个人都有特殊的权限，只有root有至高无上的权力&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多任务行为&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;多项工作都是由一个CPU来处理，也是将多个命令触发为系统进程PID，而这些程序若同时被触发，一个CPU就要同时负责许多工作，这就是指多任务&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多重登录环境的7个基本终端窗口&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;在Linux中，默认提供了6个命令行界面登录窗口，以及一个图形界面，可以使用alt+F1…F7键来切换不同的终端界面，而且每个终端界面的登陆这还可以是不同的人。再某个程序死掉的时候，这非常有用&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;特殊的程序管理行为&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Linux几乎不会死机，因为它可以在任何时候，删掉将被困住的程序，然后重新执行该程序而不用重新开机&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;bash环境下的作业管理（job  control）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;我们登录bash之后，就是获取一个名为bash的PID，在这个环境下所执行的其他命令，就是子程序&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;多用户、多任务的系统资源分配问题&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;多用户、多任务确实有很多好处，但因为用户越来越多，将导致管理上的问题。当用户达到一定的人数后，通常您的机器便需要升级了，因为CPU的运算与RAM的大小可鞥你会不足以应付日常的工作。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;作业管理：-amp-、ctrl-z、jobs、fg、bg、kill&#34;&gt;&lt;a href=&#34;#作业管理：-amp-、ctrl-z、jobs、fg、bg、kill&#34; class=&#34;headerlink&#34; title=&#34;作业管理：&amp;amp;、ctrl -z、jobs、fg、bg、kill&#34;&gt;&lt;/a&gt;作业管理：&amp;amp;、ctrl -z、jobs、fg、bg、kill&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;作业管理是在bash环境下使用的；就是当我们登录系统获取bash shell之后，在单一终端界面下，同时管理多个作业；就如我们登录bash后，想同时复制文件、进行数据搜索、进行编译，还可以编写vi程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.直接将命令放到后台执行的&amp;amp;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;后台与前台：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/91f9e4b459c7d7b9a45ccbb661a50673&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/eb356a75a2b15960b4eb6c01b25d6829&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.将当前作业放到后台暂停：Ctrl-z&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/11ce5f1279e46dc9783d750d65278d87&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.观察当前后台作业状态：jobs&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/b421889fc72b847aa30b1a20ea09ec14&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.将后台作业拿到前台处理：fg&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/e78fd2a67867d459b8394ca73a08c54d&#34;&gt;&lt;/p&gt;
&lt;p&gt;5.让作业在后台进行：bg&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/cc9903484300f958dd770b43acf138ba&#34;&gt;&lt;/p&gt;
&lt;p&gt;6.管理后台作业：kill&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;这个信号通常用在强制一个不正常的作业的情况&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/65fc8cc3ec84c64bb79ac42de7a263ea&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;进程管理&#34;&gt;&lt;a href=&#34;#进程管理&#34; class=&#34;headerlink&#34; title=&#34;进程管理&#34;&gt;&lt;/a&gt;进程管理&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;进程管理的重要性：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/0e29224b4c991dae9878cee0c139153b&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;进程的观察&#34;&gt;&lt;a href=&#34;#进程的观察&#34; class=&#34;headerlink&#34; title=&#34;进程的观察&#34;&gt;&lt;/a&gt;进程的观察&lt;/h3&gt;&lt;p&gt;1.ps&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/843b2eac4df94ba2aefc44199de295c9&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/d8158630d84f02e6a992291c8dcb45f0&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/1ad41691a4f24a71d427dba9830844a7&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;范例二显示项目表示的意义：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/9f0f6cbd740c245c57596b3d5697e0b0&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.top&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/ffcc3058eb47c40ac60e7ddd5abeb5a8&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/1eb6b645b9b15b8b1c093f699768ba12&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/ca19b079fa41e2025f7010db6d0dae73&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;top进程可以持续检测整个系统的进程工作状态&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进程使用的资源情况&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/56eef4a065c27204c4a93471d35ef8df&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.pastree&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/3e4349061c7637f394f6463fbb159831&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/b11e3507071461999343d06e14bb93c2&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;直接输入pstree可以查到进程的关联性，最好直接加上-A使用；如果子进程死掉或者总是删不掉子进程，用pstree查找父进程&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;进程的删除&#34;&gt;&lt;a href=&#34;#进程的删除&#34; class=&#34;headerlink&#34; title=&#34;进程的删除&#34;&gt;&lt;/a&gt;进程的删除&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;主要信号代号与名臣的对应集内容&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/6367962d64562b31fab6e68fcb54ccec&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;kill可以帮我们将信号传送给某个作业或者是某个PID，kill后面直接加数字与加上%的情况是不同的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/c8f4f353f7ee8506e92b06176965126d&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用killall，可直接把SIGHUP信号给syslog进程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/6a15b3997ee3193fc3f3002d5c7657b5&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;系统资源的观察&#34;&gt;&lt;a href=&#34;#系统资源的观察&#34; class=&#34;headerlink&#34; title=&#34;系统资源的观察&#34;&gt;&lt;/a&gt;系统资源的观察&lt;/h3&gt;&lt;p&gt;1.free&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/d17d448937837a1f979fc41daa982c37&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Men行显示物理内存量，Swap是虚拟内存量，total是总量，used是已用的量，free是剩余可用的量，后面的shared/buffers/cached是在已用的量中，用来进行缓冲及缓存&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2.uname&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/f056c11c8b4202cd68c9c15ceaab0e9c&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;uname可以列出当前系统的核心版本，主要硬件平台以及CPU类型等信息；例如范一，Linux主机使用的核心名称为linux,而主机名称为linux site，核心的版本为2.6.12~1.1398_FC4，该核心版本建立的日期为2005/7/15，适用的硬件平台为i386以上等级的硬件平台&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;3.uptime&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用于显示当前系统已开机时间&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/3f2a572985ffab198631f2226cdfdcd2&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.netstat&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;常用在网络的监控方面，netstat的输出分为两部分，上面是网络接口相关的联机，下方则是与unix进程有关的项目&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/a8ef73c8237bb87586c839fc488419de&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/aa9154ee1d08cf23b8a445f96deff1df&#34;&gt;&lt;/p&gt;
&lt;p&gt;5.dmesg&lt;/p&gt;
&lt;p&gt;** 查看CPU的形式、硬盘、光盘型号及硬盘分区表；如果消息太多，可加入管道命令| more 来使画面暂停 **&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/e0f7c2f9aa97e915bedd4348438ced9e&#34;&gt;&lt;/p&gt;
&lt;p&gt;6.sar&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;用于检测主机的资源状态，然后绘制为图表&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/9504fd6a2bd141c98be575a21872189b&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;进程的执行顺序&#34;&gt;&lt;a href=&#34;#进程的执行顺序&#34; class=&#34;headerlink&#34; title=&#34;进程的执行顺序&#34;&gt;&lt;/a&gt;进程的执行顺序&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/fd535725adcfab15276e67118b7c0547&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/9014501717e9ba94a40f50fe1bc51fe3&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;nice使用于调整进程的执行优先级；renice用于调整nice的值&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;特殊文件与进程&#34;&gt;&lt;a href=&#34;#特殊文件与进程&#34; class=&#34;headerlink&#34; title=&#34;特殊文件与进程&#34;&gt;&lt;/a&gt;特殊文件与进程&lt;/h2&gt;&lt;h3 id=&#34;SUID-SGID-SBIT的概念&#34;&gt;&lt;a href=&#34;#SUID-SGID-SBIT的概念&#34; class=&#34;headerlink&#34; title=&#34;SUID/SGID/SBIT的概念&#34;&gt;&lt;/a&gt;SUID/SGID/SBIT的概念&lt;/h3&gt;&lt;p&gt;关于SUID的执行：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/a0621cadb2378f5c229693d4b9eb7b20&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当用户触发的SUID的进程中，有效用户会变成SUID命令的进程拥有者&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;proc-的意义&#34;&gt;&lt;a href=&#34;#proc-的意义&#34; class=&#34;headerlink&#34; title=&#34;/proc/*的意义&#34;&gt;&lt;/a&gt;/proc/*的意义&lt;/h3&gt;&lt;p&gt;*&lt;em&gt;内存中的数据都写入到/proc/&lt;em&gt;目录&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/0abd5a28738feddef87d73e51a52ae26&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/a616b0ad761569a144da1d70aeec6c70&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/29e6ce1ac7e423ede6df2d715ed82099&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;查询已打开的文件或已执行进程打开的文件&#34;&gt;&lt;a href=&#34;#查询已打开的文件或已执行进程打开的文件&#34; class=&#34;headerlink&#34; title=&#34;查询已打开的文件或已执行进程打开的文件&#34;&gt;&lt;/a&gt;查询已打开的文件或已执行进程打开的文件&lt;/h3&gt;&lt;p&gt;1.fuser&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查询当前那个进程在使用这台设备；是由文件或设备去找出使用该文件或设备的进程&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/573121660b6fad1d2a7d5193fd7f647b&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.Isof&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查询某个进程打开或使用的文件与设备&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/7fe085ffad08f9416af3f7cfd59c44f5&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/f0bfcc63a2e96162f1fc422f4d33c86a&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.pidof&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通过pidof命令，并且配合ps  aux与正则表达式，就可以很轻松地找到想要的进程信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/660abbb18c8a0963dd69d77d48ebe19e&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://theprofessor249.github.io/2021/07/07/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86%20%20%20%E5%AD%A6%E4%B9%A0Shell%E5%92%8CShell%E8%84%9A%E6%9C%AC/</guid>
            <title>第三部分   学习Shell和Shell脚本</title>
            <link>https://theprofessor249.github.io/2021/07/07/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86%20%20%20%E5%AD%A6%E4%B9%A0Shell%E5%92%8CShell%E8%84%9A%E6%9C%AC/</link>
            <pubDate>Wed, 07 Jul 2021 09:11:40 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;&#34;&gt;&lt;a href=&#34;#&#34; class=&#34;headerlink&#34; title=&#34;&#34;&gt;&lt;/a&gt;&lt;/h1&gt;&lt;h1 id=&#34;vi文字处理器&#34;&gt;&lt;a href=&#34;#vi文字处理器&#34; class=&#34;headerlink&#34; title=&#34;vi文字处理器&#34;&gt;&lt;/a&gt;vi文字处理器&lt;/h1&gt;&lt;h2 id=&#34;Vi与vim&#34;&gt;&lt;a href=&#34;#Vi与vim&#34; class=&#34;headerlink&#34; title=&#34;Vi与vim&#34;&gt;&lt;/a&gt;Vi与vim&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;使用文字模式来处理Linux的系统设置问题，不仅可以容易地了解到Linux系统中，使用文字编辑器来编辑Linux参数设置文件。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;vi是老式的文字处理器，功能很齐全。对于程序开发人员很好用，vim是一个程序开发工具而不是文字处理软件。因为vim里加入了很多附加的功能，如支持规范表达法的搜索架构、多文件编辑、块复制。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;vi的使用&#34;&gt;&lt;a href=&#34;#vi的使用&#34; class=&#34;headerlink&#34; title=&#34;vi的使用&#34;&gt;&lt;/a&gt;vi的使用&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;一般模式、编辑模式、命令行命令模式&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;一般模式：&lt;strong&gt;可以使用“上下左右”键来移动光标，可以使用删除字符或删除整行，可以使用复制、粘贴来处理文件数据&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;编辑模式：按下上述字母后，画面的左下方会出现“INSERT”或“REPLACE”的字样，才&lt;strong&gt;可以输入任何字到文件中，如果要回到一般模式时，则必须要按下Esc键才可退出编辑模式&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;命令行命令模式：&lt;strong&gt;输入“：或/或？&lt;/strong&gt;”就可以将光标移到最下面的那一行，在这个模式中，您&lt;strong&gt;可以搜索数据，而且读取、存盘、大量删除字符、离开vi、显示行号等操作&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs63kjplg0j30d9082abj.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;简单执行范例&#34;&gt;&lt;a href=&#34;#简单执行范例&#34; class=&#34;headerlink&#34; title=&#34;简单执行范例&#34;&gt;&lt;/a&gt;简单执行范例&lt;/h3&gt;&lt;p&gt;1.使用vi进入一般模式&lt;/p&gt;
&lt;p&gt;vi test.txt&lt;/p&gt;
&lt;p&gt;2.按下i进入编辑模式，开始编辑文字&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I、o、a&lt;/strong&gt;,可以发现在左下角会出现–INSERT–，意味着可以输入任意字符，键盘上除了Esc这个按键之外，其他按键都可以视作为一般的输入按钮&lt;/p&gt;
&lt;p&gt;3.按下【Esc】键回到一般模式&lt;/p&gt;
&lt;p&gt;4.在一般模式中按下:wq存储后离开vi&lt;/p&gt;
&lt;h3 id=&#34;命令行内容说明&#34;&gt;&lt;a href=&#34;#命令行内容说明&#34; class=&#34;headerlink&#34; title=&#34;命令行内容说明&#34;&gt;&lt;/a&gt;命令行内容说明&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;一般模式&lt;br&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs63qcme7nj30kq04o75v.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/be70dd4f37983a9dc34d3d34186d2314&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/f3b6902891dee70dad0f3127be15f735&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/aff76fed52058823c4445c3e58d5f9d9&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/28656f3faf2df35255dd72ffea848c6a&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/3b4fad79b6c38b5181dc903205d883c6&#34;&gt;&lt;blockquote&gt;
&lt;p&gt;ctrl  +  f：屏幕向下移动一页，相当于Page  Down按键&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Ctrl  +  b：屏幕向上移动一页，相当于Page  Up按键&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;0         ：移动到这一行的最前面字符处&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;$         ：移动到这一行的最后面字符处&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;G         ：移动到这个文件的最后一行        &lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;gg        ：移动到文件的第一行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;n《Enter》  ：n为数字，光标向下移动n行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;/word     ：从光标向下寻找一个名为word的字符串&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;n1、n2s/word1/word2/g：n1与n2为数字，在第n1与n2行之间寻找word1这个字符串，并将该字符串替换为word2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;x、X       ：x为向后删除一个字符，X为向前删除一个字符&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;dd        ：删除光标所在的那一整行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;ndd       ：n为数字，从光标位置开始，删除向下n行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;yy        ：复制光标所在的那一行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;nyy       ：复制光标所在的向下n行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;p、P       ：p为将已复制的数据粘贴到光标的下一行，P为贴在光标上一行&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;u         ：复原前一个操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;ctrl  +  r：重做上一个操作&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;编辑模式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/783775d1f9f4593adca0d834c74b697e&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;i、I       ：i为从当前光标所在处插入，I为在当前所在行的第一个非空格符处开始插入&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;a、A       ：a为从当前光标所在的下一个字符处开始插入，A为从光标所在行的最后一个字符处开始插入&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;r、R       ：r会替换光标所在的哪一个字符；R会一直替换光标所在的文字，直到按下Esc键为止&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;命令行命令模式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/fc4f797df47360c697e0bf9fd4a1b1b0&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;：w       ：将编辑的数据写入硬盘文件中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;：q       ：离开vi&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;：wq      ：存储后离开      &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;案例练习&#34;&gt;&lt;a href=&#34;#案例练习&#34; class=&#34;headerlink&#34; title=&#34;案例练习&#34;&gt;&lt;/a&gt;案例练习&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs854jjffij30mo0kqq8g.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;文件的恢复与暂存盘&#34;&gt;&lt;a href=&#34;#文件的恢复与暂存盘&#34; class=&#34;headerlink&#34; title=&#34;文件的恢复与暂存盘&#34;&gt;&lt;/a&gt;文件的恢复与暂存盘&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;当我们编辑一个文件时，假设名称为/tmp/passwd，那么在这个/tmp中就会有一个临时文件，文件名为/tmp/.passwd.swp,这是一个隐藏文件，我们所进行的一些修改，都会暂时存在该文件中，如果在文件修改过程中，系统死机，那么下次再重新vi /tmp/passwd时，系统就会告诉你，是否需要恢复成修改过程中的模样？如果按下R，就可以将数据恢复到修改过程的样子，而不是源文件&lt;/strong&gt;、&lt;br&gt;&lt;strong&gt;再/tmp中执行ls  -al 时，发现有两个文件，文件名分别为passwd与.passwd.swp。&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;（1）可能有人在编辑这个文件；（2）之前你在编辑这个文件时，因为某些未知因素导致vi程序中断，则该临时文件就会存在。如果是状态（2），则此时可以将该/.passwd.swp文件删除，或者直接vi /tmp/passwd,在vi询问是否恢复时，选择恢复，然后存储更新/tmp/passwd，之后再将这个/tmp/.passwd.swp文件删除即可。如果不删除的话，那么每次编辑这个文件时，都会告诉你该文件有问题&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;vim的附加功能&#34;&gt;&lt;a href=&#34;#vim的附加功能&#34; class=&#34;headerlink&#34; title=&#34;vim的附加功能&#34;&gt;&lt;/a&gt;vim的附加功能&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;vim具有颜色显示功能，并且还支持许多程序语法，当使用vim编辑程序时，vim可帮你直接进行“程序调试debug”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs8553ebrdj30my0c4dii.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;快选择&#34;&gt;&lt;a href=&#34;#快选择&#34; class=&#34;headerlink&#34; title=&#34;快选择&#34;&gt;&lt;/a&gt;快选择&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs855ftam8j30lu0c441d.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;多文件编辑&#34;&gt;&lt;a href=&#34;#多文件编辑&#34; class=&#34;headerlink&#34; title=&#34;多文件编辑&#34;&gt;&lt;/a&gt;多文件编辑&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs856k5vqgj30kt0kh41f.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;多窗口功能&#34;&gt;&lt;a href=&#34;#多窗口功能&#34; class=&#34;headerlink&#34; title=&#34;多窗口功能&#34;&gt;&lt;/a&gt;多窗口功能&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs857wr1tmj30kt07n75w.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;vim环境设置&#34;&gt;&lt;a href=&#34;#vim环境设置&#34; class=&#34;headerlink&#34; title=&#34;vim环境设置&#34;&gt;&lt;/a&gt;vim环境设置&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;如果以vim软件来搜索一个文件内部的某个字符串时，这个字符串会被反白，而下次再次以vim编辑这个文件时，该搜索的字符串还是存在。当编辑其他文件时，如果其他文件中也存在这个字符串，也会主动反白显示。另外，当重复编辑同一个文件时，第二次进入该文件，光标竟然就在上次离开的哪一行上&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;因为vim会主动将曾经做过的行为记录下来，以便下次可以轻松工作。那个记录动作的文件就是：~/.viminfo。每个人的家目录都应该有这个文件。这个文件是自动产生的，不必自行建立。在vim里所做过的操作，可以在这个文件内部查询到&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;vim的环境设置：在一般模式时输入：set  all来查看&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs858ka7avj30ig0kbn38.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;使用vi进行编辑的练习&#34;&gt;&lt;a href=&#34;#使用vi进行编辑的练习&#34; class=&#34;headerlink&#34; title=&#34;使用vi进行编辑的练习&#34;&gt;&lt;/a&gt;使用vi进行编辑的练习&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs858ka7avj30ig0kbn38.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;DOS与Linux换行符&#34;&gt;&lt;a href=&#34;#DOS与Linux换行符&#34; class=&#34;headerlink&#34; title=&#34;DOS与Linux换行符&#34;&gt;&lt;/a&gt;DOS与Linux换行符&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;在DOS使用的换行符为^M$,我们称为CR与LF两个符号。而在Linux中，则仅有LF（$）这个换行符。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs858vh4mej30k20bfdir.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;本章与LPI的关系&#34;&gt;&lt;a href=&#34;#本章与LPI的关系&#34; class=&#34;headerlink&#34; title=&#34;本章与LPI的关系&#34;&gt;&lt;/a&gt;本章与LPI的关系&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;注意事项：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gs85astrx7j30kb05b3yz.jpg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;认识Bash-Shell&#34;&gt;&lt;a href=&#34;#认识Bash-Shell&#34; class=&#34;headerlink&#34; title=&#34;认识Bash  Shell&#34;&gt;&lt;/a&gt;认识Bash  Shell&lt;/h1&gt;&lt;h2 id=&#34;Bash-Shell&#34;&gt;&lt;a href=&#34;#Bash-Shell&#34; class=&#34;headerlink&#34; title=&#34;Bash Shell&#34;&gt;&lt;/a&gt;Bash Shell&lt;/h2&gt;&lt;h3 id=&#34;什么是Shell&#34;&gt;&lt;a href=&#34;#什么是Shell&#34; class=&#34;headerlink&#34; title=&#34;什么是Shell&#34;&gt;&lt;/a&gt;什么是Shell&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs85b3r880j30k802djrw.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs85bbduhoj30e90hzq4u.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;通常，替我们工作的是硬件，而控制硬件的是核心。用户是利用Shell控制一些内核提供的工具，来控制硬件替我们正确工作。由于我们听不懂人类语言，而人类也没办法直接记住内核的语言，所以两者的沟通就要通过Shell来支持&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;系统的shell与-etc-shells功能&#34;&gt;&lt;a href=&#34;#系统的shell与-etc-shells功能&#34; class=&#34;headerlink&#34; title=&#34;系统的shell与/etc/shells功能&#34;&gt;&lt;/a&gt;系统的shell与/etc/shells功能&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;目前至少有下面几个可用的shells:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/c8e59f2ad4d82c3fc3ccaca3395c9fca&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;Bash-Shell-的功能&#34;&gt;&lt;a href=&#34;#Bash-Shell-的功能&#34; class=&#34;headerlink&#34; title=&#34;Bash Shell 的功能&#34;&gt;&lt;/a&gt;Bash Shell 的功能&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;命令记忆能力&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;只要在命令行按上下键，就可以找到前一个输入的命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;命令与文件补全功能&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;【tab】接在一串命令的第一个字的后面，则为命令补全&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;【tab】接在一串命令的第二个字以后时，则为文件补齐&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;命令别名设置功能&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;在命令行输入alias，就可以知道当前的命令名有哪些了。也可以直接执行命令来设置别名：alias  lm = ‘ls  -al’&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;作业控制、前台、后台控制&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;可以单一登录的环境中，达到多任务的目的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Shell scripts的强大功能&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;可以将日常连续命令写成一个文件，该文件可以通过对话交互方式来进行主机的检测。也可以通过shell提供的环境变量及相关命令来进行设计&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;通配符&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;除了完整的字符串之外，bash还支持许多通配符来帮助用户查询与执行命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;Bash-Shell的内置命令：type&#34;&gt;&lt;a href=&#34;#Bash-Shell的内置命令：type&#34; class=&#34;headerlink&#34; title=&#34;Bash Shell的内置命令：type&#34;&gt;&lt;/a&gt;Bash Shell的内置命令：type&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/9d402ed527c82c219e3ee22578415338&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;执行命令&#34;&gt;&lt;a href=&#34;#执行命令&#34; class=&#34;headerlink&#34; title=&#34;执行命令&#34;&gt;&lt;/a&gt;执行命令&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/b3de6c937e8dab2326f8676e8a902891&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/6b0bf2ff9813838ae209fde29d74add2&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Shell的变量功能&#34;&gt;&lt;a href=&#34;#Shell的变量功能&#34; class=&#34;headerlink&#34; title=&#34;Shell的变量功能&#34;&gt;&lt;/a&gt;Shell的变量功能&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;变量：变量就是以一组文字或字符，来替换一些设置或者是一串保留的数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ls命令应该要用/bin/ls来执行，那为什么在任意路径下都可以执行ls，而不需要指定路径？这是因为系统已经默认了一些搜索路径PATH，所以当您执行一些命令的时候，系统就会根据据该PATH的设置来搜索命令，这个PATH就是一个变量，可以使用echo命令显示变量&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;变量的获取与设置：echo、变量设置规则、unset&#34;&gt;&lt;a href=&#34;#变量的获取与设置：echo、变量设置规则、unset&#34; class=&#34;headerlink&#34; title=&#34;变量的获取与设置：echo、变量设置规则、unset&#34;&gt;&lt;/a&gt;变量的获取与设置：echo、变量设置规则、unset&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/99594b1c8554311115c19148eab7ab68&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/f1f8473ad693c89ecef7295de38fbf48&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/fd5796399d45c7ab93f2ca0932b027df&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/64449865936cf910a33222a0cf7d509a&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在执行命令的过程中，引号（’）代表的含义是什么？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;在一串命令中，’之内的命令将先执行，而其执行出来的结果将作为外部输入信息.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;变量的用途&#34;&gt;&lt;a href=&#34;#变量的用途&#34; class=&#34;headerlink&#34; title=&#34;变量的用途&#34;&gt;&lt;/a&gt;变量的用途&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;PATH变量是我们在执行命令时所需要具备的命令搜索目录数据，没有它，就要使用绝对路径来执行命令&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;案例一：在UNIX中，要进行一些数值模式的仿真工作。由于数据量太大，为了怕日后忘记这个目录的内容与主要意义，所以文件名都取得很长，在执行模式的过程中，常切换目录，非常麻烦。所以我就设置几行目录名称成为一个4个字符的变量，只要输入“ cd  $VAR1 ” 命令，马上就移动到该路径下&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/eca28b7266b5e7f3d8a45c1938c8a0fd&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;环境变量的功能&#34;&gt;&lt;a href=&#34;#环境变量的功能&#34; class=&#34;headerlink&#34; title=&#34;环境变量的功能&#34;&gt;&lt;/a&gt;环境变量的功能&lt;/h3&gt;&lt;p&gt;1.环境变量的说明：env （查看变量）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/8fbb5f2ca68531ddfad0ec1be9fc30be&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/b9ff66241ab3f77b08d4b63217148b56&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.其他所有的变量说明：set&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/afbbc605cdb561f02ab27dd4012b84ae&#34;&gt;&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;上面比较重要的变量&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PSI：（提示符的设置）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;下面列出了FC4的环境下，默认的bash的PS1变量内的特殊符号所代表的含义：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/84c9f832edc099b7da47ea61dba27f49&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$：（关于shell的PID）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当前这个shell的进程号。即为PID&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;？：（上一个执行命令的回传码）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上一个执行的命令所回传的值；当我们执行某些命令时，这些命令都会回传一个执行后的代码。如果成功地执行该命令，则会回传一个0值，如果执行过程发生错误，就会回传错误代码，通常以非0值来替换&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/eef78cabfa9476eabc218158887c77af&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OSTYPE、HOSTTYPE、MACHYTYPE：（主机硬件与核心的等级）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;他们与程序的安装有关。在安装软件的时候，需要通过编译器将源码编译为二进制文件。但是，我们可以针对硬件设置进行编译的优化，就可以用到这些参数。例如当前主要的版本都是针对i386即最低等级的机器进行优化，这样才能安装在较高级的机器上，如果以686机型来优化，那么，就无法向下兼容。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自定义变量转成环境变量：export&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;export  变量：在引用他人的文件或其他程序时，如果忘记设置export的话，那么不同文件中的相同变量值，将需要一再重复设置。所以，只要在头一个文件使用export，那么后续的文件引用时，将会把该变量内容读进来。如果仅下达export而没有变量，此时将会把所有的环境变量显示出来。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/be1e8d76162cb1b546a3f28251f61dd9&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;语系文件的变量&#34;&gt;&lt;a href=&#34;#语系文件的变量&#34; class=&#34;headerlink&#34; title=&#34;语系文件的变量&#34;&gt;&lt;/a&gt;语系文件的变量&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;当我们使用man command的方式去查询某个数据的帮助文件时，该帮助文件的内容可能会因为我们使用的语系，而产生一些乱码。另外，利用ls查询文件的时间时，也可能会有乱码出现在时间部分。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/74c2dbd13d61322e77dff93d85eecd11&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/80a0bae6ebcd312b433b71badd2ad6cb&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;变量的有效范围&#34;&gt;&lt;a href=&#34;#变量的有效范围&#34; class=&#34;headerlink&#34; title=&#34;变量的有效范围&#34;&gt;&lt;/a&gt;变量的有效范围&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;如果在运行程序的时候，存在父程序与子程序的不同程序关系时，则变量可否被引用是与export有关的，被export后的变量，可以称它为环境变量。环境变量可以被子程序所引用，但是，其他的自定义变量内容就不会存在于子程序中。我们自行设置的变量，只在当前shell环境中存在，在子程序中将不会存在此变量，除非使用export将自定义变量变成环境变量。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;环境变量可以让子程序继续引用的原因：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/b7c1f43bbd37d8753e399f29c1738fe9&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;变量键盘读取、数组与声明：read、array、declare&#34;&gt;&lt;a href=&#34;#变量键盘读取、数组与声明：read、array、declare&#34; class=&#34;headerlink&#34; title=&#34;变量键盘读取、数组与声明：read、array、declare&#34;&gt;&lt;/a&gt;变量键盘读取、数组与声明：read、array、declare&lt;/h3&gt;&lt;p&gt;1.read：要读取来自键盘输入的变量&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/d64b4fa434dd81c73e81a87c1e9d49a1&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.declare/typeset:声明变量的属性&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/f583bc4a0059685df86912a014cf405a&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.array：使用数组来声明一些变量&lt;/p&gt;
&lt;p&gt;数组的设置方式：var [index] = content&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/9b13c22737f96c5b296872f440936b83&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;与文件系统及程序的限制关系：ulimit&#34;&gt;&lt;a href=&#34;#与文件系统及程序的限制关系：ulimit&#34; class=&#34;headerlink&#34; title=&#34;与文件系统及程序的限制关系：ulimit&#34;&gt;&lt;/a&gt;与文件系统及程序的限制关系：ulimit&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;为了防止系统不死机，我们的Bash是可以限制用户的某些系统资源的，包括可以打开的文件数量、可以使用的CPU实践、可以使用的内存总量&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/bae0d67f9dcc5668ee7b429c937ce6d2&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;附加的变量设置功能&#34;&gt;&lt;a href=&#34;#附加的变量设置功能&#34; class=&#34;headerlink&#34; title=&#34;附加的变量设置功能&#34;&gt;&lt;/a&gt;附加的变量设置功能&lt;/h3&gt;&lt;p&gt;获取两种变量的方法：1.echo  $HOME;   2.echo  ${HOME}&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/4c9a3447021b1e9286d4763e572271a6&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;命令别名与历史命令&#34;&gt;&lt;a href=&#34;#命令别名与历史命令&#34; class=&#34;headerlink&#34; title=&#34;命令别名与历史命令&#34;&gt;&lt;/a&gt;命令别名与历史命令&lt;/h2&gt;&lt;h3 id=&#34;命令别名设置：alias、unalias&#34;&gt;&lt;a href=&#34;#命令别名设置：alias、unalias&#34; class=&#34;headerlink&#34; title=&#34;命令别名设置：alias、unalias&#34;&gt;&lt;/a&gt;命令别名设置：alias、unalias&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;执行命令：&lt;/strong&gt; alias  ls=’ls -l | more’&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;查询当前命令别名：&lt;/strong&gt; alias&lt;/p&gt;
&lt;h3 id=&#34;历史命令：history&#34;&gt;&lt;a href=&#34;#历史命令：history&#34; class=&#34;headerlink&#34; title=&#34;历史命令：history&#34;&gt;&lt;/a&gt;历史命令：history&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/7059f9120b1d8e3fd6bcd668c4cb022e&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/e5fb092dc2441c9bc8b6591243831e00&#34;&gt;&lt;/p&gt;
&lt;p&gt;相关的功能：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/10de0eb917aaab86c3f3ec49fb91c9b6&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Bash-Shell使用环境&#34;&gt;&lt;a href=&#34;#Bash-Shell使用环境&#34; class=&#34;headerlink&#34; title=&#34;Bash Shell使用环境&#34;&gt;&lt;/a&gt;Bash Shell使用环境&lt;/h2&gt;&lt;h3 id=&#34;绝对路径与相对路径&#34;&gt;&lt;a href=&#34;#绝对路径与相对路径&#34; class=&#34;headerlink&#34; title=&#34;绝对路径与相对路径&#34;&gt;&lt;/a&gt;绝对路径与相对路径&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;绝对路径：是指以根目录开始一直写到文件的一种命令方式&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;当前在/home/test这个test用户的家目录中，想要看看里面的.bashrc文件的数据，使用more命令，而这个命令在/bin/more中，执行命令的正确方法为：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;/bin/more  .bashrc&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;相对路径：.与..分别代表这个路径与上层路径&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;我所在目录为/home/test，然后我要使用/bin/more执行文件，并且使用相对路径的方法&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;../../bin/more  .bashre&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;登录消息显示数据-etc-issue、-etc-motd&#34;&gt;&lt;a href=&#34;#登录消息显示数据-etc-issue、-etc-motd&#34; class=&#34;headerlink&#34; title=&#34;登录消息显示数据:/etc/issue、/etc/motd&#34;&gt;&lt;/a&gt;登录消息显示数据:/etc/issue、/etc/motd&lt;/h3&gt;&lt;p&gt;1./etc/issue&lt;/p&gt;
&lt;p&gt;终端接口（tty1-tty6）登录的时候，会有几行提示的字符串&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/219de7a50262d2647d2c238b0c2319f7&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/35b52a990e06ba96b65c456443860f71&#34;&gt;&lt;/p&gt;
&lt;p&gt;2./etc/motd&lt;/p&gt;
&lt;p&gt;如果想让用户登录后获取一些消息，可以将消息加入/etc/motd中，当登录后，告诉登陆者，系统将会在某个固定时间进行维护工作&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/213c2e7089a80662252c2ba700857c6b&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;环境设置文件：bashrc、-bashrc、-profile、profile…、-etc-inputrc、source&#34;&gt;&lt;a href=&#34;#环境设置文件：bashrc、-bashrc、-profile、profile…、-etc-inputrc、source&#34; class=&#34;headerlink&#34; title=&#34;环境设置文件：bashrc、/.bashrc、/.profile、profile…、/etc/inputrc、source&#34;&gt;&lt;/a&gt;环境设置文件：bashrc、&lt;del&gt;/.bashrc、&lt;/del&gt;/.profile、profile…、/etc/inputrc、source&lt;/h3&gt;&lt;p&gt;1.系统设置值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/etc/sysconfig/i18n&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;语系是由i18n维护的，而FC4默认的系统语系设置文件就在/etc/sysconfig/i18n中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/0d2d438a6e49d4579f051168504b2dda&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;/etc/profile&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;这个文件设置了几个重要的变量，例如“PATH、USER、MAIL、HOSTNAME、HISTSIZE、umask等，同时也确定/etc/inputrc这个针对键盘热键设置的文件的数数据内容。可以在这里设置总体的PATH等信息。同时，这个文件也规划出/etc/profile.d及/etc/inputrc这两个目录与文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;/etc/bashrc&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;这个文件确定umask的功能，同时也确定了提示符的内容&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;/etc/profile.d/*.sh&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;针对bash及C-shell规范了一些数据。这个目录中针对颜色、语系、vim及which等命令进行了一些附加设置&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;/etc/man.config&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;规定了使用man的时候，该去哪里查看数据的路径设置；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;这就是系统在设置时常用的文件。通常设置完这几个文件之后，都要先注销再登录之后，设置才生效&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2.个人设置值&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;del&gt;/.bash_profile,&lt;/del&gt;/.bash_login,~/.profile&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;3个文件只要一个，一般默认是以&lt;del&gt;/.bash_profile文件名存在。这个文件可以定义个性化的路径PATH与环境变量；bash启动时，会先去读取&lt;/del&gt;/.bash_profile,找不到时，就去读取&lt;del&gt;/.bash_login,然后才是&lt;/del&gt;/.profile&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;~/.bashrc&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;个性化设置都会写在这里。例如命令别名、路径等；在每次执行shell脚本的时候，都会重新读取这个文件，所以时最完整的，而~/.bash_profile则只有登录时才读取一次&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;~/.bash_history&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;历史命令就记录再这里。而这个文件能够记录多少数据，则与HISTSIZE变量有关。每次登录bash后，bash会先读取这个文件，将所有的历史命令读入内存，因此，当我们登录bash后，就可以查知上次使用过那些命令&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;~/.bash_logout&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;这个文件记录”当我注销bash后，系统再帮我做完什么操作后才离开&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;登录bash的时候，这些设置文件是如何读取的&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/3d9e0e7ecbefd76b0b7d1be6d318ca91&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.登录shell与非登录shell&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所谓登录shell，指的是当用户登录Linux系统时，所取得的那个shell；当登录后，再去执行其他shell时，其他shell就是非登录shell。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;登录与非登录shell的差异:当登录Linux，即是取得的登陆shell时，会读取&lt;del&gt;/.bash_profile、&lt;/del&gt;/bash_login、&lt;del&gt;/.profile。至于取得登录shell后继续操作的其他非登录shell，读取的就仅有&lt;/del&gt;/.bashrc。而大部分的Linux版本都会将&lt;del&gt;/.bash_profile的内容指到&lt;/del&gt;/.bashrc&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;终端的环境设置：stty、set&#34;&gt;&lt;a href=&#34;#终端的环境设置：stty、set&#34; class=&#34;headerlink&#34; title=&#34;终端的环境设置：stty、set&#34;&gt;&lt;/a&gt;终端的环境设置：stty、set&lt;/h3&gt;&lt;p&gt;1.stty设置终端的输入按键代表的意义&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/ac9ec9f2352455dd269020dc6b0b52df&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.set设置整个命令输出/输入的环境&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/191e334580b7706fa48137b0d4cb6dff&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;通配符与特殊符号&#34;&gt;&lt;a href=&#34;#通配符与特殊符号&#34; class=&#34;headerlink&#34; title=&#34;通配符与特殊符号&#34;&gt;&lt;/a&gt;通配符与特殊符号&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/55340db6a52281e7c910b88c101bd811&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/2aadc6956359b1a67e1d4821e0a7c911&#34;&gt;&lt;/p&gt;
&lt;p&gt;*&lt;em&gt;最常见的就是&lt;/em&gt;、？、【】、’**&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/a8d4b4b55258d94783d4cd3355b509cc&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;数据流重导向&#34;&gt;&lt;a href=&#34;#数据流重导向&#34; class=&#34;headerlink&#34; title=&#34;数据流重导向&#34;&gt;&lt;/a&gt;数据流重导向&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;就是将数据传到其他地方。数据流重导向就是将某个命令执行后应该要出现在屏幕上的数据，传输到其他方，例如文件或者设备&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/e7f5339e64a4962ebf6cf6807981a02b&#34;&gt;&lt;/p&gt;
&lt;p&gt;执行命令时，这个命令可能会通过文件读入数据，经过处理之后，再将数据输出到屏幕&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/c5ae5d2b09ee0390b1c1ae129a5728f0&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/e2249e476bd2d29b0092d6b27132ce89&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/b6c4a2e8c8710a7e704326eb6b475978&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/ca95d809ed6ff3da73f6aa83384602e0&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/dd7b91572fd950e1ba2a9a4a58c6ae8f&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/60749b5c4b7bae7b3a0503096105331a&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;命令执行的判断依据：-、-amp-amp-、&#34;&gt;&lt;a href=&#34;#命令执行的判断依据：-、-amp-amp-、&#34; class=&#34;headerlink&#34; title=&#34;命令执行的判断依据： ;、&amp;amp;&amp;amp;、||&#34;&gt;&lt;/a&gt;命令执行的判断依据： ;、&amp;amp;&amp;amp;、||&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt; ;  :用于执行多次命令&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;sync; sync; shutdown  -h  now&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&amp;amp;&amp;amp;  :当前的命令执行结果为正确（仅有标准输出）时，就可以接着执行后续命令，否则略过&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ls  /vbird   &amp;amp;&amp;amp;  touch   /vbird/test&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt; || ：当前一个命令有错误时，才会执行||后面的命令&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/4178247df710d26addee2a9c8e652b20&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;管道命令（pipe）&#34;&gt;&lt;a href=&#34;#管道命令（pipe）&#34; class=&#34;headerlink&#34; title=&#34;管道命令（pipe）&#34;&gt;&lt;/a&gt;管道命令（pipe）&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;管道命令|仅能处理通过前面一个命令传来的正确信息，也就是标准输出STDOUT的信息，对于标准错误、并没有直接处理的能力&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/26d61af51046bd69f67da7686b02ad68&#34;&gt;&lt;/p&gt;
&lt;p&gt;再每个管道的前后都是命令，后一个命令的输入是前一个命令的输出&lt;/p&gt;
&lt;h3 id=&#34;选取命令：cut、grep&#34;&gt;&lt;a href=&#34;#选取命令：cut、grep&#34; class=&#34;headerlink&#34; title=&#34;选取命令：cut、grep&#34;&gt;&lt;/a&gt;选取命令：cut、grep&lt;/h3&gt;&lt;p&gt;1.cut：可以将一段消息的某段切出来。处理的消息是以行为单位&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/662cd4bf5d2b0a02f94932877b1fa658&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/317cf1d098695ae32cfb061fe6122c03&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.grep：分析一行消息，若其中有所需要的信息，就将该行取出&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/6c626fd66bc650d356b05e468f6d7397&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;排序命令：sort、wc、uniq&#34;&gt;&lt;a href=&#34;#排序命令：sort、wc、uniq&#34; class=&#34;headerlink&#34; title=&#34;排序命令：sort、wc、uniq&#34;&gt;&lt;/a&gt;排序命令：sort、wc、uniq&lt;/h3&gt;&lt;p&gt;1.sort:根据不同的数据类型来排序&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/823f513ebdd8defcdf0bb437bbb94b29&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/bdf95ceff6b17ce4e94f14a0e17f9d52&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.uniq：如果排序完成了，可以将重复的数据仅显示一次&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/d318a443fef67bd8b6f8f9a10ac1dd8f&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.wc：查询文件里有多少字，多少行，多少字符&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/11a070cac063bf3d0ab4e3b31f9ba7b2&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;双向重导向：tee&#34;&gt;&lt;a href=&#34;#双向重导向：tee&#34; class=&#34;headerlink&#34; title=&#34;双向重导向：tee&#34;&gt;&lt;/a&gt;双向重导向：tee&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;将数据流分别送至文件和屏幕：而输出到屏幕的，其实就是stdout，可以让下个命令继续处理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/44ea2ab0fe95548d1ded005cbb7f927e&#34;&gt;&lt;/p&gt;
&lt;p&gt;在命令重导向的时候，如果要将数据发送到文件，屏幕上就不会出现任何数据。如果需要将数据同时显示在屏幕和文件中，这时就要使用tee命令。使用last可以查看这个月份的登录数据，而使用了tee之后，会将数据同时传给下一个命令去执行，也会将数据写last.list文件中&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/6f5d068ad5b0dd0710dcb75f25fddb87&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/6f5d068ad5b0dd0710dcb75f25fddb87&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;字符转换命令：tr、col、join、paste、expand&#34;&gt;&lt;a href=&#34;#字符转换命令：tr、col、join、paste、expand&#34; class=&#34;headerlink&#34; title=&#34;字符转换命令：tr、col、join、paste、expand&#34;&gt;&lt;/a&gt;字符转换命令：tr、col、join、paste、expand&lt;/h3&gt;&lt;p&gt;1.tr：可以用来删除一段消息中的文字，或者是进行文字消息的替换&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/a1d637ac39eb839131a37b619768c6ce&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.col：可以用来将【tab】按键换成空格键&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/d841a31b70bb0fff8eec39c4eb2251ae&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.join：主要是在处理两个文件中，有相同数据的行，将他们加在一起&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/7c39d4abf31fffc56fb090712036e1dc&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.paste：直接将两行贴在一起，且中间以【tab】键隔开&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img04.sogoucdn.com/app/a/100520146/3625a0eacc70d68d714654fdecb6f9d5&#34;&gt;&lt;/p&gt;
&lt;p&gt;5.expend：将【tab】按键转成空格键&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/4134afcb52371e00b6eba901facddf34&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img02.sogoucdn.com/app/a/100520146/c50fe0a6ba9123143f6d5a513978140a&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;拆分命令：split&#34;&gt;&lt;a href=&#34;#拆分命令：split&#34; class=&#34;headerlink&#34; title=&#34;拆分命令：split&#34;&gt;&lt;/a&gt;拆分命令：split&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;如果文件太大，导致无法复制在便携设备中，可以使用split，它可以将一个大文件、根据文件大小或行数来拆分，将大文件拆分为小文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img01.sogoucdn.com/app/a/100520146/1d42d0a6a2c638c32d06cd108adfc928&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;参数代换：xargs&#34;&gt;&lt;a href=&#34;#参数代换：xargs&#34; class=&#34;headerlink&#34; title=&#34;参数代换：xargs&#34;&gt;&lt;/a&gt;参数代换：xargs&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;args则是arguments的意思。这是产生某个命令的参数的意思。xargs可以读入是特定的数据，并且以空格符或换行符作为标识，将stdin的数据分隔成为参数&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://img03.sogoucdn.com/app/a/100520146/ffa1279689d9746783bb27598114874c&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;减号（-）的用途&#34;&gt;&lt;a href=&#34;#减号（-）的用途&#34; class=&#34;headerlink&#34; title=&#34;减号（-）的用途&#34;&gt;&lt;/a&gt;减号（-）的用途&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;在管道命令中，常常会用到一个命令的dtdout作为这次的stdin，某些命令需要用到文件名称来进行处理时，stdin与stdout可以利用减号（-）来替代&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;tar  -cvf  -home   |   tar  -xvf  -&lt;/p&gt;
&lt;h1 id=&#34;第十二章-正则表达式&#34;&gt;&lt;a href=&#34;#第十二章-正则表达式&#34; class=&#34;headerlink&#34; title=&#34;第十二章 正则表达式&#34;&gt;&lt;/a&gt;第十二章 正则表达式&lt;/h1&gt;&lt;h2 id=&#34;简介&#34;&gt;&lt;a href=&#34;#简介&#34; class=&#34;headerlink&#34; title=&#34;简介&#34;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;h3 id=&#34;什么是正则表达式&#34;&gt;&lt;a href=&#34;#什么是正则表达式&#34; class=&#34;headerlink&#34; title=&#34;什么是正则表达式&#34;&gt;&lt;/a&gt;什么是正则表达式&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;正则表达式就是处理字符串的方法，以行为单位进行字符串的处理，通过一些特殊符号的辅助，可以让用户轻松搜索/替换某特定字符串&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;系统管理员使用正则表达式&#34;&gt;&lt;a href=&#34;#系统管理员使用正则表达式&#34; class=&#34;headerlink&#34; title=&#34;系统管理员使用正则表达式&#34;&gt;&lt;/a&gt;系统管理员使用正则表达式&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;系统的错误消息登录文件的内容记载了系统产生的信息，其中包含系统是否被入侵的记录数据，管理员就可以通过正则表达式，将登录信息进行处理，仅取出有问题的信息来进行分析&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;正则表达式的广泛用途&#34;&gt;&lt;a href=&#34;#正则表达式的广泛用途&#34; class=&#34;headerlink&#34; title=&#34;正则表达式的广泛用途&#34;&gt;&lt;/a&gt;正则表达式的广泛用途&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;正则表达式可以让系统管理员更为方便地管理主机，由于正则表达式强大的字符串处理能力，当前有许多软件都支持正则表达式。常见的就是邮件服务器&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;正则表达式与Shell在Linux中的角色定位&#34;&gt;&lt;a href=&#34;#正则表达式与Shell在Linux中的角色定位&#34; class=&#34;headerlink&#34; title=&#34;正则表达式与Shell在Linux中的角色定位&#34;&gt;&lt;/a&gt;正则表达式与Shell在Linux中的角色定位&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;正则表达式是Linux基础中的基础，不论是对系统的认识还是进行系统管理，它都会带来很大的帮助&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;扩展的正则表达式&#34;&gt;&lt;a href=&#34;#扩展的正则表达式&#34; class=&#34;headerlink&#34; title=&#34;扩展的正则表达式&#34;&gt;&lt;/a&gt;扩展的正则表达式&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;正则表达式除了简单的一组字符串处理之外，还可以进行用户组的字符串处理&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;基础正则表达式&#34;&gt;&lt;a href=&#34;#基础正则表达式&#34; class=&#34;headerlink&#34; title=&#34;基础正则表达式&#34;&gt;&lt;/a&gt;基础正则表达式&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;正则表达式是处理字符串的标准表达方式，它需要有支持的工具程序来辅助&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;通过grep选取字符串&#34;&gt;&lt;a href=&#34;#通过grep选取字符串&#34; class=&#34;headerlink&#34; title=&#34;通过grep选取字符串&#34;&gt;&lt;/a&gt;通过grep选取字符串&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grxpyboiayj30k508ydhh.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;grep是很常见也很常用的命令，它最重要的功能就是进行字符串数据的比较，然后将符合用户需求的字符串打印出来；grep除了可以进行文件的数据搜索之外，也常常应用在输入/输出的数据处理中&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.例题一：搜索特定字符串&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;从文件中提取the字符串&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep -vn  ‘the’  regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;取得的the字符串不考虑大小写&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep  -in  ‘the’  regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.例题二：利用【】来搜索集合字符&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;搜索test或taste这两个单词，搜索他们共同的部分&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep  -n  ‘t[ae]st’   regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;如果像搜索oo的字符&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep -n ‘oo’ regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;不想oo前面有g，可利用反向【^】&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep  -n  ‘[^g]oo’   regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;oo前面不想有小写字母&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep -n ‘[^a-z]oo’  regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;取得有数字的行&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep -n ‘[0-9]’  regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.例题三：行首与行尾字符^$&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果想让the只在行首列出&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep  -n ‘^the’ regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;如果想列出开头是小写字母的哪一行&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep -n ‘^[a-z]’  regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;开头不想是英文字母&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep  -n  ‘^[a-zA-Z]’ regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;找出行尾结束为小数点的行&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep -n ‘.$’  regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;找出那行为空白行&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep -n ‘^$’  regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4.例题四：任意一个字符（.）与重复字符（*）&lt;/p&gt;
&lt;p&gt;1.（.）代表绝对一个任意字符&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;找出共有4个字符的g??d&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep -n ‘g..d’  regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2.（*）重复0个或多个前面的RE字符&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;找出至少两个o以上的字符串，就需要&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep -n ‘ooo*’  regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;想要字符串开头与结尾都是g，但是两个g之间仅能至少一个o&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep -n ‘go*g’ regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;*&lt;em&gt;如何得到g…g(.&lt;em&gt;代表零个或多个任意字符)&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep  -n  ‘g.*g’  regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;5.例题五：限定连续重复字符范围{}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要找到两个o的字符串&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep -n ‘o{2}‘   regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;找g后面接2-5个o，然后再接一个g的字符串&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;grep -n ‘go{2,5}g’ regular_express.txt&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;重要特殊字符&#34;&gt;&lt;a href=&#34;#重要特殊字符&#34; class=&#34;headerlink&#34; title=&#34;重要特殊字符&#34;&gt;&lt;/a&gt;重要特殊字符&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d92c0ec29ce.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d92c324770a.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;扩展正则表达式&#34;&gt;&lt;a href=&#34;#扩展正则表达式&#34; class=&#34;headerlink&#34; title=&#34;扩展正则表达式&#34;&gt;&lt;/a&gt;扩展正则表达式&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;/#grep -v ‘^$’  regular_express.txt  |  grep  -v  ‘^#’&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;/#egrep -v ‘^$|^#’  regular_express.txt&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;使用支持扩展型正则表达式的egrep与特殊字符（|）来分隔两组字符串&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grtfm9ndx0j30l90icn14.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;格式化显示：printf&#34;&gt;&lt;a href=&#34;#格式化显示：printf&#34; class=&#34;headerlink&#34; title=&#34;格式化显示：printf&#34;&gt;&lt;/a&gt;格式化显示：printf&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grtfmc8nmoj30n10k2gqf.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grtfmc8nmoj30n10k2gqf.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;sed工具简介&#34;&gt;&lt;a href=&#34;#sed工具简介&#34; class=&#34;headerlink&#34; title=&#34;sed工具简介&#34;&gt;&lt;/a&gt;sed工具简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;sed可以分析标准输入（STDIN）的数据，然后将数据经过处理后，再将它输出到标准输出（STDOUT）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grtfmh3pzlj30j10nhgsf.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grtfmji3oyj30in0e9gpn.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;awk工具简介&#34;&gt;&lt;a href=&#34;#awk工具简介&#34; class=&#34;headerlink&#34; title=&#34;awk工具简介&#34;&gt;&lt;/a&gt;awk工具简介&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;与sed常常用于整行处理相比，awk比较倾向于一行中分成数个字段来处理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grtfmlw7o3j30nd0coadc.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grtfwxngabj30kx09m3z8.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;文件数据比较与显示的相关功能&#34;&gt;&lt;a href=&#34;#文件数据比较与显示的相关功能&#34; class=&#34;headerlink&#34; title=&#34;文件数据比较与显示的相关功能&#34;&gt;&lt;/a&gt;文件数据比较与显示的相关功能&lt;/h2&gt;&lt;h3 id=&#34;文件比较&#34;&gt;&lt;a href=&#34;#文件比较&#34; class=&#34;headerlink&#34; title=&#34;文件比较&#34;&gt;&lt;/a&gt;文件比较&lt;/h3&gt;&lt;p&gt;1.diff（用于比较两个文件之间的不同，一般用于ASCII纯文本文件的比较）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grtgsf42l5j30jt0awwgn.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.cmp(主要是用于比较两个文件，用位为单位去比较，因此可以比较二进制文件)&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d57090d8bd1.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.patch（将旧文件更新到新版内容）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d570d567712.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;文件打印准备：pr&#34;&gt;&lt;a href=&#34;#文件打印准备：pr&#34; class=&#34;headerlink&#34; title=&#34;文件打印准备：pr&#34;&gt;&lt;/a&gt;文件打印准备：pr&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d57147e5600.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上面第一行就是使用pr处理后所形成的标题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;重点回顾&#34;&gt;&lt;a href=&#34;#重点回顾&#34; class=&#34;headerlink&#34; title=&#34;重点回顾&#34;&gt;&lt;/a&gt;重点回顾&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5718760641.jpg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;第十三章-学习Shell脚本&#34;&gt;&lt;a href=&#34;#第十三章-学习Shell脚本&#34; class=&#34;headerlink&#34; title=&#34;第十三章   学习Shell脚本&#34;&gt;&lt;/a&gt;第十三章   学习Shell脚本&lt;/h1&gt;&lt;h2 id=&#34;什么是Shell脚本&#34;&gt;&lt;a href=&#34;#什么是Shell脚本&#34; class=&#34;headerlink&#34; title=&#34;什么是Shell脚本&#34;&gt;&lt;/a&gt;什么是Shell脚本&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;shell是命令行界面下让我们与系统沟通的工具接口；最简单的功能就是将许多命令写在一起，让用户执行一次就能够执行多个命令；由于这个程序语言由于利用shell与相关工具命令，所以不需要编译即可执行；&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;为什么学习shell脚本&#34;&gt;&lt;a href=&#34;#为什么学习shell脚本&#34; class=&#34;headerlink&#34; title=&#34;为什么学习shell脚本&#34;&gt;&lt;/a&gt;为什么学习shell脚本&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;自动化管理的重要依据：编写一个简单程序每日自动处理分析，等有问题才通知您&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;追踪与管理系统的重要工作：Linux系统服务启动的接口，在/etc/init.d/目录下，所有文件都是脚本；包括引导过程也都是利用shell脚本来搜索系统的相关数据，然后再代入各个服务的设置参数；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简单的入侵检测功能：当系统有异常现象时，将这些异常现象记录在系统记录器，可以在固定几分钟内主动去分析系统登录文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;连续命令单一化：将在命令行连续执行的命令写入脚本，通过直接执行脚本来启动一连串的命令行命令；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;简单的数据处理：可以用shell脚本比较数据文件，处理文字数据等；&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;跨平台支持与缩短学习历程：几乎所有类UNIX机器上都可以运行shell脚本&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;第一个脚本的编写与执行&#34;&gt;&lt;a href=&#34;#第一个脚本的编写与执行&#34; class=&#34;headerlink&#34; title=&#34;第一个脚本的编写与执行&#34;&gt;&lt;/a&gt;第一个脚本的编写与执行&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d57218b4b2a.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;执行shell文件&lt;/strong&gt;&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5724c0180b.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第一行：#!/bin/bash在声明这个脚本使用的shell名称：使用的是bash；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;除了#！是用来声明shell的之外，其他的#都是注释。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第六行：主要变量的声明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第七行为主要程序部分：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;第八行为告知执行结果：使用exit命令让程序中断&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;编写Shell简本的良好习惯&#34;&gt;&lt;a href=&#34;#编写Shell简本的良好习惯&#34; class=&#34;headerlink&#34; title=&#34;编写Shell简本的良好习惯&#34;&gt;&lt;/a&gt;编写Shell简本的良好习惯&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d57276b6994.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;简单的Shell脚本练习&#34;&gt;&lt;a href=&#34;#简单的Shell脚本练习&#34; class=&#34;headerlink&#34; title=&#34;简单的Shell脚本练习&#34;&gt;&lt;/a&gt;简单的Shell脚本练习&lt;/h2&gt;&lt;p&gt;1.变量内容由用户决定&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;利用read输入变量内容，利用$ 变量声明来读取文件&lt;/strong&gt;&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d572a80a0c4.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.利用date建立文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d572cd3e777.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.数值运算的方法(+-*/%)&lt;/p&gt;
&lt;p&gt;** 使用方式：var = $((运算内容)) **&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d572e38cf6b.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;善用判断条件&#34;&gt;&lt;a href=&#34;#善用判断条件&#34; class=&#34;headerlink&#34; title=&#34;善用判断条件&#34;&gt;&lt;/a&gt;善用判断条件&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;可通过&amp;amp;&amp;amp;及||来确定前一个命令是否成功执行；也可通过test命令来检测；或者利用ls来执行，然后以$？判断执行结果&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用test命令的测试功能&#34;&gt;&lt;a href=&#34;#使用test命令的测试功能&#34; class=&#34;headerlink&#34; title=&#34;使用test命令的测试功能&#34;&gt;&lt;/a&gt;使用test命令的测试功能&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;text并不会显示任何消息&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;#text -e /dmtsai  &amp;amp;&amp;amp;  echo “exist”  ||  echo “no exist”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;测试/dmtsai目录是否存在&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5731534cab.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5731b1623c.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d573248961d.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d573684bdd6.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用判断符号【】&#34;&gt;&lt;a href=&#34;#使用判断符号【】&#34; class=&#34;headerlink&#34; title=&#34;使用判断符号【】&#34;&gt;&lt;/a&gt;使用判断符号【】&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d573c69d296.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;注意事项：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d574365580f.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d57431d508a.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;Shell脚本的默认变量（-0、-1…）&#34;&gt;&lt;a href=&#34;#Shell脚本的默认变量（-0、-1…）&#34; class=&#34;headerlink&#34; title=&#34;Shell脚本的默认变量（$0、$1…）&#34;&gt;&lt;/a&gt;Shell脚本的默认变量（$0、$1…）&lt;/h3&gt;&lt;p&gt;变量对应关系&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d574365580f.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;执行的文件名为$0变量，第一个参数是$1,只要在脚本里好好使用$1，就可以很简单地立即执行某些命令。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;例：要执行一个脚本，该脚本会自动列出自己的文件名，还有后面的前3个参数&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d574619fe1c.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;条件判断&#34;&gt;&lt;a href=&#34;#条件判断&#34; class=&#34;headerlink&#34; title=&#34;条件判断&#34;&gt;&lt;/a&gt;条件判断&lt;/h2&gt;&lt;h3 id=&#34;使用if…then&#34;&gt;&lt;a href=&#34;#使用if…then&#34; class=&#34;headerlink&#34; title=&#34;使用if…then&#34;&gt;&lt;/a&gt;使用if…then&lt;/h3&gt;&lt;p&gt;1.条件判断&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5773474ee7.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d577464f0ef.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5775b29c45.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5775f9ef75.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5776f3f055.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.netstat:查询当前主机是否有打开的网络服务端口&lt;/p&gt;
&lt;p&gt;netstat-tuln：来获取当前主机启动的服务&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d57856ce052.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;测试端口：&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d578861aeb8.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用case…esac&#34;&gt;&lt;a href=&#34;#使用case…esac&#34; class=&#34;headerlink&#34; title=&#34;使用case…esac&#34;&gt;&lt;/a&gt;使用case…esac&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5802453039.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5801573aa3.jpg&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;直接执行时：利用script.sh  variable 的方式来直接给$1变量赋以内容&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;交互式：通过read命令让用户输入变量的内容&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d581c6e3d25.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;使用函数功能&#34;&gt;&lt;a href=&#34;#使用函数功能&#34; class=&#34;headerlink&#34; title=&#34;使用函数功能&#34;&gt;&lt;/a&gt;使用函数功能&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;函数：在shell脚本中类似于自定义的执行命令，可以简化很多程序代码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d58204728ff.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d582092d7ac.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;循环判断&#34;&gt;&lt;a href=&#34;#循环判断&#34; class=&#34;headerlink&#34; title=&#34;循环判断&#34;&gt;&lt;/a&gt;循环判断&lt;/h2&gt;&lt;h3 id=&#34;while-do-done-、-until-do-done&#34;&gt;&lt;a href=&#34;#while-do-done-、-until-do-done&#34; class=&#34;headerlink&#34; title=&#34;while  do  done 、 until  do  done&#34;&gt;&lt;/a&gt;while  do  done 、 until  do  done&lt;/h3&gt;&lt;p&gt;1.while  do  done(当条件成立时，就进行循环，直到条件不成立才停止)&lt;/p&gt;
&lt;p&gt;2.until  do  done(当条件成立时，就终止循环，否则就继续执行循环的程序段)&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d582390a386.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;p&gt;1.&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5824ed7243.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d58257de854.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5827f2631a.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;for…do…done&#34;&gt;&lt;a href=&#34;#for…do…done&#34; class=&#34;headerlink&#34; title=&#34;for…do…done&#34;&gt;&lt;/a&gt;for…do…done&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;定义&lt;/strong&gt;&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d58408d8add.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;例：&lt;/p&gt;
&lt;p&gt;1.分别输出dog,cat,elephant&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d5842748971.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.&lt;br&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d584301a3fe.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Shell脚本的追踪与调试&#34;&gt;&lt;a href=&#34;#Shell脚本的追踪与调试&#34; class=&#34;headerlink&#34; title=&#34;Shell脚本的追踪与调试&#34;&gt;&lt;/a&gt;Shell脚本的追踪与调试&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://www.hualigs.cn/image/60d58521b8414.jpg&#34;&gt;&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://theprofessor249.github.io/2021/06/24/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%20%20%20%20Linux%E6%96%87%E4%BB%B6%EF%BC%8C%E7%9B%AE%E5%BD%95%E4%B8%8E%E7%A3%81%E7%9B%98%E6%A0%BC%E5%BC%8F/</guid>
            <title>第二部分    Linux文件，目录与磁盘格式</title>
            <link>https://theprofessor249.github.io/2021/06/24/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86%20%20%20%20Linux%E6%96%87%E4%BB%B6%EF%BC%8C%E7%9B%AE%E5%BD%95%E4%B8%8E%E7%A3%81%E7%9B%98%E6%A0%BC%E5%BC%8F/</link>
            <pubDate>Thu, 24 Jun 2021 14:19:15 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;Linux的文件属性与目录配置&#34;&gt;&lt;a href=&#34;#Linux的文件属性与目录配置&#34; class=&#34;headerlink&#34; title=&#34;Linux的文件属性与目录配置&#34;&gt;&lt;/a&gt;Linux的文件属性与目录配置&lt;/h1&gt;&lt;h2 id=&#34;用户与用户组&#34;&gt;&lt;a href=&#34;#用户与用户组&#34; class=&#34;headerlink&#34; title=&#34;用户与用户组&#34;&gt;&lt;/a&gt;用户与用户组&lt;/h2&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grk7lop27hj30jj0bpjsi.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;文件拥有者&lt;/strong&gt;，&lt;strong&gt;用户组&lt;/strong&gt;，&lt;strong&gt;其他人&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;任何一个文件都具有用户，用户组和其他人3个权限&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;所有系统账号与一般身份用户，以及root的相关信息，都记录在 &lt;strong&gt;/etc/passwd&lt;/strong&gt;文件内；密码记录在 &lt;strong&gt;/etc/shadow&lt;/strong&gt;文件中；所有用户组名称都记录在 &lt;strong&gt;/etc/group&lt;/strong&gt;内&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;Linux文件权限&#34;&gt;&lt;a href=&#34;#Linux文件权限&#34; class=&#34;headerlink&#34; title=&#34;Linux文件权限&#34;&gt;&lt;/a&gt;Linux文件权限&lt;/h2&gt;&lt;p&gt;ls   -al：查看文件所有属性&lt;br&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grk7wloeymj30l004vmxw.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grk7wgv2xwj30il06rdgb.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grk7ygpa3jj30n30fpmzo.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;更改文件权限&#34;&gt;&lt;a href=&#34;#更改文件权限&#34; class=&#34;headerlink&#34; title=&#34;更改文件权限&#34;&gt;&lt;/a&gt;更改文件权限&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;chgrp:改变文件所属用户组&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;chown:改变文件拥有者&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;chmod:改变文件的属性，SUID等特性&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grk89p1b1hj30m70ouq72.jpg&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;文件类型与扩展名&#34;&gt;&lt;a href=&#34;#文件类型与扩展名&#34; class=&#34;headerlink&#34; title=&#34;文件类型与扩展名&#34;&gt;&lt;/a&gt;文件类型与扩展名&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;文件类型&lt;/strong&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;普通文件：&lt;strong&gt;纯文本文件（ASCII）&lt;/strong&gt;可以直接读取的数据；&lt;strong&gt;二进制文件（binary）&lt;/strong&gt;:系统仅执行二进制文件；&lt;strong&gt;数据格式的文件：&lt;/strong&gt;会读取某些特定格式的文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;目录：第一个属性为【d】&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;连接文件：第一个属性为【l】&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;设备与设备文件： &lt;strong&gt;块设备文件：&lt;/strong&gt; 就是存储数据以供系统访问的接口设备，简单而言就是硬盘； &lt;strong&gt;字符设备文件：&lt;/strong&gt; 即串口端口的接口设备&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;套接字：用在网络数据连接。启动一个程序来监听客户端的要求，客户端就可以通过套接字来进行数据通信。第一个属性为【s】，通常在/var/run目录中看到这种类型。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;管道：用于解决多个程序同时访问一个文件造成的错误。第一个属性为p&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;扩展名&lt;/strong&gt; &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【*.sh】处理文件（scripts，脚本），处理文件使用shell写成&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[&lt;em&gt;.tar].[&lt;em&gt;tar.gz];[&lt;/em&gt;.zip];[&lt;/em&gt;.tgz]经过打包的压缩文件。压缩软件为gunzip，tar等，根据不同的压缩软件而取其相关的扩展名&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;[&lt;em&gt;.html]; [&lt;/em&gt;.php]网页相关文件，分别表示HTML语法与PHP语法的网页文件。html文件可使用网页浏览器直接打开，php的文件则可以通过客户端的浏览器来浏览服务器端，已得到运算后的网页结果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;文件名&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通常用[ _ ]与数字和字母构成&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;Linux目录配置&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;绝对路径：&lt;/strong&gt; 由根目录（/）开始写起的文件名或目录名称；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;相对路径：&lt;/strong&gt; 只要开头不是（/）就属于相对路径&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.  ：&lt;/strong&gt; 表示当前目录，也可使用./来表示&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.. :&lt;/strong&gt; 表示上一层目录，也可使用../来表示&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;各层目录&lt;/strong&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grkzqsfvmej30kl0g33zf.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grl1m16v9fj31970lz76d.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grl1mbjwzej31180g6wfg.jpg&#34;&gt;&lt;br&gt;&lt;strong&gt;各层目录存放的文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grl09yhdw2j30o30ev43c.jpg&#34;&gt;&lt;br&gt; &lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grl0a0nd0uj30n40l6jy9.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grl09zbar1j30n50c5n1e.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grl0a297cvj30nd0j0tfq.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grl09xbks7j30n80citd2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;注意事项：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;/etc/passwd 密码存放&lt;/p&gt;
&lt;p&gt;/etc/shadow 账号存放&lt;/p&gt;
&lt;p&gt;/etc/sysconfig/*  启动时用到的各项设置值&lt;/p&gt;
&lt;p&gt;/var/spool/mail   邮件暂存数据&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Windows与Linux安装在同一个硬盘的不同分区时，windows将不能使用Linux的硬盘数据，因为windows的核心不认识Linux的文件系统&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;windows98默认的文件系统时FAT，windows2000有NTFS文件系统，Linux的正统文件系统则为ext2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;整个Linux系统都通过虚拟文件系统交换（Virtual Fliesystem Switch,VFS）的核心功能去读取文件系统。也就是说，整个Linux认识的文件系统其实都是VFS在管理，用户不需要知道分区的文件系统，VFS会主动帮我们做好读取操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;Linux文件和目录管理&#34;&gt;&lt;a href=&#34;#Linux文件和目录管理&#34; class=&#34;headerlink&#34; title=&#34;Linux文件和目录管理&#34;&gt;&lt;/a&gt;Linux文件和目录管理&lt;/h1&gt;&lt;h2 id=&#34;目录与路径-（cd-是Change-Directory）&#34;&gt;&lt;a href=&#34;#目录与路径-（cd-是Change-Directory）&#34; class=&#34;headerlink&#34; title=&#34;目录与路径 ## （cd   是Change Directory）&#34;&gt;&lt;/a&gt;目录与路径 ## （cd   是Change Directory）&lt;/h2&gt;&lt;p&gt;1.&lt;br&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grl2shmmyjj30fb04374l.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grl2z4j252j30k7092q4w.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.pwd（显示当前所在目录）Print Working Directory&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grl33zpfkaj30mo09atak.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.mkdir(建立新目录)make directory&lt;br&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grl37u9do5j30ly0bq0vo.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.rmdir(删除空目录)&lt;br&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grl3ccgptdj30mt09j0uh.jpg&#34;&gt;&lt;br&gt;rmdir仅能删除空的目录&lt;/p&gt;
&lt;p&gt;5.$PATH（执行文件路径的变量）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在执行命令时，系统会按照PATH的设置，去每个PATH定义的路径下搜索执行文件，先搜索到的命令先执行&lt;br&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grl3jy53f5j30n30230sw.jpg&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ls命令在/bin/ls中，/bin又在PATH的设置中。所以可以找到ls&lt;/p&gt;
&lt;h2 id=&#34;管理文件与目录&#34;&gt;&lt;a href=&#34;#管理文件与目录&#34; class=&#34;headerlink&#34; title=&#34;管理文件与目录&#34;&gt;&lt;/a&gt;管理文件与目录&lt;/h2&gt;&lt;p&gt;1.ls（查看文件和目录）&lt;br&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grl3pis09pj30mq0ern1m.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.cp（复制文件或目录）copy&lt;/p&gt;
&lt;p&gt;-f： 强制&lt;/p&gt;
&lt;p&gt;-l： 建立硬链接&lt;/p&gt;
&lt;p&gt;-u： 比较文件的新旧&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grl3va99r8j30l60m545d.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grl3v7xfxrj30la0bbad4.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grl3x0f477j30nc0d20wc.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.rm（删除文件或目录）remove&lt;br&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grl44zc9mqj30me0hvjty.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.mv（移动文件与目录，或重命名）move&lt;br&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grl4a123hfj30m20ffgpg.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;查看文件内容&#34;&gt;&lt;a href=&#34;#查看文件内容&#34; class=&#34;headerlink&#34; title=&#34;查看文件内容&#34;&gt;&lt;/a&gt;查看文件内容&lt;/h2&gt;&lt;p&gt;1.cat（concatenate）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grl4ff28itj30m40gq76z.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一般环境，显示出来的结果有【tab】与空格键，其实看不出来，所以使用cat   -A，一些特殊福豪就会显示出来&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.tac(反向显示)&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grl8n45n32j30ne05kmy7.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.nl（显示时添加行号）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grl8p5ncsxj30lm0dcjty.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grl8p0t0ngj30lr0970u0.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.more（一页一页翻动）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grl8smuffwj30mf03faat.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;5.less（一页一页翻动）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grl8tql5e6j30ml05hab1.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;6.head（取出前几行）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grl8vdaie1j30ma05kjs2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;7.tail（取出后几行）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grl8wajlwmj30mc059dgj.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;8.od（非纯文本文件）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;由于执行文件通常是二进制文件，使用前面提到的命令来读取它的内容时，会产生乱码，我们可以利用od这个命令来读取。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grl8xlub9bj30ly0amgo8.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;9.touch（修改文件时间与创建新文件）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;modification time(mtime修改时间)：当该文件的内容数据更改时，就会更新这个时间。内容数据指的是文件的内容，而不是文件的属性。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;status time(ctime状态时间)：当该文件的状态改变时，就会更新这个时间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;access time (atime访问时间)：当读取文件内容时，就会更新这个读取时间。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grl98q83frj30m60m8grp.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;文件与目录的默认权限与隐藏权限&#34;&gt;&lt;a href=&#34;#文件与目录的默认权限与隐藏权限&#34; class=&#34;headerlink&#34; title=&#34;文件与目录的默认权限与隐藏权限&#34;&gt;&lt;/a&gt;文件与目录的默认权限与隐藏权限&lt;/h2&gt;&lt;p&gt;1.umask（文件默认权限）该默认值需要减掉的权限&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grl9kkb6emj30m9032mx6.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一般umask是用于减法，002相当于在原本权限的基础上去掉其他人权限的写&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;r , w , x&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;4 , 2 , 1&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;2.chattr(设置文件隐藏属性)&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grl9tv2rnej30lz0eswj8.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这些属性是隐藏的，所以需要用lsattr才能看到&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;最重要的是+i属性，因为它可以让一个文件无法被更改，对于需要很高系统安全性的用户来说，相当重要；如果是登入文件，就需要+a参数，使之可以增加但不能修改与删除原有的数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3.lsattr（显示文件的隐藏属性）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grl9z851b3j30m205lwf4.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.SUID/SGID/Sticky Bit(文件特殊权限)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Set UID：当s权限在user的x时，也就是类似-r-s–x–x,称为Set UID，简称为SUID，这个UID表示User的ID，而User表示这个程序（/usr/bin/paddwd）的拥有者(root);SUID仅可用于二进制文件，因为SUID是程序在执行过程中拥有文件拥有者的权限，因此，它仅可用二进制文件，不能用在批处理文件（shell脚本）上，shell脚本知识调用很多二进制文件而已； SUID对目录是无效的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Set GID：&lt;strong&gt;文件：&lt;/strong&gt;如果设置在二进制文件上，在执行该程序时，它的有效用户组将会变成该程序的用户组所有者；&lt;strong&gt;目录：&lt;/strong&gt;如果设置到目录内，该目录的文件或目录的用户组都将会变成该程序的用户组所有者；&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Sticky Bit：只针对目录有效，对文件没有效果；将目录加上SBit的权限，则用户只能够&lt;strong&gt;针对自己建立的文件或目录&lt;/strong&gt;进行删除/重命名/移动等操作，对其他人创建的不能操作。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;4 为SUID&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;2 为SGID&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;1 为Sticky Bit&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grlb0jy7zdj30m40cujsq.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;5.file（文件类型）查询是属于ASCII，数据文件，二进制文件，是否使用到冬天函数库等信息&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grlb0jy7zdj30m40cujsq.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;搜索文件&#34;&gt;&lt;a href=&#34;#搜索文件&#34; class=&#34;headerlink&#34; title=&#34;搜索文件&#34;&gt;&lt;/a&gt;搜索文件&lt;/h2&gt;&lt;p&gt;1.which（寻找执行文件）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grlbveq130j30m505n750.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.whereis（寻找特定文件）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grlbw3tur0j30m40am0ur.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.locate（寻找文件的部分名称）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grlbx1v0v5j30me04r3z5.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.find（查找特定参数的文件）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grlbziunxyj30lx0l3wlu.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grlc0nao8mj30ku02mgm2.jpg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;Linux磁盘与文件系统管理&#34;&gt;&lt;a href=&#34;#Linux磁盘与文件系统管理&#34; class=&#34;headerlink&#34; title=&#34;Linux磁盘与文件系统管理&#34;&gt;&lt;/a&gt;Linux磁盘与文件系统管理&lt;/h1&gt;&lt;h2 id=&#34;认识EXT2文件系统&#34;&gt;&lt;a href=&#34;#认识EXT2文件系统&#34; class=&#34;headerlink&#34; title=&#34;认识EXT2文件系统&#34;&gt;&lt;/a&gt;认识EXT2文件系统&lt;/h2&gt;&lt;h3 id=&#34;硬盘物理组成&#34;&gt;&lt;a href=&#34;#硬盘物理组成&#34; class=&#34;headerlink&#34; title=&#34;硬盘物理组成&#34;&gt;&lt;/a&gt;硬盘物理组成&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grlcgzplecj309s07kdg5.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grlch4dvflj30m60d1wfv.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;分区&#34;&gt;&lt;a href=&#34;#分区&#34; class=&#34;headerlink&#34; title=&#34;分区&#34;&gt;&lt;/a&gt;分区&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;为什么要分区，因为我们必须要告诉操作系统：这块硬盘可以访问的区域是由A柱面到B柱面，如此一来，操作系统才能够控制硬盘磁头去A~B范围内的柱面访问数据；&lt;strong&gt;分区的要点：就是记录每一个分区的起始与结束柱面&lt;/strong&gt;;MBR就是在一块硬盘的第0轨上，这也是计算机启动之后要去使用硬盘时必须读取的第一个区域。这个区域内记录了硬盘里的所有分区信息，以及启动时可以写入引导程序的位置。当一个硬盘的MBR坏掉时，这个硬盘也算寿终正寝了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;文件系统&#34;&gt;&lt;a href=&#34;#文件系统&#34; class=&#34;headerlink&#34; title=&#34;文件系统&#34;&gt;&lt;/a&gt;文件系统&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;硬盘的最小存储单位是扇区，而数据所存储的最小单位并不是扇区，因为用扇区来存储效率低，为了提高效率，引入逻辑块，逻辑块是在分区进行文件系统的格式化时所指定的最小存储单位（以扇区大小为基础），块的大小为扇区的2^n倍数，磁头一次可以读取一块&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;块单位的规划并不是越大越好，因为一个块最多仅能容纳一个文件&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;要考虑以下问题：文件读取的效率；文件大小可能造成硬盘空间的浪费。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;每个文件系统开始位置的那个快就称为超级块，超级块的作用是存储文件系统的大小，空的和填满的块，以及他们各自的总数和其他诸如此类的信息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;EXT2文件系统（inode）&#34;&gt;&lt;a href=&#34;#EXT2文件系统（inode）&#34; class=&#34;headerlink&#34; title=&#34;EXT2文件系统（inode）&#34;&gt;&lt;/a&gt;EXT2文件系统（inode）&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;在标准的ext2文件系统中，将每个文件的内容分为两个部分来存储，一个是文件的属性，另一个则是文件的内容。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以下是inode的内容&lt;br&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grldqc91inj30mj05lt9y.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;目录&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在Linux的ext2文件系统建立一个目录时，ext2会给该目录分配一个inode与至少一个块。inode记录该目录的相关属性，并指向分配到的那个块；块记录在这个目录下的相关文件的关联性。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;文件&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在Linux下的ext2建立普通文件时，ext2会给该文件分配至少一个inode与相对于该文件大小的块数量&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grldvanxcgj30m0074q3k.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grldvd2h68j30np0gigqx.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ext2的相关信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grldxk10buj30mk05fmzc.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grldxnugdyj30mc0cr440.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;EXT2-EXT3文件的访问与日志文件系统的功能&#34;&gt;&lt;a href=&#34;#EXT2-EXT3文件的访问与日志文件系统的功能&#34; class=&#34;headerlink&#34; title=&#34;EXT2/EXT3文件的访问与日志文件系统的功能&#34;&gt;&lt;/a&gt;EXT2/EXT3文件的访问与日志文件系统的功能&lt;/h3&gt;&lt;p&gt;当建立ext2的文件系统时，有以下几个部分&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grle2fue9tj30mo08jjtv.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grle2qk6ovj30mj0hhabj.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;可以使用dumpe2fs命令来读取某个ext2/ext3的文件系统内的这些信息&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grle7a2refj30ni04x765.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;数据的不一致状态&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grle8akkjdj30nk06s0w8.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;Linux文件系统的运行&#34;&gt;&lt;a href=&#34;#Linux文件系统的运行&#34; class=&#34;headerlink&#34; title=&#34;Linux文件系统的运行&#34;&gt;&lt;/a&gt;Linux文件系统的运行&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;整个ext2/ext3的数据访问是通过日志与元数据以及数据存放区记录，当系统在运行的时候，系统读取某个文件，则这个文件会加载到内存中，所以该磁盘就会放在主存储器的缓冲区中。若这些块的数据被改变时，刚开始只有主存储器中的块数据会被改变，而且在缓冲区中的快数据会被标记为脏dirty，这个时候，磁盘实体块尚未被修正，所以脏块的数据必须回写到磁盘中，以维持磁盘实体块上的数据与主存储中的块数据的一致性。&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;载入点&#34;&gt;&lt;a href=&#34;#载入点&#34; class=&#34;headerlink&#34; title=&#34;载入点&#34;&gt;&lt;/a&gt;载入点&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;要能够使用Linux，必须要载入Linux系统。目录可以记录文件名与inode的相关信息。目录与文件系统产生对应的入口点，我们称之为点目录为载入点；将硬盘划分为几个分区，并将/与/home设置为两个分区的载入点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grxyr7xqhtj30i301waa7.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;载入点一定时目录而不是文件，载入点就是进入该文件系统的入口&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;Linux支持的其他文件系统&#34;&gt;&lt;a href=&#34;#Linux支持的其他文件系统&#34; class=&#34;headerlink&#34; title=&#34;Linux支持的其他文件系统&#34;&gt;&lt;/a&gt;Linux支持的其他文件系统&lt;/h3&gt;&lt;p&gt;常见的支持文件系统有：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grxyrz2ffgj30ia0akwfu.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;假设/使用的是/dev/hdal,用ext3，而/home使用/dev/hda2,用reiserfs,那么采用/home/dmtsai/.bashrc时，linux核心的VFS管理所有的文件系统，不需要自行设置读取文件系统的定义&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;文件系统的简单操作&#34;&gt;&lt;a href=&#34;#文件系统的简单操作&#34; class=&#34;headerlink&#34; title=&#34;文件系统的简单操作&#34;&gt;&lt;/a&gt;文件系统的简单操作&lt;/h2&gt;&lt;h3 id=&#34;磁盘与目录的容量&#34;&gt;&lt;a href=&#34;#磁盘与目录的容量&#34; class=&#34;headerlink&#34; title=&#34;磁盘与目录的容量&#34;&gt;&lt;/a&gt;磁盘与目录的容量&lt;/h3&gt;&lt;p&gt;1.df-查看所有的文件系统的容量&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grxyszaybpj30j20gdte8.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grxyz88sm8j30i70diwhv.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.du-列出所有文件与目录容量&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grxyzj7nraj30im0ly42l.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;连接文件：In&#34;&gt;&lt;a href=&#34;#连接文件：In&#34; class=&#34;headerlink&#34; title=&#34;连接文件：In&#34;&gt;&lt;/a&gt;连接文件：In&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;连接文件有点类似Windows的快捷方式，也就是很多的链接文件其实都指向同个源文件；连接文件还分成硬连接与符号连接两种&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.硬连接或实际连接&lt;/p&gt;
&lt;p&gt;文件的读取方式：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grxyzs8do6j30jc02u0tj.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/root/crontab为一个硬连接的文件，它连接到/etc/crontab文件，其实/root/crontab与/etc/crontab是同一个文件，只是两个目录（/etc与/root）记录了crontab文件的关联数据。也就是说，由/etc所记录的关联数据可知，crontab的inode放在A处，而/root目录下的关联数据，crontab同样也指到A处的inode，所以crontab文件的inode与块都没有改变，只是有两个目录记录了关联数据。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最大的好处就是安全。就是不管删除了那个文件，其实仅删除目录下面的文件关联数据，并没有更改原文件的inode与块数据。不论由哪个目录连接到正确的crontab的inode与块，都可以正确无误地进行数据的修改。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;硬链接设置连接文件时，磁盘空间与inode的数目都不会改变。由上面的说明可以知道，硬链接只是在某个目录下的块写入一个关联数据，所以并不会用掉inode与磁盘空间。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grxz02eff2j30ij01zjrk.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.符号连接（即快捷方式）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;符号连接就是建立在一个独立的文件，这个文件会让数据的读取指向它连接的文件内容，由于只是利用文件来作为指向的动作，所以，当源文件被删除之后，符号连接的文件不能打开，会显示无法打开某文件。符号连接与windows的快捷方式可以划上等号。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grxz0h0sxoj30hx0l80yo.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grxz0ooxhjj30i504aq3j.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用In如果不加任何参数，就是硬链接；如果In使用-s参数，所创建的就类似Windows的快捷方式，当修改linux下的连接文件时，更改的其实是原始文件，所以不论原始文件连接到哪里，只要修改了连接文件，原始文件就跟着变&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;3.目录的连接数量&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;当建立新目录时，新目录的连接数为2，而上层目录的连接数则会增加1&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;磁盘的分区、格式化、检验与载入&#34;&gt;&lt;a href=&#34;#磁盘的分区、格式化、检验与载入&#34; class=&#34;headerlink&#34; title=&#34;磁盘的分区、格式化、检验与载入&#34;&gt;&lt;/a&gt;磁盘的分区、格式化、检验与载入&lt;/h2&gt;&lt;p&gt;新增硬盘步骤：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grxzttfj1yj30jc02u0tj.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;分区-fdisk&#34;&gt;&lt;a href=&#34;#分区-fdisk&#34; class=&#34;headerlink&#34; title=&#34;分区:fdisk&#34;&gt;&lt;/a&gt;分区:fdisk&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grxzwaynmbj30j00l379g.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grxzx5bzilj30ig07ndhm.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grxzxemuaqj30jd0hfdjq.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;1.删除分区&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grxzy33nmfj30ln0jygoo.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grxzym42aij30jy069myd.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.新增分区&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grxzyx1socj30kt0ban0m.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grxzz6zkvcj30k40li78u.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grxzzdkd0nj30jn08iabb.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grxzzj8pz0j30jy08gjsu.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.操作环境的说明&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以root身份进行硬盘分区时，在单用户维护模式下比较安全。在进行fdisk的时候1，如果该硬盘的某个分区还在使用，那么很有可能系统核心会无法重新加载硬盘的分区表，解决方法就是卸载使用中的分区，然后再重新进入fdisk，重新写入分区表，这样就可以成功&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;4.注意事项&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;虽然一个硬盘最大的逻辑分区可以到63号（总数，包含1-4的主分区），但并非所有的Linux版本都会将所有的逻辑分区对应的磁盘号都写入系统中&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;磁盘格式化-mke2fs&#34;&gt;&lt;a href=&#34;#磁盘格式化-mke2fs&#34; class=&#34;headerlink&#34; title=&#34;磁盘格式化  mke2fs&#34;&gt;&lt;/a&gt;磁盘格式化  mke2fs&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gry11cyl3pj30k00avgo0.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gry11quz22j30js02074m.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gry11wvr7cj30kx09y77n.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;磁盘检验：fsck、badblocks&#34;&gt;&lt;a href=&#34;#磁盘检验：fsck、badblocks&#34; class=&#34;headerlink&#34; title=&#34;磁盘检验：fsck、badblocks&#34;&gt;&lt;/a&gt;磁盘检验：fsck、badblocks&lt;/h3&gt;&lt;p&gt;1.fsck-用来检查与修正硬盘错误的命令，通常只有身为root且系统有问题的时候才用这个命令，否则在正常状态下使用此命令，可能会损坏文件&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gry124njv3j30je0b041p.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.badblocks-用来检查硬盘或软盘是否有坏轨的命令&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gry129ykfzj30jh05jab0.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.sync-可以直接将系统暂存在内存中的数据写入磁盘中&lt;/p&gt;
&lt;h3 id=&#34;磁盘载入与卸载&#34;&gt;&lt;a href=&#34;#磁盘载入与卸载&#34; class=&#34;headerlink&#34; title=&#34;磁盘载入与卸载&#34;&gt;&lt;/a&gt;磁盘载入与卸载&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gry12jkffmj30jk0ihgre.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gry12rft6sj30jp0k00x9.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;默认情况下，mount命令只有root才能执行；如果想将整个系统中记录的文件系统与载入点对应的数据全部都载入，那么执行 mount   -a ；由于Linux系统中，各一个路径都有可能是一个独立的分区系统，所以需要将每个分区系统都挂上各自的载入点；由于各个分区的文件系统可能并不相同，所以必须要先了解该区的文件系统，这样才可以载入&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gry13677pwj30kq0fl40m.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;修改磁盘参数&#34;&gt;&lt;a href=&#34;#修改磁盘参数&#34; class=&#34;headerlink&#34; title=&#34;修改磁盘参数&#34;&gt;&lt;/a&gt;修改磁盘参数&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;修改磁盘的卷标、日志参数、或者是其他硬盘运行时的相关参数（如DMA启动与否）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.mknod&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gry13twn6lj30l50fhad0.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;2.e2label-主要功能是用来修改磁盘的表头数据，也就是卷标&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gry144rti3j30ks03ltae.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;在载入磁盘的时候，除了使用磁盘号之外，也可以直接使用磁盘卷标作为载入的磁盘载入点&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gry144rti3j30ks03ltae.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.tune2fs&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gry14h9xjkj30jn043t9h.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;4.hdparm-主要用于启动DMA模式，并测试硬盘的访问性能&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gry14qs6xqj30jw08341f.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gry15a9jvgj30js0ljgrp.jpg&#34;&gt;&lt;br&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gry15a9jvgj30js0ljgrp.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;命令只有root才能执行。需要特别注意，-X参数是很危险的参数设置，除非您非常了解硬盘结构，否则不要自行设置&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;设置启动载入&#34;&gt;&lt;a href=&#34;#设置启动载入&#34; class=&#34;headerlink&#34; title=&#34;设置启动载入&#34;&gt;&lt;/a&gt;设置启动载入&lt;/h2&gt;&lt;h3 id=&#34;载入磁盘、中文编码和U盘&#34;&gt;&lt;a href=&#34;#载入磁盘、中文编码和U盘&#34; class=&#34;headerlink&#34; title=&#34;载入磁盘、中文编码和U盘&#34;&gt;&lt;/a&gt;载入磁盘、中文编码和U盘&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;linux或UNIX系统之下，是以目录来表示，也就是一个目录可能就是一个分区；例如通常Linux默认的软盘载入点在/mnt/floppy,如果需要软盘的数据时，就将/dev/fd0设备（这是访问设备的一个设备文件类型）挂上/mnt/floppy即可，就可以读取软盘的数据&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;1.载入软盘（格式为ext2）&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gry302r1zoj30k702c74i.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;即使是windows格式的文件，在linux下仍然是可读取。要注意，使用完软盘，一定要将/media/floppy卸载之后才可以取出软盘，否则系统会一直告诉您发生错误；当卸载/media/floppy的时候，一定不能在该目录中，否则会发生错误信息；如果加载的格式不符合，系统也不会将该软盘挂载&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2.载入windows磁盘&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;假设windows的VFAT文件系统是在/dev/hda1下，如果想将该分区载入到/mnt/win98，该如何做？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gry30fzp72j30j5026aaa.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;3.载入U盘&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gry30lvkyfj30ja01v749.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;启动载入-etc-fstab和-etc-mtab&#34;&gt;&lt;a href=&#34;#启动载入-etc-fstab和-etc-mtab&#34; class=&#34;headerlink&#34; title=&#34;启动载入/etc/fstab和/etc/mtab&#34;&gt;&lt;/a&gt;启动载入/etc/fstab和/etc/mtab&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;载入的限制：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gry30lvkyfj30ja01v749.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/etc/fstab就是使用mount将设备载入到系统的某个载入点所需执行的命令内容，将这些内容都写到/etc/fstab里，让系统一启动就主动载入。当mount发出命令时，需要的参数有设备号、载入点、文件系统类别、参数等，/etc/fstab加入了两项额外的功能，分别是是否执行备份命令dump，以及是否启动使用fsck扫描磁盘&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gry315v05ej30ik05z0tu.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;1.磁盘设备号或该设备的卷标&lt;/p&gt;
&lt;p&gt;2.载入点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;载入点就是目录&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3.分区的文件系统&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux在传统上使用的是ext2/ext3等文件系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;4.文件系统参数&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每个文件系统还可以加入很多参数&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gry31fpsuuj30k40d6td5.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;5.dump备份命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可以使用dump命令来进行系统备份。dump命令则会针对/etc/fstab的设置值，去选择是否要将该分区进行备份。0表示不要做dump备份，1表示要进行dump备份，2表示要做dump备份&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;6.是否以fsck检验分区&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;启动过程中，系统默认以fsck检验分区内的文件系统是否完整&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gry31nue8qj30kd058myy.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;建立虚拟内存&#34;&gt;&lt;a href=&#34;#建立虚拟内存&#34; class=&#34;headerlink&#34; title=&#34;建立虚拟内存&#34;&gt;&lt;/a&gt;建立虚拟内存&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;在Linux中，如果需要使用大量的虚拟内存，但是swap分区不够大，可以采用下列方法来实现：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gry31tlwkqj30is010747.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;建立虚拟内存设备&#34;&gt;&lt;a href=&#34;#建立虚拟内存设备&#34; class=&#34;headerlink&#34; title=&#34;建立虚拟内存设备&#34;&gt;&lt;/a&gt;建立虚拟内存设备&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gry31ym9fuj30kx04zjt5.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;建立虚拟内存文件&#34;&gt;&lt;a href=&#34;#建立虚拟内存文件&#34; class=&#34;headerlink&#34; title=&#34;建立虚拟内存文件&#34;&gt;&lt;/a&gt;建立虚拟内存文件&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gry329cwqjj30l70kxteo.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8gry32f20fvj30jf05hq3h.jpg&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;文件的压缩与打包&#34;&gt;&lt;a href=&#34;#文件的压缩与打包&#34; class=&#34;headerlink&#34; title=&#34;文件的压缩与打包&#34;&gt;&lt;/a&gt;文件的压缩与打包&lt;/h1&gt;&lt;h2 id=&#34;压缩文件的用途与技术&#34;&gt;&lt;a href=&#34;#压缩文件的用途与技术&#34; class=&#34;headerlink&#34; title=&#34;压缩文件的用途与技术&#34;&gt;&lt;/a&gt;压缩文件的用途与技术&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;比较大型的文件通过文件压缩之后，可以降低磁盘使用量，减少文件大小；有的压缩程序还可以进行容量限制，使一个大型文件可以分割成为数个小文件&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;Linux系统常见的压缩命令&#34;&gt;&lt;a href=&#34;#Linux系统常见的压缩命令&#34; class=&#34;headerlink&#34; title=&#34;Linux系统常见的压缩命令&#34;&gt;&lt;/a&gt;Linux系统常见的压缩命令&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;常见压缩扩展名&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs84u9qkv1j30ka036aao.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;compress（-Z）&#34;&gt;&lt;a href=&#34;#compress（-Z）&#34; class=&#34;headerlink&#34; title=&#34;compress（*.Z）&#34;&gt;&lt;/a&gt;compress（*.Z）&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs84umdktoj30jt0j977k.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;*&lt;em&gt;compress程序压缩是最简单的压缩命令，使用的时候需要特别留意，通过compress压缩之后，如果没有使用其他参数，那么源文件就会被后来的&lt;/em&gt;.Z所取代**&lt;/p&gt;
&lt;h3 id=&#34;gzip、zcat-gz&#34;&gt;&lt;a href=&#34;#gzip、zcat-gz&#34; class=&#34;headerlink&#34; title=&#34;gzip、zcat (*.gz)###&#34;&gt;&lt;/a&gt;gzip、zcat (*.gz)###&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8gs84v08rm1j30k40d10vi.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;gzip是用来压缩与解压缩扩展名为*.gz的命令，在看到*.gz的文件时，它是通过gzip程序压缩的。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;zcat则是用来读取压缩文件数据内容的命令，zcat命令可以同时读取compress与gzip的压缩文件&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;bzip2、bzcat-bz2&#34;&gt;&lt;a href=&#34;#bzip2、bzcat-bz2&#34; class=&#34;headerlink&#34; title=&#34;bzip2、bzcat(*.bz2)&#34;&gt;&lt;/a&gt;bzip2、bzcat(*.bz2)&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8gs84vmp8xfj30kf0bymzj.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;tar（-tar）&#34;&gt;&lt;a href=&#34;#tar（-tar）&#34; class=&#34;headerlink&#34; title=&#34;tar（*.tar）&#34;&gt;&lt;/a&gt;tar（*.tar）&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs84vn8kiij30jx0bvgp2.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8gs84w7l925j30kr0jeq8k.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;tar可以将整个目录或者是指定的文件都整合成一个文件&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;仅打包，不压缩&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tar  -cvf   /tmp/etc.tar    /atc&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打包后压缩&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;tar  -xcvf  /tmp/etc.tar.gz   /etc&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;打包后，以bzip2压缩&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tar  -jcvf   /tmp/etc.tar.bz2   /etc&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;查看压缩文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tar  -xtvf   /tmp/etc.tar.gz&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文件解压&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;tar -zxvf   /tmp/etc.tar.gz&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在别的目录下解压压缩文件中的部分文件夹&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tar -zxvf  /tmp/etc.tar.gz   etc/passwd&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;备份所有文件，并且保存其权限&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;tar  -zxvpf   /tmp/etc.tar.gz   /etc&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://theprofessor249.github.io/2021/06/24/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%20%20%20%20%20%E8%AE%A4%E8%AF%86Linux%E5%8F%8ALinux%E4%B8%BB%E6%9C%BA%E8%A7%84%E5%88%92%E4%B8%8E%E5%AE%89%E8%A3%85/</guid>
            <title>第一部分     认识Linux及Linux主机规划与安装</title>
            <link>https://theprofessor249.github.io/2021/06/24/%E7%AC%94%E8%AE%B0%E7%B1%BB/%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86%20%20%20%20%20%E8%AE%A4%E8%AF%86Linux%E5%8F%8ALinux%E4%B8%BB%E6%9C%BA%E8%A7%84%E5%88%92%E4%B8%8E%E5%AE%89%E8%A3%85/</link>
            <pubDate>Thu, 24 Jun 2021 14:19:15 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;第一部分-认识Linux及Linux主机规划与安装&#34;&gt;&lt;a href=&#34;#第一部分-认识Linux及Linux主机规划与安装&#34; class=&#34;headerlink&#34; title=&#34;第一部分     认识Linux及Linux主机规划与安装&#34;&gt;&lt;/a&gt;第一部分     认识Linux及Linux主机规划与安装&lt;/h1&gt;&lt;h2 id=&#34;什么是linux&#34;&gt;&lt;a href=&#34;#什么是linux&#34; class=&#34;headerlink&#34; title=&#34;什么是linux&#34;&gt;&lt;/a&gt;什么是linux&lt;/h2&gt;&lt;h3 id=&#34;什么时Linux&#34;&gt;&lt;a href=&#34;#什么时Linux&#34; class=&#34;headerlink&#34; title=&#34;什么时Linux&#34;&gt;&lt;/a&gt;什么时Linux&lt;/h3&gt;&lt;p&gt;超级计算机：超级计算机是运行速度最快的计算机，主要用于需要有高速计算的项目中，如国防军事，气象预测，太空科技等&lt;/p&gt;
&lt;p&gt;大型机：大型机具有数个高速CPU，功能上虽不及超级计算机，但可用来处理大量数据与复杂的运算&lt;/p&gt;
&lt;p&gt;小型机:小型机具有大型机同时支持多用户的特性，通常用于科学研究，工程分析与工厂的流程管理&lt;/p&gt;
&lt;p&gt;微机：又称个人计算机，微机体积小，价格低，但功能完备&lt;/p&gt;
&lt;h3 id=&#34;什么是操作系统&#34;&gt;&lt;a href=&#34;#什么是操作系统&#34; class=&#34;headerlink&#34; title=&#34;什么是操作系统&#34;&gt;&lt;/a&gt;什么是操作系统&lt;/h3&gt;&lt;p&gt;操作系统能正确地控制硬件工作，该系统就称为操作系统。操作系统可以管理整台计算机的硬件，可以控制CPU进行正确的计算，可以分辨硬盘里的数据并进行读取，它还必须能够识别所有的适配卡，这样才能正确地使用所有的硬件。&lt;br&gt;比肩完整的操作系统包含两个组件，一个是核心与其提供的接口工具，另一个是利用核心提供的接口工具所开发的软件。&lt;/p&gt;
&lt;h3 id=&#34;什么是核心&#34;&gt;&lt;a href=&#34;#什么是核心&#34; class=&#34;headerlink&#34; title=&#34;什么是核心&#34;&gt;&lt;/a&gt;什么是核心&lt;/h3&gt;&lt;p&gt;核心就是Kernel，它是操作系统最底层的东西，每个操作系统都有自己的核心，由它来掌管整个硬件资源的工作状态。当有新的硬件加入到系统中时，若核心并没有支持它，这个新硬件就无法工作，因为控制它的核心并不认识它，&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;核心所要管理的事项：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;系统调用接口：通过接口，程序开发人员可以轻松地与核心沟通，进一步利用硬件资源&lt;/p&gt;
&lt;p&gt;进程控制：在多任务环境中，一台计算机可能同时有很多地作业等待CPU运算处理，核心这时必须能够控制这些作业并有效地分配CPU地资源&lt;/p&gt;
&lt;p&gt;内存管理：控制整个系统地内存，如果内存不足，核心还能提供虚拟内存地功能&lt;/p&gt;
&lt;p&gt;文件系统管理：文件系统地管理，如果核心不能识别某个文件系统，那么将无法使用该文件格式地文件&lt;/p&gt;
&lt;p&gt;设备驱动程序：”可加载模块“功能可以将驱动程序编辑成模块，而不需要重新编译核心&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grjui0sasej30iv0bcjst.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;下面为主要地Linux版本地发行者网址&#34;&gt;&lt;a href=&#34;#下面为主要地Linux版本地发行者网址&#34; class=&#34;headerlink&#34; title=&#34;下面为主要地Linux版本地发行者网址&#34;&gt;&lt;/a&gt;下面为主要地Linux版本地发行者网址&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grjv6ra23yj30nv0joadz.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;其他相关信息&#34;&gt;&lt;a href=&#34;#其他相关信息&#34; class=&#34;headerlink&#34; title=&#34;其他相关信息&#34;&gt;&lt;/a&gt;其他相关信息&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;各个版本也都要遵循LSB地规范，硬软件开发人员也会遵照LSB，                                  LSB：&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cDovL3d3dy5saW51eGJhc2Uub3JnLw==&#34;&gt;http://www.linuxbase.org/&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;服务器：提供Internet一种以上网络服务地主机，自己架设一台邮件服务器也是小型地服务器&lt;/p&gt;
&lt;p&gt;工作站：仅提供给一组特定人员进行数值分析，科学研究。只要是没有对Internet提供网络服务地，那就是工作站，当然也包括所谓地终端&lt;/p&gt;
&lt;p&gt;终端：就是最终用户地那台计算机。例如笔者使用地机器连接上主机来工作，那么，这台计算机就可以称为终端&lt;/p&gt;
&lt;h2 id=&#34;如何学习Linux&#34;&gt;&lt;a href=&#34;#如何学习Linux&#34; class=&#34;headerlink&#34; title=&#34;如何学习Linux&#34;&gt;&lt;/a&gt;如何学习Linux&lt;/h2&gt;&lt;h3 id=&#34;Linux地应用&#34;&gt;&lt;a href=&#34;#Linux地应用&#34; class=&#34;headerlink&#34; title=&#34;Linux地应用&#34;&gt;&lt;/a&gt;Linux地应用&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;网络服务器&lt;/strong&gt;：承袭了Unix地高稳定性，Linux地网络功能特别稳定与强大。作为网络服务器，例如WWW，邮件服务器，文件服务器，FTP服务器等&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;工作站计算机&lt;/strong&gt;：工作站不提供Internet服务，工作站计算机与台式计算机不太一样，工作站通常面对比较重要地应用，如工程界流体力学地数值模式运算，娱乐界地特效处理，软件开发人员地工作平台。Linux有强大地运算能力，支持相当广泛地GCC编译软件，在工作站中，它也是相当不错地一个操作系统。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;台式计算机&lt;/strong&gt;：办公室使用地。工作包括如下几种：&lt;/p&gt;
&lt;p&gt;上网浏览&lt;/p&gt;
&lt;p&gt;文字处理&lt;/p&gt;
&lt;p&gt;网络接口地文字处理系统&lt;/p&gt;
&lt;p&gt;办公软件处理数据&lt;/p&gt;
&lt;p&gt;手法电子邮件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;嵌入式系统：&lt;/strong&gt; 小型电脑地开发。例如家电产品，PDA，手机，数字相机以及其他微型地计算机设备。这些计算机设备都是需要操作系统来控制，操作系统直接嵌入产品中。&lt;/p&gt;
&lt;h3 id=&#34;基础学习&#34;&gt;&lt;a href=&#34;#基础学习&#34; class=&#34;headerlink&#34; title=&#34;基础学习&#34;&gt;&lt;/a&gt;基础学习&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grjw6g1zbvj30mo07n40k.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grjw9qu5v9j30o50g241v.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grjwbwqy4qj30m002sq3n.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grjwhzpumhj30op07zdhx.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grjwknr4avj30mk06k0uk.jpg&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Linux主机地规划&#34;&gt;&lt;a href=&#34;#Linux主机地规划&#34; class=&#34;headerlink&#34; title=&#34;Linux主机地规划&#34;&gt;&lt;/a&gt;Linux主机地规划&lt;/h2&gt;&lt;h3 id=&#34;认识主机硬件主件&#34;&gt;&lt;a href=&#34;#认识主机硬件主件&#34; class=&#34;headerlink&#34; title=&#34;认识主机硬件主件&#34;&gt;&lt;/a&gt;认识主机硬件主件&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grjwqsupd0j30o00nddj9.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;电脑槽口图&#34;&gt;&lt;a href=&#34;#电脑槽口图&#34; class=&#34;headerlink&#34; title=&#34;电脑槽口图&#34;&gt;&lt;/a&gt;电脑槽口图&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva4.sinaimg.cn/large/008jSNE7ly8grjwwx42mcj30dn0d70ts.jpg&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1.中央处理器&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;（&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;双核心&lt;/strong&gt;：是指在一个CPU里有两个运算单元，该双核心地CPU有两个可以运算地实体CPU&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;频率&lt;/strong&gt;:就是单位时间地运算次数。频率越高，表示设备地运算次数越多，速度就会越快&lt;/p&gt;
&lt;p&gt;）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;CPU有倍频与外频之分，外频是指CPU与接口设备进行数据传输/运算地速度，倍频则是指CPU本身运算时地运算速度。两者相乘才是CPU地频率。与外频有关的是内存与主板芯片集。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;-CPU外频与倍频：：133（外频）*7（倍频）MHZ；&lt;/p&gt;
&lt;p&gt;-RAM频率：通常与CPU的外频相同，为133MHz；&lt;/p&gt;
&lt;p&gt;-PCI接口（包括网卡，声卡等的接口）133/4=33MHz；&lt;/p&gt;
&lt;p&gt;-AGP接口：133/2=66MHz（这是AGP正常的频率）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;外频是可以超频的。如果CPU外部频率是133.通过工具，就可以将133提升到比较高的频率，就叫超频。如果超频高出正常值很多，虽然设备的运行频率都会提升，但是也可能会造成系统不稳定，常常死机，或者造成某些组件的寿命减短。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;2.内存&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;操作系统的核心，软硬件的驱动程序，所有要读取的文件，都需要先读入内存之后，才传输给CPU来运行；也会将常用的文件或程序等数据存储在内存中，而不直接删除，如此一来，下次访问这些数据时，不需要访问外部设备就能读取，提高了系统的运行速度；内存规格主要有两种：SDRAM与DDR。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;3.显卡VGA卡&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为了避免由于大量的3D画面造成CPU的负载过大，显卡开发商在显卡上安装了一个可以处理这些很耗CPU运算时间的硬件GPU，来处理画面数据；当前显卡有两种规格：一种是以传统的AGP接口来进行影像数据的传输，另一种则是以更快的PCI Express接口来传输数据；VGA卡上也有一个内存，该内存大小可以影响屏幕输出的分辨率与画面质量，它是直接嵌入在显卡上的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;4.硬盘与访问设备&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主机需要加载数据，这些数据就存放在主机的硬盘上。我们可以通过便携式存储媒体，例如光盘，Zip磁盘，软盘等来传递数据。主流的硬盘访问接口应该是SATA与IDE；当选购硬盘是，除了注意硬盘的容量大小之外，还要知道硬盘的转速以及缓存的大小。我们要求是，转速至少为7200转，缓存最好选择8MB。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;5.PCI适配卡&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;/blockquote&gt;
&lt;p&gt;网卡，声卡，特数功能卡等，都是通过PCI插槽来安装的&lt;/p&gt;
&lt;p&gt;网卡：目前采用的是RJ-45的接口插孔，这种接口有点像电话线插孔，不过要稍微大一些。由于网络需求提高，最高网卡速度已达到吉比特（Gbit/s）。也可以选购10/100/1000Mbit/s的网卡。&lt;/p&gt;
&lt;p&gt;SCSI适配卡：可以用来连接SCSI接口的设备。由于SCSI接口的设备比较稳定，而且设备运行速度较快，耗费CPU资源较少。SCSI适配卡是大型服务器主机的硬盘传输接口，如果是个人计算机，采用IDE/SATA接口就够了，SCSI接口的硬盘很贵。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6.主板&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt; &lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grk3ecgjwij30fn0argmc.jpg&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;芯片集：就是负责与CPU，RAM，输出与输入设备通信；CPU的外频就是指芯片集与其他设备通信的速度；芯片集只能支持集中规格，无法支持所有的规格，所以在选购时，需要一起考虑。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;I/O地址与IRQ中断：既然主板是负责各个计算机系统组件之间的通信，有输入输出，又有不同的储存设备，所以利用I/O与IRQ，使得每台设备都有自己的地址，如若发生端口之间的冲突，可以手动设置各台设备的I/O,还可利用IRQ中断。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;BIOS：是Basic Input/Output System（基本输入/输出系统）的缩写，上面提到的I/O,IRQ等，都可以通过操作系统，亦可以通过主板提供的BIOS功能来设置。启动的时候，屏幕出现的版本信息就是BIOS的设置。可以在机器启动时按下DEL，来设置启动顺序，I/O以及IRQ。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;其他输出输入接口：&lt;strong&gt;PS2接口&lt;/strong&gt;：键盘与鼠标的接口，插孔为圆形的；&lt;strong&gt;9针串行端口：&lt;/strong&gt;以前用来连接鼠标的接口，常称为coml；&lt;strong&gt;25针并行端口：&lt;/strong&gt;通常用来连接打印机，LPT1；&lt;strong&gt;声音输出，输入与麦克风：&lt;/strong&gt;圆形插孔，主板上必须装有内置音效芯片，才会有这三个设备；&lt;strong&gt;USB：&lt;/strong&gt;支持即插即用。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;电源：电源至少也要300W以上才能够主机使用，有些特殊的主机要求至少400-500W以上的电源。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;关于速度/稳定性的问题：&lt;strong&gt;系统超频；&lt;/strong&gt; &lt;strong&gt;电源不稳定；&lt;/strong&gt; &lt;strong&gt;内存负荷；&lt;/strong&gt; &lt;strong&gt;系统过热；&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;适合主机的硬件配置&#34;&gt;&lt;a href=&#34;#适合主机的硬件配置&#34; class=&#34;headerlink&#34; title=&#34;适合主机的硬件配置&#34;&gt;&lt;/a&gt;适合主机的硬件配置&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva3.sinaimg.cn/large/008jSNE7ly8grk4e7ljnsj30o60kntcc.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;Linux中的硬件设备号&#34;&gt;&lt;a href=&#34;#Linux中的硬件设备号&#34; class=&#34;headerlink&#34; title=&#34;Linux中的硬件设备号&#34;&gt;&lt;/a&gt;Linux中的硬件设备号&lt;/h3&gt;&lt;p&gt; &lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grk4dj6cdqj30o80k2766.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;选择适当的版本&#34;&gt;&lt;a href=&#34;#选择适当的版本&#34; class=&#34;headerlink&#34; title=&#34;选择适当的版本&#34;&gt;&lt;/a&gt;选择适当的版本&lt;/h3&gt;&lt;p&gt;&lt;img data-src=&#34;https://tva1.sinaimg.cn/large/008jSNE7ly8grk4hfc652j30nl0800vq.jpg&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;双系统安装步骤&#34;&gt;&lt;a href=&#34;#双系统安装步骤&#34; class=&#34;headerlink&#34; title=&#34;双系统安装步骤&#34;&gt;&lt;/a&gt;双系统安装步骤&lt;/h3&gt;&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzI0NjI0NTM5L2FydGljbGUvZGV0YWlscy84MTc3NTYzNT9vcHNfcmVxdWVzdF9taXNjPSZhbXA7cmVxdWVzdF9pZD0mYW1wO2Jpel9pZD0xMDImYW1wO3V0bV90ZXJtPXVidW50dSVFNSU4RiU4QyVFNyVCMyVCQiVFNyVCQiU5RiVFNSVBRSU4OSVFOCVBMyU4NSZhbXA7dXRtX21lZGl1bT1kaXN0cmlidXRlLnBjX3NlYXJjaF9yZXN1bHQubm9uZS10YXNrLWJsb2ctMn5hbGx+c29iYWlkdXdlYn5kZWZhdWx0LTEtLm5vbmVjYXNlJmFtcDtzcG09MTAxOC4yMjI2LjMwMDEuNDE4Nw==&#34;&gt;https://blog.csdn.net/qq_24624539/article/details/81775635?ops_request_misc=&amp;amp;request_id=&amp;amp;biz_id=102&amp;amp;utm_term=ubuntu%E5%8F%8C%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85&amp;amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduweb~default-1-.nonecase&amp;amp;spm=1018.2226.3001.4187&lt;/span&gt;&lt;/p&gt;
&lt;h2 id=&#34;命令行模式&#34;&gt;&lt;a href=&#34;#命令行模式&#34; class=&#34;headerlink&#34; title=&#34;命令行模式&#34;&gt;&lt;/a&gt;命令行模式&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Ctrl Alt Backspace：&lt;strong&gt;重新启动&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Ctrl Alt 【F1】&lt;del&gt;【F6】：**命令登入tty1&lt;/del&gt;tty6终端**&lt;/li&gt;
&lt;li&gt;Ctrl Alt 【7】：&lt;strong&gt;图形界面桌面&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;startx:&lt;strong&gt;启动图形界面&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;默认root的提示符为#；一般身份用户的提示符为$&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;exit:&lt;strong&gt;注销&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;date +%Y%m%d：&lt;strong&gt;显示日期&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;cal  month  year：&lt;strong&gt;列出月份的月历&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;bc:&lt;strong&gt;计算器&lt;/strong&gt;（quit离开计算器）&lt;/li&gt;
&lt;li&gt;Tab：&lt;strong&gt;大小写切换键，且具有命令补全与文件补齐的功能&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Ctrl  C：&lt;strong&gt;中止当前程序&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Ctrl  d：&lt;strong&gt;文件结束或输入结束，可用来取代exit的输入&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;man  命令：&lt;strong&gt;命令使用指南&lt;/strong&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grk6cv0b1kj30of0lamzm.jpg&#34;&gt;&lt;br&gt;man -f  命令：获取关于命令的信息&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;man 数字  命令：获取man N page页中的文件数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;man -k  命令：找到更多的帮助文件数据&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;who：&lt;strong&gt;看谁在线&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;netstat -a：&lt;strong&gt;查看网络的联机状态&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ps  -aux：&lt;strong&gt;查看后台执行的程序&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;shutdown&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img data-src=&#34;https://tva2.sinaimg.cn/large/008jSNE7ly8grk6tpdxsyj30ni0hd426.jpg&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;sync：&lt;strong&gt;在内存中尚未更新的数据就会写入硬盘中&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;reboot:&lt;strong&gt;重启&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;halt,poweroff：&lt;strong&gt;关机&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
    </channel>
</rss>
